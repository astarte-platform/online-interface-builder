{"version":3,"sources":["hooks/useInterval.ts","hooks/useRelativeTime.ts","AlertManager.tsx","ConfigManager.tsx","astarte-client/models/Block/CustomBlock.ts","astarte-client/models/Block/NativeBlock.ts","astarte-client/models/Block/index.ts","astarte-client/models/Realm/index.ts","astarte-client/models/Token/index.ts","astarte-client/models/Device/index.ts","astarte-client/models/Flow/index.ts","astarte-client/models/Pipeline/validation.ts","astarte-client/models/Pipeline/index.ts","astarte-client/transforms/mapping.ts","astarte-client/models/Mapping/index.ts","astarte-client/transforms/interface.ts","astarte-client/models/Interface/index.ts","astarte-client/transforms/trigger.ts","astarte-client/models/Trigger/index.ts","astarte-client/transforms/dataTree.ts","astarte-client/transforms/device.ts","astarte-client/definitions/blocks/index.ts","astarte-client/types/events/AstarteDeviceEvent.ts","astarte-client/types/events/AstarteDeviceConnectedEvent.ts","astarte-client/types/events/AstarteDeviceDisconnectedEvent.ts","astarte-client/types/events/AstarteDeviceErrorEvent.ts","astarte-client/types/events/AstarteDeviceIncomingDataEvent.ts","astarte-client/types/events/AstarteDeviceUnsetPropertyEvent.ts","astarte-client/client.ts","astarte-client/index.ts","astarte-client/transforms/pipeline.ts","astarte-client/types/events/index.ts","components/Icon.tsx","components/MappingEditor.tsx","components/InterfaceEditor.tsx","InterfaceEditorPage.tsx","Sidebar.tsx","LoginPage.tsx","astarte-charts/providers/provider.ts","astarte-charts/dataKinds/ConnectedDevices.ts","astarte-charts/dataKinds/DeviceStats.ts","astarte-charts/providers/connectedDevices.ts","astarte-charts/index.ts","astarte-charts/providers/deviceStats.ts","astarte-charts/react/hooks/useChartProviders.ts","astarte-charts/react/ConnectedDevices/index.tsx","astarte-charts/react/PieChart/index.tsx","AstarteManager.tsx","hooks/useFetch.ts","components/WaitForData.ts","HomePage.tsx","ui/BackButton.tsx","ui/SingleCardPage.tsx","components/Empty.tsx","GroupsPage.tsx","components/modals/Confirm.tsx","GroupDevicesPage.tsx","ui/CheckableDeviceTable.tsx","NewGroupPage.tsx","TriggersPage.tsx","components/TriggerEditor/SimpleTriggerForm.tsx","components/TriggerEditor/TriggerActionForm.tsx","components/modals/Form.tsx","components/TriggerEditor/NewAmqpHeaderModal.tsx","components/TriggerEditor/NewHttpHeaderModal.tsx","components/TriggerEditor/EditAmqpHeaderModal.tsx","components/TriggerEditor/EditHttpHeaderModal.tsx","components/TriggerEditor/RemoveAmqpHeaderModal.tsx","components/TriggerEditor/RemoveHttpHeaderModal.tsx","components/TriggerEditor/index.tsx","NewTriggerPage.tsx","TriggerPage.tsx","InterfacesPage.tsx","InterfacePage.tsx","NewInterfacePage.tsx","components/Highlight.tsx","DevicesPage.tsx","Base64.ts","RegisterDevicePage.tsx","FlowInstancesPage.tsx","FlowDetailsPage.tsx","FlowConfigurationPage.tsx","PipelinesPage.tsx","PipelineSourcePage.tsx","models/NativeBlockModel.ts","components/NativeBlockWidget.tsx","components/NativeBlockFactory.tsx","components/VisualFlowEditor.tsx","NewPipelinePage.tsx","BlocksPage.tsx","BlockSourcePage.tsx","NewBlockPage.tsx","RealmSettingsPage.tsx","components/FullHeightCard.tsx","DeviceStatusPage/DeviceInfoCard.tsx","DeviceStatusPage/AliasesCard.tsx","DeviceStatusPage/MetadataCard.tsx","DeviceStatusPage/GroupsCard.tsx","DeviceStatusPage/IntrospectionCard.tsx","DeviceStatusPage/PreviousInterfacesCard.tsx","DeviceStatusPage/ExchangedBytesCard.tsx","DeviceStatusPage/DeviceStatusEventsCard.tsx","DeviceStatusPage/DeviceLiveEventsCard.tsx","DeviceStatusPage/AddToGroupModal.tsx","DeviceStatusPage/NewAliasModal.tsx","DeviceStatusPage/EditAliasModal.tsx","DeviceStatusPage/NewMetadataModal.tsx","DeviceStatusPage/EditMetadataModal.tsx","DeviceStatusPage/index.tsx","DeviceInterfaceValues.tsx","Router.tsx","ui/Snackbar.tsx","App.tsx","index.tsx"],"names":["callback","delay","useEffect","intervalId","setInterval","clearInterval","dayjs","extend","dayjsRelativeTime","dateTime","useState","fromNow","relativeTimeString","setRelativeTimeString","refreshRelativeTimeString","useCallback","useInterval","useAlertsContext","timeout","timersId","useRef","alerts","setAlerts","timersIdRef","current","forEach","clearTimeout","close","alert","currentAlerts","lengthBeforeRemove","length","filteredAlerts","filter","a","id","options","onClose","closeAll","show","message","uuidv4","timestamp","Date","now","timerId","window","setTimeout","splice","indexOf","push","state","concat","onOpen","showSuccess","opts","variant","showWarning","showError","showInfo","GlobalAlertsUtilsContext","createContext","GlobalAlertsStateContext","AlertBanner","alertRelativeTime","useRelativeTime","Col","xs","Alert","dismissible","className","AlertsBanner","Row","map","useAlerts","alertsContext","Alerts","GlobalAlertsProvider","children","props","alertUtilsContext","Provider","value","ConfigContext","useConfig","useContext","ConfigProvider","config","contextValue","useMemo","auth","methods","defaultMethod","defaultAuth","defaultRealm","features","flow","enableFlowPreview","AstarteCustomBlock","block","name","source","type","schema","this","dto","AstarteNativeBlock","beamModule","beam_module","toAstarteBlock","fromObject","AstarteRealm","RegExp","test","startsWith","channelsClaimRegex","httpClaimRegex","parseClaim","claimRegex","claim","exec","groups","action","resource","astarteTokenObjectSchema","yup","exp","integer","min","notRequired","iat","iss","a_aea","required","matches","a_ch","a_f","a_hka","a_pa","a_rma","AstarteToken","encodedToken","$claims","$expirationDate","$issueDate","$issuer","decodedToken","jwt","decode","complete","ignoreExpiration","tokenObj","validateSync","payload","appEngine","channels","houseKeeping","pairing","realmManagement","service","some","Object","values","serviceClaims","isExpired","hasAstarteClaims","token","isValid","generateMapValidation","keySchema","valueSchema","obj","_","isMap","Array","from","entries","every","key","isValidSync","astarteDeviceInterfaceStatsSchema","major","minor","when","is","then","otherwise","exchangedMessages","exchangedBytes","astarteDeviceObjectSchema","aliases","metadata","isConnected","introspection","totalReceivedMessages","totalReceivedBytes","hasCredentialsInhibited","of","defined","previousInterfaces","firstRegistration","firstCredentialsRequest","lastDisconnection","lastConnection","lastSeenIp","lastCredentialsRequestIp","AstarteDevice","validatedObj","has","hasNameAlias","get","AstarteFlow","pipeline","validatePipelineName","error","isString","warning","validatePipelineDescription","description","validatePipelineSchema","isPlainObject","validatePipelineSource","validation","errors","warnings","properties","property","AstartePipeline","pipelineValidation","Error","join","validatePipeline","fromAstarteMappingDTO","AstarteMapping","endpoint","reliability","retention","expiry","databaseRetentionPolicy","database_retention_policy","databaseRetentionTtl","database_retention_ttl","allowUnset","allow_unset","explicitTimestamp","explicit_timestamp","documentation","doc","toAstarteMappingDTO","mappingEndpointRegex","mappingEndpointParamRegex","astarteMappingObjectSchema","oneOf","lessThan","max","isEndpointParam","endpointPart","matchEndpointPart","part1","part2","abortEarly","endpoint1","endpoint2","zip","split","json","mapping","fromAstarteInterfaceDTO","AstarteInterface","interface_name","version_major","version_minor","ownership","aggregation","undefined","mappings","toAstarteInterfaceDTO","iface","cloneDeep","mappingDTO","stripAstarteInterfaceDTODefaults","interfaceNameRegex","mappingEndpointPlaceholderRegex","getMappingEndpointPrefix","slice","mappingsValidation","endpoints","placeholdersRegex","normalizedEndpoints","toLowerCase","replace","uniq","astarteInterfaceObjectSchema","strip","endpointsPrefixes","prefix","find","m","matchEndpoint","fromAstarteTriggerDTO","http_url","dtoAction","httpUrl","httpMethod","http_method","httpStaticHeaders","http_static_headers","ignoreSslErrors","ignore_ssl_errors","templateType","template_type","template","amqpExchange","amqp_exchange","amqpRoutingKey","amqp_routing_key","amqpStaticHeaders","amqp_static_headers","amqpMessageExpirationMilliseconds","amqp_message_expiration_ms","amqpMessagePriority","amqp_message_priority","amqpMessagePersistent","amqp_message_persistent","AstarteTrigger","simpleTriggers","simple_triggers","simpleTriggerDTO","on","deviceId","device_id","groupName","group_name","interfaceName","interfaceMajor","interface_major","matchPath","match_path","valueMatchOperator","value_match_operator","knownValue","known_value","toAstarteTriggerDTO","trigger","triggerAction","simpleTrigger","reservedHttpHeaders","generateObjectValidation","isUndefined","isObject","astarteTriggerHttpActionObjectSchema","headerName","includes","astarteTriggerAmqpActionObjectSchema","realm","getAmqpExchangeRegex","positive","astarteTriggerActionObjectSchema","astarteSimpleDeviceTriggerObjectSchema","astarteSimpleDataTriggerObjectSchema","matchMapping","ifacePathType","astarteSimpleTriggerObjectSchema","astarteTriggerObjectSchema","getEndpointDataType","matchedMapping","findEndpointMapping","isAstarteDataValue","isNull","getDataTreeKind","AstarteDataTreeLeafNode","interface","data","parentNode","dataKind","parent","linearizedData","interfaceData","prop","propValue","flat","isArray","lastData","last","orderBy","mapValues","valueTuple","AstarteDataTreeBranchNode","params","toPropertiesTreeNode","leafData","toDatastreamIndividualTreeNode","toDatastreamObjectTreeNode","sanitizedEndpoint","foundNode","child","node","getNode","getLeaves","leaf","toData","toLinearizedData","reduce","acc","toLastValue","toAstarteDataTree","omit","objProp","objPropValue","fromInterfaceStatsDTO","exchanged_msgs","exchanged_bytes","fromAstarteDeviceDTO","connected","credentials_inhibited","Map","total_received_msgs","total_received_bytes","previous_interfaces","first_registration","first_credentials_request","last_disconnection","last_connection","last_seen_ip","last_credentials_request_ip","AstarteDeviceEvent","arg","Number","isNaN","getTime","AstarteDeviceConnectedEvent","ip","event","device_ip_address","AstarteDeviceDisconnectedEvent","AstarteDeviceErrorEvent","errorName","error_name","isValidName","AstarteDeviceIncomingDataEvent","path","AstarteDeviceUnsetPropertyEvent","openNewSocketConnection","connectionParams","onErrorHanlder","onCloseHandler","socketUrl","Promise","resolve","phoenixSocket","PhoenixSocket","onError","e","connect","joinChannel","channelString","reject","channel","receive","err","leaveChannel","leave","registerTrigger","triggerPayload","astarteAPIurl","strings","baseUrl","keys","dict","result","i","isInteger","URL","AstarteClient","apiConfig","joinedChannels","listeners","onSocketClose","onSocketError","getConfigAuth","bind","getBlocks","getDeviceData","getDevicesStats","getInterface","getInterfaceMajors","getInterfaceNames","getTriggerNames","getTrigger","deleteTrigger","getAppengineHealth","getRealmManagementHealth","getPairingHealth","getFlowHealth","getPipeline","getPipelines","realmManagementHealth","realmManagementApiUrl","interfaces","interfaceMajors","triggers","appengineHealth","appEngineApiUrl","devicesStats","devices","deviceInfo","deviceData","groupDevices","deviceInGroup","pairingHealth","pairingApiUrl","registerDevice","deviceAgent","flowHealth","flowApiUrl","flows","flowInstance","pipelines","pipelineSource","blocks","blockSource","eventName","previousListeners","listener","$get","response","publicKey","jwt_public_key_pem","$put","$post","$delete","triggerName","endpointUri","query","details","limit","from_token","search","URLSearchParams","toString","device","nextToken","links","next","aliasKey","aliasValue","$patch","metadataKey","metadataValue","inhibit","getDeviceInfo","interfaceIntrospection","interfaceValues","deviceIds","encodedGroupName","encodeURIComponent","requestBody","hw_id","initialIntrospection","interfaceDescriptor","pick","initial_introspection","credentialsSecret","credentials_secret","flowName","instanceName","getPipelineNames","pipelineNames","all","pipelineId","isEmpty","staticBlocks","definitions","fetchedBlocks","allBlocks","uniqBy","b","blockId","blockDTO","url","axios","method","headers","Authorization","protocol","dispatch","socket","roomName","openSocketConnection","joinRoom","joinedChannel","eventHandler","jsonEvent","decodedEvent","decoders","decodedValue","decodeAnyOf","fromJSON","rooms","iconToClassName","add","arrowLeft","copyPaste","delete","edit","erase","home","logout","settings","statusOK","statusConnected","statusDisconnected","statusKO","statusNeverConnected","dangerIcons","as","icon","onClick","style","tooltip","tooltipPlacement","iconStyle","iconClassNames","cursor","iconElement","OverlayTrigger","hide","overlay","Tooltip","placement","astarteDataTypes","defaultMapping","interfaceType","interfaceAggregation","onChange","isPropertiesInterface","isDatastreamIndividualInterface","showMappingExpiry","showInterfaceDatabaseRetentionTtl","mappingValidationErrors","keyBy","inner","Form","sm","Group","controlId","Label","Control","target","autoComplete","isInvalid","Feedback","t","Check","label","checked","md","currentTarget","InputGroup","parseInt","Append","Text","FormControlWarning","reliabilityToLabel","unreliable","guaranteed","unique","retentionToLabel","discard","volatile","stored","databaseRetentionToLabel","no_ttl","use_ttl","MappingRow","onEdit","onDelete","Accordion","data-testid","Card","Toggle","eventKey","Header","Badge","Button","Collapse","Body","MappingModal","onCancel","onConfirm","mappingDraft","setMappingDraft","handleChange","newMapping","isValidMapping","Modal","size","centered","onHide","closeButton","Title","MappingEditor","Footer","disabled","formatJSON","JSON","stringify","checkValidJSONText","text","parse","defaultInterface","defaultDatastreamOptions","initialData","isSourceVisible","denyMajorChanges","interfaceDraft","setInterfaceDraft","toJSON","interfaceSource","setInterfaceSource","getInitialDatastreamOptions","datastreamOptions","setDatastreamOptions","isMappingModalVisible","setIsMappingModalVisible","mappingToEditIndex","setMappingToEditIndex","parseAstarteInterfaceJSON","parsedInterface","initialInterface","draftInterface","initialMapping","draftMapping","isEqual","handleInterfaceNameChange","draft","trim","handleInterfaceMajorChange","handleInterfaceMinorChange","clearMappingsOptions","handleInterfaceTypeChange","handleInterfaceAggregationChange","handleInterfaceOwnershipChange","handleInterfaceDescriptionChange","handleInterfaceDocumentationChange","handleInterfaceReliabilityChange","handleInterfaceExplicitTimestampChange","handleInterfaceRetentionChange","handleInterfaceExpiryChange","handleInterfaceDatabaseRetentionPolicyChange","handleInterfaceDatabaseRetentionTtlChange","handleAddMapping","handleEditMapping","mappingIndex","handleDeleteMapping","updatedMappings","index","handleConfirmEditMapping","handleInterfaceSourceChange","interfaceValidationErrors","isValidInterface","formattedInterfaceSource","formatJSONText","interfaceValidationWarnings","depth","computeInterfaceWarnings","isValidInterfaceSource","interfaceSourceError","mappingToEdit","nth","showInterfaceExpiry","Container","fluid","placeholder","readOnly","rows","Icon","isExistingMapping","canEdit","canDelete","InterfaceEditor","Sidebar","Nav","ApiStatus","healthy","NavItem","Brand","to","alt","src","Item","link","location","useLocation","isSelected","pathname","NavLink","Link","active","Separator","tokenValidationFeedback","tokenValidation","TokenForm","canSwitchLoginType","onSwitchLoginType","onLogin","setRealm","setJwt","isValidRealm","validate","canSubmitForm","AstartectlLink","href","rel","onSubmit","preventDefault","stopPropagation","searchParams","hashParams","access_token","OAuthForm","providerUrl","setProviderUrl","isValidProviderUrl","urlString","isValidUrl","dashboardLoginUrl","authUrl","oauthLoginUrl","client_id","response_type","redirect_uri","LeftColumn","lg","RightColumn","loginType","setLoginType","handleLoginTypeSwitch","newLoginType","navigate","useNavigate","ChartProvider","dataWrapper","$getData","getData","DataKindCtor","ConnectedDevices","DeviceStats","generateConnectedDevicesProvider","client","connected_devices","disconnected","total_devices","getAstarteClient","astarteConfig","astarteClient","setCredentials","getDeviceStats","currentInterfaces","totalBytes","totalMessages","interfacesBytes","sumBy","interfacesMessages","otherBytes","otherMessages","stats","Other","generateDeviceStatsProvider","useChartProviders","status","setStatus","setData","fetchData","providers","provider","providersData","refreshInterval","fetchDataInterval","refresh","ConnectedDevicesChart","height","width","showLegend","legendPosition","legendAlign","dataFetcher","chartData","noChartData","labels","datasets","providerData","backgroundColor","chartOptions","responsive","legend","display","position","align","PieChart","series","colors","Color","hsl","rgb","string","maintainAspectRatio","AstarteContext","useAstarte","AstarteProvider","session","localStorage","getItem","loadSession","setSession","astarteApiUrl","parseAstarteApiUrls","authConfig","clientConfig","merge","updateSession","newSession","setItem","_version","removeItem","saveSession","login","isAuthenticated","useFetch","initialFetchParams","setError","isReady","fetchedData","WaitForData","showRefreshing","fallback","errorFallback","ServiceStatusRow","messageCell","Spinner","animation","role","ApiStatusCard","appengine","showFlowStatus","Table","DevicesCard","connectedDevices","totalDevices","connectedDevicesProvider","noGutters","InterfaceList","onInterfaceClick","maxShownInterfaces","shownInterfaces","remainingInterfaces","InterfacesCard","interfaceList","onInstallInterfaceClick","TriggerList","maxShownTriggers","shownTriggers","remainingTriggers","TriggersCard","triggerList","onInstallTriggerClick","astarte","appEngineHealth","getConnectedDevices","refreshTimer","redirectToLastInterface","latestMajor","Math","cellSpacingClass","BackButton","aria-label","SingleCardPage","backLink","docsLink","title","Empty","onRetry","tryAgain","maxWidth","GroupsTable","groupMap","group","pageAlerts","fetchGroups","getGroupList","groupNames","fetchGroupPromises","getDevicesInGroup","catch","groupsDevices","set","groupsFetcher","ConfirmModal","cancelLabel","confirmLabel","confirmOnEnter","confirmVariant","isConfirming","handleKeyDown","onKeyDown","minWidth","deviceTable","deviceList","showModal","iconTooltip","lastEvent","toLocaleString","deviceTableRow","GroupDevicesPage","decodeURIComponent","useParams","selectedDevice","setSelectedDevice","isModalVisible","setIsModalVisible","isRemovingDevice","setIsRemovingDevice","devicesFetcher","closeModal","removeDevice","removeDeviceFromGroup","finally","selectedDeviceName","Confirm","Highlight","word","prev","DeviceTableRow","deviceAliases","selected","onToggleDevice","onToggleChange","aliasTag","alias","CheckableDeviceTable","selectedDevices","filteredDevices","hover","GroupNameFormGroup","onGroupNameChange","isValidGroupName","FilterInputBox","onFilterChange","srOnly","Prepend","setGroupName","deviceFilter","setDeviceFilter","Set","setSelectedDevices","isCreatingGroup","setIsCreatingGroup","getDevices","formAlerts","createGroup","handleDeviceToggle","previousSelection","newSelection","selectedDeviceCount","isValidForm","TriggerRow","ListGroup","LoadingRow","ErrorRow","triggersFetcher","triggerConditionToLabel","device_disconnected","device_connected","device_error","device_empty_cache_received","incoming_data","value_change","value_change_applied","path_created","path_removed","value_stored","triggerOperatorToLabel","contains","not_contains","defaultSimpleDeviceTrigger","defaultSimpleDataTrigger","SimpleTriggerForm","fetchInterface","fetchInterfaceMajors","interfacesName","isLoadingInterface","isLoadingInterfacesName","isLoadingInterfaceMajors","isReadOnly","simpleTriggerInterface","validationErrors","isDeviceTrigger","isDataTrigger","hasTargetDevice","hasTargetGroup","triggerTargetType","triggerInterfaceName","hasSelectedInterface","triggerValueMatchOperator","hasSelectedOperator","triggerMatchPath","triggerInterfaceType","triggerInterfaceAggregation","triggerInterfacePathType","handleTriggerTypeChange","handleTriggerConditionChange","handleTriggerTargetChange","handleTriggerTargetDeviceChange","handleTriggerTargetGroupChange","handleTriggerInterfaceNameChange","newSimpleTrigger","majors","handleTriggerInterfaceMajorChange","handleTriggerInterfacePathChange","handleTriggerInterfaceOperatorChange","handleTriggerInterfaceKnownValueChange","parsedValue","parseFloat","String","renderTriggerConditionOptions","option","renderInterfaceNameOptions","ifaceName","renderInterfaceMajorOptions","ifaceMajor","renderTriggerOperatorOptions","operators","operator","defaultTriggerHttpAction","defaultTriggerAmqpAction","TriggerActionForm","onAddAmqpHeader","onAddHttpHeader","onEditAmqpHeader","onEditHttpHeader","onRemoveAmqpHeader","onRemoveHttpHeader","isHttpAction","isAmqpAction","triggerPayloadType","triggerHttpHeaders","triggerAmqpHeaders","handleTriggerActionTypeChange","handleTriggerActionHttpMethodChange","handleTriggerActionHttpUrlChange","handleTriggerActionHttpIgnoreSSLErrorsChange","handleTriggerActionHttpPayloadTypeChange","handleTriggerActionHttpPayloadChange","handleTriggerActionAmqpExchangeChange","handleTriggerActionAmqpRoutingKeyChange","handleTriggerActionAmqpMessagePersistentChange","handleTriggerActionAmqpMessagePriorityChange","handleTriggerActionAmqpMessageExpirationMillisecondsChange","toUpperCase","headerValue","additionalMetaSchemas","metaSchemaDraft04","widgets","TextWidget","readonly","onBlur","onFocus","autofocus","rawErrors","autoFocus","list","examples","v","emptyValue","default","example","FormModal","liveValidate","transformErrors","uiSchema","React","formData","setFormData","hasSubmit","setHasSubmit","showErrorList","marginLeft","marginRight","newAmqpHeaderFormSchema","NewAmqpHeaderModal","newHttpHeaderFormSchema","NewHttpHeaderModal","editAmqpHeaderFormSchema","EditAmqpHeaderModal","targetHeader","editHttpHeaderFormSchema","EditHttpHeaderModal","RemoveAmqpHeaderModal","RemoveHttpHeaderModal","defaultTrigger","getNestedValidationErrors","mapKeys","pickBy","errorValue","fetchInterfacesName","triggerDraft","setTriggerDraft","triggerSource","setTriggerSource","triggerValidationErrors","setTriggerValidationErrors","triggerSourceError","setTriggerSourceError","setInterfacesName","setInterfaceMajors","triggerInterface","setTriggerInterface","setIsLoadingInterfacesName","setIsLoadingInterfaceMajors","setIsLoadingInterface","activeModal","setActiveModal","actionValidationErrors","simpleTriggerValidationErrors","handleFetchInterfacesName","names","handleFetchInterfaceMajors","handleFetchInterface","handleFetchInterfacesForTrigger","ifaceMajors","handleSimpleTriggerChange","handleActionChange","handlePatchActionAmqpHeaders","newHeaders","oldAmqpStaticHeaders","omitBy","handlePatchActionHttpHeaders","oldHttpStaticHeaders","handleTriggerNameChange","dismissModal","handleAddActionAmqpHeader","modal","handleConfirmNewAmqpHeaderModal","handleEditActionAmqpHeader","header","handleConfirmEditAmqpHeaderModal","handleRemoveActionAmqpHeader","handleConfirmRemoveAmqpHeaderModal","handleAddActionHttpHeader","handleConfirmNewHttpHeaderModal","handleEditActionHttpHeader","handleConfirmEditHttpHeaderModal","handleRemoveActionHttpHeader","handleConfirmRemoveHttpHeaderModal","handleTriggerSourceChange","triggerSourceJSON","formattedTriggerSource","context","isValidTrigger","spellCheck","setIsValidTrigger","isInstallingTrigger","setIsInstallingTrigger","setIsSourceVisible","installationAlerts","handleToggleSourceVisibility","isVisible","handleTriggerChange","updatedTrigger","handleInstallTrigger","installTrigger","handleTriggerEditorError","TriggerEditor","DeleteModal","isDeletingTrigger","confirmString","setConfirmString","setIsDeletingTrigger","showDeleteModal","setShowDeleteModal","deletionAlerts","triggerFetcher","showConfirmDeleteModal","hideConfirmDeleteModal","handleConfirmDeleteTrigger","InterfaceRow","fetchInterfacesInfo","interfaceNames","sort","reverse","fetchedInterfaces","sortedInterfaces","sortBy","interfacesInfoFetcher","isDeletingInterface","setIsValidInterface","isUpdatingInterface","setIsUpdatingInterface","setIsDeletingInterface","showUpdateModal","setShowUpdateModal","actionAlerts","pathParams","interfaceFetcher","showConfirmUpdateModal","hideConfirmUpdateModal","handleInterfaceChange","updatedInterface","handleConfirmUpdateInterface","updateInterface","handleConfirmDeleteInterface","deleteInterface","canUpdateInterface","InstallModal","isDraft","isInstallingInterface","setIsInstallingInterface","showInstallModal","setShowInstallModal","showConfirmInstallModal","hideConfirmInstallModal","handleConfirmInstallInterface","installInterface","chunk","Fragment","MAX_SHOWN_PAGES","matchMetadata","filterKey","filterValue","MatchedMetadata","filters","overflowWrap","DeviceRow","DeviceTable","TablePagination","activePage","canLoadMorePages","lastPage","onPageChange","endPage","floor","startingPage","items","number","Pagination","Prev","Next","FilterForm","onUpdateFilters","showConnected","showDisconnected","showNeverConnected","activeSinceDate","maxDate","date","customInput","setActivePage","showSidebar","setShowSidebar","setFilters","fetchDevices","fromToken","updatedDevices","previousDevices","pageCount","ceil","fetchAll","pagedDevices","matchFilters","pageDevices","handlePageChange","pageIndex","handleFilterUpdate","newFilters","charset","baseCode","newCharset","charCodeAt","fromCharCode","byteArrayToUrlSafeBase64","bytes","binaryArray","padding","padEnd","padStart","match","pasteSecret","secretCode","document","querySelector","selection","getSelection","rangeCount","removeAllRanges","range","createRange","selectNode","addRange","execCommand","ColNoLabel","otherProps","InterfaceIntrospectionRow","onRemove","IntrospectionControlRow","onAddInterface","initialState","setInterfaceDescriptor","InstrospectionTable","onRemoveInterface","NamespaceModal","handleConfirm","uuidv5","userString","userNamespace","pattern","initialDeviceId","setDeviceId","deviceSecret","setDeviceSecret","shouldSendIntrospection","setShouldSendIntrospection","introspectionInterfaces","setIntrospectionInterfaces","isRegisteringDevice","setRegisteringDevice","showNamespaceModal","setShowNamespaceModal","showCredentialSecretModal","setShowCredentialSecretModal","registrationAlerts","byteArray","base64string","binaryString","octects","urlSafeBase64ToByteArray","isValidDeviceId","generateRandomUUID","newDeviceID","deviceIntrospection","fromEntries","newDeviceId","fontSize","TableRow","instance","InstancesTable","instances","flowToConfirmDelete","setFlowToConfirmDelete","isDeletingFlow","setIsDeletingFlow","fetchInstances","getFlowInstances","instanceNames","getFlowDetails","instancesFetcher","handleDeleteFlow","deleteFlow","deleteFlowInstance","handleModalCancel","flowFetcher","language","showLineNumbers","useSearchParams","setFlow","isCreatingFlow","setIsCreatingFlow","parsedFlowConfig","createFlow","createNewFlowInstance","innerHTML","NewPipelineCard","onCreate","PipelineCard","onInstantiate","showLink","pipelinesFetcher","CardDeck","pipelineFetcher","isDeletingPipeline","setIsDeletingPipeline","deletePipeline","encodeValue","encodedValues","innerValue","NativeBlockModel","blockType","onSettingsClick","inPorts","outPorts","outPort","DefaultPortModel","in","alignment","PortModelAlignment","RIGHT","inPort","LEFT","isEmptyValue","NodeModel","NativeBlockWidget","engine","hasSettings","getInPorts","getOutPorts","classes","data-default-node-name","port","getOptions","NativeBlockFactory","blockDefinitions","updateDefinitions","model","AbstractReactFactory","filterSortBlocks","block1","block2","BlockMenuItem","onDragStart","dataTransfer","draggable","EditorSidebar","VisualFlowEditor","onNodeSettingsClick","nodeFactory","createEngine","getNodeFactories","registerFactory","setModel","getEngine","addBlock","newNode","generateModel","setPosition","x","y","addNode","repaintCanvas","onDragOver","onDrop","blockName","getRelativeMousePoint","ajv","Ajv","schemaId","addMetaSchema","CommandRow","DiagramModel","editorModel","isCreatingPipeline","setIsCreatingPipeline","setBlocks","setPipeline","astarteBlocks","containerBlock","container","unset","containerProducer","containerConsumer","parsedBlocks","schemaObject","createPipeline","registerPipeline","isValidSchema","compile","blockSettingsClickHandler","blockDefinition","setLocked","getProperties","setProperties","isValidPipelineName","isValidSource","seenIds","chain","sources","getNodes","sourceBlock","nextBlock","prevBlock","loopCounter","nextLinks","getTargetPort","getParent","toScript","nodeModelToSource","NewBlockCard","blockTypeToLabel","consumer","producer","producer_consumer","BlockCard","onShow","blocksFetcher","blockFetcher","getBlock","isDeletingBlock","setIsDeletingBlock","deleteBlock","setBlock","isValidated","setIsValidated","isCreatingBlock","setIsCreatingBlock","creationAlerts","createBlock","newBlock","registerBlock","isValidBlockName","isValidBlockSource","isValidBlockType","isValidBlockSchema","isJSON","isValidBlock","handleSubmit","noValidate","custom","RealmSettingsForm","initialValues","isUpdatingSettings","setValues","canSubmit","draftRealmSettings","setDraftRealmSettings","setIsUpdatingSettings","authConfigFetcher","handleFormSubmit","realmSettings","applyNewSettings","updateConfigAuth","FullHeightCard","remainingProps","ConnectionStatus","statusString","DeviceInfoCard","onInhibitCredentialsClick","onEnableCredentialsClick","onWipeCredentialsClick","connectionStatus","AliasesTable","onEditAliasClick","onRemoveAliasClick","AliasesCard","onNewAliasClick","MetadataTable","onEditMetadataClick","onRemoveMetadataClick","MetadataCard","onNewMetadataClick","GroupsCard","showAddToGropButton","onAddToGroupClick","IntrospectionTable","IntrospectionCard","PreviousInterfacesTable","PreviousInterfacesCard","StatsTableRow","toFixed","bytesPercent","messages","messagesPercent","ExchangedBytesCard","deviceStatsProvider","fullList","computedStats","interfaceBytes","interfaceMessages","interfaceStats","xl","DeviceStatusEventsCard","propertyArray","Timestamp","formattedTimestamp","toISOString","substring","deviceErrorNameToString","astarteDeviceEventBody","AstarteDeviceEventDelegate","SystemEventDelegate","level","EventDelegate","DeviceLiveEventsView","deviceEvents","setDeviceEvents","registerEvent","oldEvents","sendErrorMessage","errorMessage","sendInfoMessage","infoMessage","handleSocketError","handleSocketClose","addListener","onEventReceived","onErrorMessage","onInfoMessage","salt","random","listenForEvents","connectionTriggerPayload","simple_trigger","disconnectionTriggerPayload","errorTriggerPayload","dataTriggerPayload","registerVolatileTrigger","watchDeviceEvents","removeListener","joinedRooms","room","leaveRoom","DeviceLiveEventsCard","AddToGroupModal","isAddingToGroup","selectedGroup","setSelectedGroup","aliasFormSchema","NewAliasModal","isAddingAlias","aliasValueFormSchema","EditAliasModal","targetAlias","isUpdatingAlias","metadataFormSchema","NewMetadataModal","isAddingMetadata","metadataValueFormSchema","EditMetadataModal","targetMetadata","isUpdatingMetadata","isAddToGroupModal","kind","isNewAliasModal","isEditAliasModal","isDeleteAliasModal","isNewMetadataModal","isEditMetadataModal","isDeleteMetadataModal","isDeviceReregistrationModal","deviceFetcher","devicePageAlers","unjoinedGroups","joinedGroups","inhibitDeviceCredentialsRequests","wipeDeviceCredentials","addDeviceToGroup","handleAliasUpdate","insertDeviceAlias","handleAliasDeletion","deleteDeviceAlias","handleMetadataUpdate","insertDeviceMetadata","handleMetadataDeletion","deleteDeviceMetadata","fullInterfaceList","isWipingCredentials","isDeletingAlias","isDeletingMetadata","formatAstarteData","isBoolean","isNumber","PropertyTree","treeNode","IndividualDatastreamTable","dataValues","dataValue","ObjectDatastreamTable","dataTreeNode","treeData","objectProperties","orderedData","ObjectTableList","dataTreeLeaves","dataTreeLeaf","InterfaceData","deviceDataFetcher","getDeviceDataTree","AttemptLogin","hash","succesfulLogin","Logout","Login","requestedLoginType","LoginPage","PrivateRoute","element","HomePage","TriggersPage","NewTriggerPage","TriggerPage","InterfacesPage","NewInterfacePage","InterfacePage","DevicesPage","RegisterDevicePage","DeviceStatusPage","DeviceInterfaceValues","GroupsPage","NewGroupPage","FlowInstancesPage","FlowConfigurationPage","FlowDetailsPage","PipelinesPage","NewPipelinePage","PipelineSourcePage","BlocksPage","NewBlockPage","BlockSourcePage","RealmSettingsPage","SnackbarAlert","Toast","DashboardSidebar","healthFetcher","apiChecks","isApiHealthy","Dashboard","StandaloneEditor","InterfaceEditorPage","Snackbar","fetch","astarte_api_url","appengine_api_url","realm_management_api_url","pairing_api_url","flow_api_url","enable_flow_preview","default_auth","default_realm","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.6f564d64.chunk.js","sourcesContent":["/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport { useEffect } from 'react';\n\nexport default (callback: () => void, delay: number): void => {\n  useEffect(() => {\n    if (delay == null) {\n      return () => null;\n    }\n    const intervalId = setInterval(callback, delay);\n    return () => clearInterval(intervalId);\n  }, [callback, delay]);\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport { useCallback, useState } from 'react';\nimport dayjs from 'dayjs';\nimport dayjsRelativeTime from 'dayjs/plugin/relativeTime';\n\nimport useInterval from './useInterval';\n\nimport type { Timestamp } from '../types';\n\ndayjs.extend(dayjsRelativeTime);\n\nexport default (dateTime: Timestamp): string => {\n  const [relativeTimeString, setRelativeTimeString] = useState(dayjs(dateTime).fromNow());\n  const refreshRelativeTimeString = useCallback(() => {\n    setRelativeTimeString(dayjs(dateTime).fromNow());\n  }, [dateTime]);\n  useInterval(refreshRelativeTimeString, 1000);\n  return relativeTimeString;\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, {\n  createContext,\n  useCallback,\n  useEffect,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Alert, Row, Col } from 'react-bootstrap';\n\nimport useRelativeTime from './hooks/useRelativeTime';\n\nimport type { TimestampMilliseconds, UUIDv4 } from './types';\n\ninterface HookConfig {\n  timeout?: number;\n}\n\ninterface IAlertOptions {\n  onClose?: () => void;\n  onOpen?: () => void;\n  timeout?: number;\n  variant?: 'info' | 'danger' | 'warning' | 'success';\n}\n\nexport interface IAlert {\n  id: UUIDv4;\n  message: string;\n  options: IAlertOptions;\n  timestamp: TimestampMilliseconds;\n  close: () => void;\n}\n\nconst useAlertsContext = ({ timeout }: HookConfig = {}) => {\n  const timersId = useRef<number[]>([]);\n  const [alerts, setAlerts] = useState<IAlert[]>([]);\n\n  useEffect(() => {\n    const timersIdRef = timersId.current;\n    return () => timersIdRef.forEach(clearTimeout);\n  }, []);\n\n  const close = useCallback(\n    (alert: IAlert) => {\n      setAlerts((currentAlerts) => {\n        const lengthBeforeRemove = currentAlerts.length;\n        const filteredAlerts = currentAlerts.filter((a) => a.id !== alert.id);\n        if (lengthBeforeRemove > filteredAlerts.length && alert.options.onClose) {\n          alert.options.onClose();\n        }\n        return filteredAlerts;\n      });\n    },\n    [setAlerts],\n  );\n\n  const closeAll = useCallback(() => {\n    alerts.forEach(close);\n  }, [alerts, close]);\n\n  const show = useCallback(\n    (message: string, options: IAlertOptions) => {\n      const alert: IAlert = {\n        id: uuidv4(),\n        message,\n        options: {\n          ...options,\n        },\n        timestamp: Date.now(),\n        close: () => close(alert),\n      };\n      if (alert.options.timeout) {\n        const timerId = window.setTimeout(() => {\n          close(alert);\n          timersId.current.splice(timersId.current.indexOf(timerId), 1);\n        }, alert.options.timeout);\n        timersId.current.push(timerId);\n      }\n      setAlerts((state) => state.concat(alert));\n      if (alert.options.onOpen) {\n        alert.options.onOpen();\n      }\n      return alert;\n    },\n    [close, setAlerts],\n  );\n\n  const showSuccess = useCallback(\n    (message: string, options: IAlertOptions = {}) => {\n      const opts: IAlertOptions = {\n        ...options,\n        variant: 'success',\n        timeout: timeout || 0,\n      };\n      return show(message, opts);\n    },\n    [show],\n  );\n\n  const showWarning = useCallback(\n    (message: string, options: IAlertOptions = {}) => {\n      const opts: IAlertOptions = {\n        ...options,\n        variant: 'warning',\n        timeout: timeout || 0,\n      };\n      return show(message, opts);\n    },\n    [show],\n  );\n\n  const showError = useCallback(\n    (message: string, options: IAlertOptions = {}) => {\n      const opts: IAlertOptions = {\n        ...options,\n        variant: 'danger',\n        timeout: timeout || 0,\n      };\n      return show(message, opts);\n    },\n    [show],\n  );\n\n  const showInfo = useCallback(\n    (message: string, options: IAlertOptions = {}) => {\n      const opts: IAlertOptions = {\n        ...options,\n        variant: 'info',\n        timeout: timeout || 0,\n      };\n      return show(message, opts);\n    },\n    [show],\n  );\n\n  return {\n    alerts,\n    close,\n    closeAll,\n    showSuccess,\n    showWarning,\n    showError,\n    showInfo,\n  };\n};\n\ntype IAlertsContext = ReturnType<typeof useAlertsContext>;\n\ntype IAlertsUtils = Omit<IAlertsContext, 'alerts'>;\ntype IAlertsState = IAlertsContext['alerts'];\n\nconst GlobalAlertsUtilsContext = createContext<React.RefObject<IAlertsUtils> | null>(null);\nconst GlobalAlertsStateContext = createContext<IAlertsState>([]);\n\ninterface GlobalAlertsProviderProps {\n  children: React.ReactNode;\n}\n\nconst GlobalAlertsProvider = ({\n  children,\n  ...props\n}: GlobalAlertsProviderProps): React.ReactElement => {\n  const alertUtilsContext = useRef<IAlertsUtils | null>(null);\n  const {\n    alerts,\n    close,\n    closeAll,\n    showSuccess,\n    showWarning,\n    showError,\n    showInfo,\n  } = useAlertsContext({ timeout: 5000 });\n\n  alertUtilsContext.current = {\n    close,\n    closeAll,\n    showSuccess,\n    showWarning,\n    showError,\n    showInfo,\n  };\n\n  return (\n    <GlobalAlertsUtilsContext.Provider value={alertUtilsContext} {...props}>\n      <GlobalAlertsStateContext.Provider value={alerts} {...props}>\n        {children}\n      </GlobalAlertsStateContext.Provider>\n    </GlobalAlertsUtilsContext.Provider>\n  );\n};\n\ninterface AlertBannerProps {\n  alert: IAlert;\n}\n\nconst AlertBanner = ({ alert }: AlertBannerProps) => {\n  const alertRelativeTime = useRelativeTime(alert.timestamp);\n  return (\n    <Col xs={12}>\n      <Alert\n        variant={alert.options.variant}\n        onClose={alert.close}\n        dismissible\n        className=\"d-flex justify-content-between flex-wrap\"\n      >\n        {alert.message}\n        <div className=\"col text-right\">{alertRelativeTime}</div>\n      </Alert>\n    </Col>\n  );\n};\n\ninterface AlertsBannerProps {\n  alerts: IAlert[];\n}\n\nconst AlertsBanner = ({ alerts }: AlertsBannerProps) => (\n  <Row>\n    {alerts.map((alert) => (\n      <AlertBanner key={alert.id} alert={alert} />\n    ))}\n  </Row>\n);\n\nexport const useAlerts = (): IAlertsContext & { Alerts: React.FC } => {\n  const alertsContext = useAlertsContext();\n  const Alerts = () => <AlertsBanner alerts={alertsContext.alerts} />;\n  return { ...alertsContext, Alerts };\n};\n\nexport const useGlobalAlerts = (): IAlertsUtils => {\n  const alertContext = useContext(GlobalAlertsUtilsContext) as React.RefObject<IAlertsUtils>;\n  return useMemo(() => alertContext.current, [alertContext]) as IAlertsUtils;\n};\n\nexport const useGlobalAlertsState = (): IAlertsState => useContext(GlobalAlertsStateContext);\n\nexport default GlobalAlertsProvider;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { createContext, useContext, useMemo } from 'react';\n\nimport type { DashboardConfig } from './types';\n\ntype ConfigContextValue = {\n  auth: {\n    methods: DashboardConfig['auth'];\n    defaultMethod: 'oauth' | 'token';\n    defaultRealm?: string;\n  };\n  features: {\n    flow: boolean;\n  };\n};\n\nconst ConfigContext: React.Context<ConfigContextValue> = createContext(null) as any;\n\ninterface ConfigProviderProps {\n  children: React.ReactNode;\n  config: DashboardConfig;\n}\n\nconst ConfigProvider = ({\n  children,\n  config,\n  ...props\n}: ConfigProviderProps): React.ReactElement => {\n  const contextValue = useMemo(\n    () => ({\n      auth: {\n        methods: config.auth,\n        defaultMethod: config.defaultAuth || 'token',\n        defaultRealm: config.defaultRealm,\n      },\n      features: {\n        flow: !!config.enableFlowPreview,\n      },\n    }),\n    [config],\n  );\n\n  return (\n    <ConfigContext.Provider value={contextValue} {...props}>\n      {children}\n    </ConfigContext.Provider>\n  );\n};\n\nconst useConfig = (): ConfigContextValue => useContext(ConfigContext);\n\nexport { useConfig };\n\nexport default ConfigProvider;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport type { AstarteBlockType, AstarteCustomBlockDTO } from '../../types';\n\nexport class AstarteCustomBlock {\n  name: string;\n\n  source: string;\n\n  type: AstarteBlockType;\n\n  schema: Record<string, unknown>;\n\n  constructor(block: AstarteCustomBlockDTO) {\n    this.name = block.name;\n    this.source = block.source;\n    this.type = block.type;\n    this.schema = block.schema;\n  }\n\n  static fromObject(dto: AstarteCustomBlockDTO): AstarteCustomBlock {\n    return new AstarteCustomBlock(dto);\n  }\n}\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport type { AstarteBlockType, AstarteNativeBlockDTO } from '../../types';\n\nexport class AstarteNativeBlock {\n  name: string;\n\n  type: AstarteBlockType;\n\n  schema: Record<string, unknown>;\n\n  beamModule: string;\n\n  constructor(block: AstarteNativeBlockDTO) {\n    this.name = block.name;\n    this.type = block.type;\n    this.schema = block.schema;\n    this.beamModule = block.beam_module;\n  }\n\n  static fromObject(dto: AstarteNativeBlockDTO): AstarteNativeBlock {\n    return new AstarteNativeBlock(dto);\n  }\n}\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport { AstarteCustomBlock } from './CustomBlock';\nimport { AstarteNativeBlock } from './NativeBlock';\n\nimport type { AstarteBlockDTO } from '../../types';\n\nexport type AstarteBlock = AstarteNativeBlock | AstarteCustomBlock;\n\nexport const toAstarteBlock = (dto: AstarteBlockDTO): AstarteBlock => {\n  if ('beam_module' in dto) {\n    return AstarteNativeBlock.fromObject(dto);\n  }\n  return AstarteCustomBlock.fromObject(dto);\n};\n\nexport { AstarteCustomBlock, AstarteNativeBlock };\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nconst isValidRealmName = (name: string): boolean =>\n  RegExp('^[a-z][a-z0-9]{0,47}$').test(name) &&\n  !name.startsWith('astarte') &&\n  !name.startsWith('system');\n\nexport const AstarteRealm = {\n  isValidName: isValidRealmName,\n};\n","/* eslint-disable camelcase */\n/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport jwt from 'jsonwebtoken';\nimport * as yup from 'yup';\n\ninterface AstarteTokenObject {\n  exp?: number;\n  iat?: number;\n  iss?: string;\n  a_aea?: string[];\n  a_ch?: string[];\n  a_f?: string[];\n  a_hka?: string[];\n  a_pa?: string[];\n  a_rma?: string[];\n}\n\nconst channelsClaimRegex = /^(?<action>JOIN|WATCH|\\.\\*)::(?<resource>.+)$/;\nconst httpClaimRegex = /^(?<action>DELETE|GET|PATCH|POST|PUT|\\.\\*)::(?<resource>.+)$/;\n\ntype ChannelsAction = 'JOIN' | 'WATCH';\ntype HTTPAction = 'DELETE' | 'GET' | 'PATCH' | 'POST' | 'PUT';\n\ntype Claim = {\n  action: RegExp;\n  resource: RegExp;\n};\n\ntype Claims = {\n  appEngine: Claim[];\n  channels: Claim[];\n  flow: Claim[];\n  houseKeeping: Claim[];\n  pairing: Claim[];\n  realmManagement: Claim[];\n};\n\nconst parseClaim = (claimRegex: RegExp, claim: string): Claim => {\n  const {\n    // @ts-expect-error incorrect type for RegExp.exec\n    groups: { action, resource },\n  } = claimRegex.exec(claim);\n  return {\n    action: new RegExp(action),\n    resource: new RegExp(resource),\n  };\n};\n\nconst astarteTokenObjectSchema: yup.ObjectSchema<AstarteTokenObject> = yup\n  .object({\n    exp: yup.number().integer().min(0).notRequired(),\n    iat: yup.number().integer().min(0).notRequired(),\n    iss: yup.string().notRequired(),\n    a_aea: yup.array(yup.string().required().matches(httpClaimRegex)),\n    a_ch: yup.array(yup.string().required().matches(channelsClaimRegex)),\n    a_f: yup.array(yup.string().required().matches(httpClaimRegex)),\n    a_hka: yup.array(yup.string().required().matches(httpClaimRegex)),\n    a_pa: yup.array(yup.string().required().matches(httpClaimRegex)),\n    a_rma: yup.array(yup.string().required().matches(httpClaimRegex)),\n  })\n  .required();\n\nexport class AstarteToken {\n  private $claims: Claims;\n\n  private $expirationDate: Date | null;\n\n  private $issueDate: Date | null;\n\n  private $issuer: string | null;\n\n  constructor(encodedToken: string) {\n    // @ts-expect-error wrong type for decode options\n    const decodedToken = jwt.decode(encodedToken, { complete: true, ignoreExpiration: true });\n    const tokenObj: AstarteTokenObject = astarteTokenObjectSchema.validateSync(\n      decodedToken && decodedToken.payload,\n    );\n    this.$expirationDate = tokenObj.exp ? new Date(tokenObj.exp * 1000) : null;\n    this.$issueDate = tokenObj.iat ? new Date(tokenObj.iat * 1000) : null;\n    this.$issuer = tokenObj.iss || null;\n    this.$claims = {\n      appEngine: (tokenObj.a_aea || []).map((claim) => parseClaim(httpClaimRegex, claim)),\n      channels: (tokenObj.a_ch || []).map((claim) => parseClaim(channelsClaimRegex, claim)),\n      flow: (tokenObj.a_f || []).map((claim) => parseClaim(httpClaimRegex, claim)),\n      houseKeeping: (tokenObj.a_hka || []).map((claim) => parseClaim(httpClaimRegex, claim)),\n      pairing: (tokenObj.a_pa || []).map((claim) => parseClaim(httpClaimRegex, claim)),\n      realmManagement: (tokenObj.a_rma || []).map((claim) => parseClaim(httpClaimRegex, claim)),\n    };\n  }\n\n  can(service: keyof Claims, action: ChannelsAction | HTTPAction, resource: string): boolean {\n    return this.$claims[service].some(\n      (claim) => claim.action.test(action) && claim.resource.test(resource),\n    );\n  }\n\n  get hasAstarteClaims(): boolean {\n    return Object.values(this.$claims).some((serviceClaims) => serviceClaims.length > 0);\n  }\n\n  get isExpired(): boolean {\n    return this.$expirationDate != null && this.$expirationDate <= new Date();\n  }\n\n  get isValid(): boolean {\n    return !this.isExpired && this.hasAstarteClaims;\n  }\n\n  static validate(encodedToken: string): 'valid' | 'expired' | 'noAstarteClaims' | 'invalid' {\n    try {\n      const token = new AstarteToken(encodedToken);\n      if (token.isValid) {\n        return 'valid';\n      }\n      if (token.isExpired) {\n        return 'expired';\n      }\n      if (!token.hasAstarteClaims) {\n        return 'noAstarteClaims';\n      }\n      return 'invalid';\n    } catch {\n      return 'invalid';\n    }\n  }\n}\n","/* eslint-disable no-template-curly-in-string */\n/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport * as yup from 'yup';\nimport _ from 'lodash';\n\nexport interface AstarteDeviceInterfaceStats {\n  name: string;\n  major: number;\n  minor: number;\n  exchangedMessages: number;\n  exchangedBytes: number;\n}\n\nexport interface AstarteDeviceObject {\n  id: string;\n\n  aliases: Map<string, string>;\n\n  metadata: Map<string, string>;\n\n  isConnected: boolean;\n\n  introspection: Map<AstarteDeviceInterfaceStats['name'], AstarteDeviceInterfaceStats>;\n\n  totalReceivedMessages: number;\n\n  totalReceivedBytes: number;\n\n  hasCredentialsInhibited: boolean;\n\n  groups: string[];\n\n  previousInterfaces: AstarteDeviceInterfaceStats[];\n\n  firstRegistration?: Date;\n\n  firstCredentialsRequest?: Date;\n\n  lastDisconnection?: Date;\n\n  lastConnection?: Date;\n\n  lastSeenIp?: string;\n\n  lastCredentialsRequestIp?: string;\n}\n\nconst generateMapValidation = <K, V>(keySchema: yup.Schema<K>, valueSchema: yup.Schema<V>) => (\n  obj: unknown,\n) =>\n  _.isMap(obj) &&\n  Array.from(obj.entries()).every(\n    ([key, value]) => keySchema.isValidSync(key) && valueSchema.isValidSync(value),\n  );\n\nconst astarteDeviceInterfaceStatsSchema: yup.ObjectSchema<AstarteDeviceInterfaceStats> = yup\n  .object({\n    name: yup.string().required(),\n    major: yup.number().integer().min(0).required(),\n    minor: yup\n      .number()\n      .integer()\n      .min(0)\n      .required()\n      .when('major', {\n        is: 0,\n        then: yup.number().integer().min(1).required(),\n        otherwise: yup.number().integer().min(0).required(),\n      }),\n    exchangedMessages: yup.number().integer().min(0).required(),\n    exchangedBytes: yup.number().integer().min(0).required(),\n  })\n  .required();\n\nconst astarteDeviceObjectSchema: yup.ObjectSchema<AstarteDeviceObject> = yup\n  .object({\n    id: yup.string().required(),\n    aliases: yup\n      .mixed<AstarteDeviceObject['aliases']>()\n      .required()\n      .test(\n        'aliases-values',\n        '${path} must be a Map of string -> string',\n        generateMapValidation(yup.string().required(), yup.string().required()),\n      ),\n    metadata: yup\n      .mixed<AstarteDeviceObject['metadata']>()\n      .required()\n      .test(\n        'metadata-values',\n        '${path} must be a Map of string -> string',\n        generateMapValidation(yup.string().required(), yup.string().required()),\n      ),\n    isConnected: yup.boolean().required(),\n    introspection: yup\n      .mixed<AstarteDeviceObject['introspection']>()\n      .required()\n      .test(\n        'introspection-values',\n        '${path} must be a Map of string -> interface stats object',\n        generateMapValidation(yup.string().required(), astarteDeviceInterfaceStatsSchema),\n      ),\n    totalReceivedMessages: yup.number().integer().min(0).required(),\n    totalReceivedBytes: yup.number().integer().min(0).required(),\n    hasCredentialsInhibited: yup.boolean().required(),\n    groups: yup.array().of(yup.string().required()).defined(),\n    previousInterfaces: yup.array().of(astarteDeviceInterfaceStatsSchema).defined(),\n    firstRegistration: yup.date().notRequired(),\n    firstCredentialsRequest: yup.date().notRequired(),\n    lastDisconnection: yup.date().notRequired(),\n    lastConnection: yup.date().notRequired(),\n    lastSeenIp: yup.string().notRequired(),\n    lastCredentialsRequestIp: yup.string().notRequired(),\n  })\n  .required();\n\ntype AstarteDeviceConnectionStatus = 'never_connected' | 'connected' | 'disconnected';\n\nexport class AstarteDevice {\n  id: string;\n\n  aliases: Map<string, string>;\n\n  metadata: Map<string, string>;\n\n  isConnected: boolean;\n\n  introspection: Map<AstarteDeviceInterfaceStats['name'], AstarteDeviceInterfaceStats>;\n\n  totalReceivedMessages: number;\n\n  totalReceivedBytes: number;\n\n  hasCredentialsInhibited: boolean;\n\n  groups: string[];\n\n  previousInterfaces: AstarteDeviceInterfaceStats[];\n\n  firstRegistration?: Date;\n\n  firstCredentialsRequest?: Date;\n\n  lastDisconnection?: Date;\n\n  lastConnection?: Date;\n\n  lastSeenIp?: string;\n\n  lastCredentialsRequestIp?: string;\n\n  constructor(obj: AstarteDeviceObject) {\n    const validatedObj = astarteDeviceObjectSchema.validateSync(obj);\n    this.id = validatedObj.id;\n    this.aliases = validatedObj.aliases;\n    this.metadata = validatedObj.metadata;\n    this.isConnected = validatedObj.isConnected;\n    this.introspection = validatedObj.introspection;\n    this.totalReceivedMessages = validatedObj.totalReceivedMessages;\n    this.totalReceivedBytes = validatedObj.totalReceivedBytes;\n    this.hasCredentialsInhibited = validatedObj.hasCredentialsInhibited;\n    this.groups = validatedObj.groups;\n    this.previousInterfaces = validatedObj.previousInterfaces;\n    this.firstRegistration = validatedObj.firstRegistration;\n    this.firstCredentialsRequest = validatedObj.firstCredentialsRequest;\n    this.lastDisconnection = validatedObj.lastDisconnection;\n    this.lastConnection = validatedObj.lastConnection;\n    this.lastSeenIp = validatedObj.lastSeenIp;\n    this.lastCredentialsRequestIp = validatedObj.lastCredentialsRequestIp;\n  }\n\n  get hasNameAlias(): boolean {\n    return this.aliases.has('name');\n  }\n\n  get name(): string {\n    if (this.hasNameAlias) {\n      return this.aliases.get('name') as string;\n    }\n    return this.id;\n  }\n\n  get connectionStatus(): AstarteDeviceConnectionStatus {\n    if (this.lastConnection == null) {\n      return 'never_connected';\n    }\n    return this.isConnected ? 'connected' : 'disconnected';\n  }\n}\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport { AstarteFlowDTO } from '../../types';\n\nexport class AstarteFlow {\n  name: string;\n\n  pipeline: string;\n\n  config?: {\n    [key: string]: any;\n  };\n\n  constructor(flow: AstarteFlowDTO) {\n    this.name = flow.name;\n    this.pipeline = flow.pipeline;\n    if (flow.config != null) {\n      this.config = flow.config;\n    }\n  }\n\n  static fromObject(dto: AstarteFlowDTO): AstarteFlow {\n    return new AstarteFlow(dto);\n  }\n}\n","/*\n   This file is part of Astarte.\n   Copyright 2020 Ispirata Srl\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport _ from 'lodash';\n\nimport { AstartePipeline } from './index';\nimport type { AstarteValidationResult, AstarteValidationResults } from '../../types';\n\nconst validatePipelineName = (name: AstartePipeline['name']): AstarteValidationResult => {\n  let error;\n  let warning;\n  const isValid = _.isString(name);\n  if (!isValid) {\n    error = 'Pipeline name must be a string';\n  }\n  return { isValid, error, warning };\n};\n\nconst validatePipelineDescription = (\n  description: AstartePipeline['description'],\n): AstarteValidationResult => {\n  let error;\n  let warning;\n  const isValid = _.isString(description);\n  if (!isValid) {\n    error = 'Pipeline description must be a string';\n  }\n  return { isValid, error, warning };\n};\n\nconst validatePipelineSchema = (schema: AstartePipeline['schema']): AstarteValidationResult => {\n  let error;\n  let warning;\n  const isValid = _.isPlainObject(schema);\n  if (!isValid) {\n    error = 'Pipeline schema must be a string';\n  }\n  return { isValid, error, warning };\n};\n\nconst validatePipelineSource = (source: AstartePipeline['source']): AstarteValidationResult => {\n  let error;\n  let warning;\n  const isValid = _.isString(source);\n  if (!isValid) {\n    error = 'Pipeline source must be a string';\n  }\n  return { isValid, error, warning };\n};\n\nconst validatePipeline = (pipeline: AstartePipeline): AstarteValidationResults => {\n  const validation: AstarteValidationResults = {\n    isValid: true,\n    errors: [],\n    warnings: [],\n    properties: {},\n  };\n  validation.properties.name = validatePipelineName(pipeline.name);\n  validation.properties.description = validatePipelineDescription(pipeline.description);\n  validation.properties.schema = validatePipelineSchema(pipeline.schema);\n  validation.properties.source = validatePipelineSource(pipeline.source);\n\n  Object.values(validation.properties).forEach((property) => {\n    if (!property.isValid) {\n      validation.isValid = false;\n    }\n    if (property.error) {\n      validation.errors.push(property.error);\n    }\n    if (property.warning) {\n      validation.warnings.push(property.warning);\n    }\n  });\n\n  if (!validation.isValid && validation.errors.length === 0) {\n    validation.errors.push('Pipeline is not valid');\n  }\n\n  return validation;\n};\n\nexport default {\n  validatePipeline,\n  validatePipelineName,\n  validatePipelineDescription,\n  validatePipelineSchema,\n  validatePipelineSource,\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport validation from './validation';\n\nexport class AstartePipeline {\n  name: string;\n\n  description: string;\n\n  schema: {\n    [key: string]: any;\n  };\n\n  source: string;\n\n  constructor(obj: AstartePipeline) {\n    const pipelineValidation = validation.validatePipeline(obj);\n    if (!pipelineValidation.isValid) {\n      throw new Error(pipelineValidation.errors.join('\\n'));\n    }\n    this.name = obj.name;\n    this.description = obj.description;\n    this.schema = obj.schema;\n    this.source = obj.source;\n  }\n\n  static validatePipeline = validation.validatePipeline;\n\n  static validatePipelineName = validation.validatePipelineName;\n\n  static validatePipelineDescription = validation.validatePipelineDescription;\n\n  static validatePipelineSchema = validation.validatePipelineSchema;\n\n  static validatePipelineSource = validation.validatePipelineSource;\n}\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport { AstarteMapping } from '../models/Mapping';\nimport type { AstarteMappingDTO } from '../types';\n\nexport const fromAstarteMappingDTO = (dto: AstarteMappingDTO): AstarteMapping =>\n  new AstarteMapping({\n    endpoint: dto.endpoint,\n    type: dto.type,\n    reliability: dto.reliability,\n    retention: dto.retention,\n    expiry: dto.expiry,\n    databaseRetentionPolicy: dto.database_retention_policy,\n    databaseRetentionTtl: dto.database_retention_ttl,\n    allowUnset: dto.allow_unset,\n    explicitTimestamp: dto.explicit_timestamp,\n    description: dto.description,\n    documentation: dto.doc,\n  });\n\nexport const toAstarteMappingDTO = (obj: AstarteMapping): AstarteMappingDTO => ({\n  endpoint: obj.endpoint,\n  type: obj.type,\n  reliability: obj.reliability,\n  retention: obj.retention,\n  expiry: obj.expiry,\n  database_retention_policy: obj.databaseRetentionPolicy,\n  database_retention_ttl: obj.databaseRetentionTtl,\n  allow_unset: obj.allowUnset,\n  explicit_timestamp: obj.explicitTimestamp,\n  description: obj.description,\n  doc: obj.documentation,\n});\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport * as yup from 'yup';\nimport _ from 'lodash';\n\nimport { fromAstarteMappingDTO, toAstarteMappingDTO } from '../../transforms/mapping';\nimport type { AstarteMappingDTO, AstarteDataType } from '../../types';\n\ntype AstarteMappingJSON = AstarteMappingDTO;\n\ninterface AstarteMappingObject {\n  endpoint: string;\n\n  type: AstarteDataType;\n\n  reliability?: 'unreliable' | 'guaranteed' | 'unique';\n\n  retention?: 'discard' | 'volatile' | 'stored';\n\n  expiry?: number;\n\n  databaseRetentionPolicy?: 'no_ttl' | 'use_ttl';\n\n  databaseRetentionTtl?: number;\n\n  allowUnset?: boolean;\n\n  explicitTimestamp?: boolean;\n\n  description?: string;\n\n  documentation?: string;\n}\n\nconst mappingEndpointRegex = /^(\\/(%{([a-zA-Z][a-zA-Z0-9_]*)}|[a-zA-Z][a-zA-Z0-9_]*)){1,64}$/;\nconst mappingEndpointParamRegex = /^%{([a-zA-Z][a-zA-Z0-9_]*)}$/;\n\nconst astarteDataTypes: AstarteDataType[] = [\n  'string',\n  'boolean',\n  'double',\n  'integer',\n  'longinteger',\n  'binaryblob',\n  'datetime',\n  'doublearray',\n  'integerarray',\n  'booleanarray',\n  'longintegerarray',\n  'stringarray',\n  'binaryblobarray',\n  'datetimearray',\n];\n\nconst astarteMappingObjectSchema: yup.ObjectSchema<AstarteMappingObject> = yup\n  .object({\n    endpoint: yup\n      .string()\n      .required()\n      .matches(\n        mappingEndpointRegex,\n        'Interface endpoint must be a UNIX-like path (e.g. /my/path), with optional parameters in the %{name} form',\n      ),\n    type: yup.string().required().oneOf(astarteDataTypes),\n    reliability: yup.string().oneOf(['unreliable', 'guaranteed', 'unique']).notRequired(),\n    retention: yup.string().oneOf(['discard', 'volatile', 'stored']).notRequired(),\n    expiry: yup.number().integer().min(0).notRequired(),\n    databaseRetentionPolicy: yup.string().oneOf(['no_ttl', 'use_ttl']).notRequired(),\n    databaseRetentionTtl: yup\n      .number()\n      .integer()\n      .min(60)\n      .lessThan(20 * 365 * 24 * 60 * 60)\n      .notRequired(),\n    allowUnset: yup.boolean().notRequired(),\n    explicitTimestamp: yup.boolean().notRequired(),\n    description: yup.string().max(1000).notRequired(),\n    documentation: yup.string().max(100000).notRequired(),\n  })\n  .required();\n\nconst isEndpointParam = (endpointPart?: string) =>\n  endpointPart == null ? false : mappingEndpointParamRegex.test(endpointPart);\n\nconst matchEndpointPart = ([part1, part2]: [string | undefined, string | undefined]) =>\n  part1 === part2 || isEndpointParam(part1) || isEndpointParam(part2);\n\nclass AstarteMapping {\n  endpoint: string;\n\n  type: AstarteDataType;\n\n  reliability?: 'unreliable' | 'guaranteed' | 'unique';\n\n  retention?: 'discard' | 'volatile' | 'stored';\n\n  expiry?: number;\n\n  databaseRetentionPolicy?: 'no_ttl' | 'use_ttl';\n\n  databaseRetentionTtl?: number;\n\n  allowUnset?: boolean;\n\n  explicitTimestamp?: boolean;\n\n  description?: string;\n\n  documentation?: string;\n\n  constructor(obj: AstarteMappingObject) {\n    const validatedObj = AstarteMapping.validation.validateSync(obj, { abortEarly: false });\n    this.endpoint = validatedObj.endpoint;\n    this.type = validatedObj.type;\n    this.reliability = validatedObj.reliability;\n    this.retention = validatedObj.retention;\n    this.expiry = validatedObj.expiry;\n    this.databaseRetentionPolicy = validatedObj.databaseRetentionPolicy;\n    this.databaseRetentionTtl = validatedObj.databaseRetentionTtl;\n    this.allowUnset = validatedObj.allowUnset;\n    this.explicitTimestamp = validatedObj.explicitTimestamp;\n    this.description = validatedObj.description;\n    this.documentation = validatedObj.documentation;\n  }\n\n  static matchEndpoint(endpoint1: string, endpoint2: string): boolean {\n    return _.zip(endpoint1.split('/'), endpoint2.split('/')).every(matchEndpointPart);\n  }\n\n  static validation = astarteMappingObjectSchema;\n\n  static fromJSON(json: AstarteMappingJSON): AstarteMapping {\n    return fromAstarteMappingDTO(json);\n  }\n\n  static toJSON(mapping: AstarteMapping): AstarteMappingJSON {\n    return toAstarteMappingDTO(mapping);\n  }\n}\n\nexport type { AstarteMappingObject };\n\nexport { AstarteMapping, mappingEndpointRegex };\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\nimport _ from 'lodash';\n\nimport { fromAstarteMappingDTO, toAstarteMappingDTO } from './mapping';\nimport { AstarteInterface } from '../models/Interface';\nimport type { AstarteInterfaceDTO } from '../types';\n\nexport const fromAstarteInterfaceDTO = (dto: AstarteInterfaceDTO): AstarteInterface =>\n  new AstarteInterface({\n    name: dto.interface_name,\n    major: dto.version_major,\n    minor: dto.version_minor,\n    type: dto.type,\n    ownership: dto.ownership,\n    aggregation: dto.type === 'datastream' ? dto.aggregation : undefined,\n    description: dto.description,\n    documentation: dto.doc,\n    mappings: (dto.mappings || []).map((mapping) => fromAstarteMappingDTO(mapping)),\n  });\n\nconst stripAstarteInterfaceDTODefaults = (dto: AstarteInterfaceDTO): AstarteInterfaceDTO => {\n  const iface = _.cloneDeep(dto);\n  if (iface.type === 'datastream' && iface.aggregation === 'individual') {\n    delete iface.aggregation;\n  }\n  if (iface.type === 'datastream') {\n    iface.mappings = iface.mappings.map((mappingDTO) => {\n      const mapping = _.cloneDeep(mappingDTO);\n      if (mapping.explicit_timestamp === false) {\n        delete mapping.explicit_timestamp;\n      }\n      if (mapping.reliability === 'unreliable') {\n        delete mapping.reliability;\n      }\n      if (mapping.retention === 'discard') {\n        delete mapping.retention;\n      }\n      if (mapping.database_retention_policy === 'no_ttl') {\n        delete mapping.database_retention_policy;\n      }\n      if (!mapping.retention || mapping.expiry === 0) {\n        delete mapping.expiry;\n      }\n      if (!mapping.database_retention_policy) {\n        delete mapping.database_retention_ttl;\n      }\n      return mapping;\n    });\n  }\n  if (iface.type === 'properties') {\n    iface.mappings = iface.mappings.map((mappingDTO) => {\n      const mapping = _.cloneDeep(mappingDTO);\n      if (mapping.allow_unset === false) {\n        delete mapping.allow_unset;\n      }\n      return mapping;\n    });\n  }\n  return iface;\n};\n\nexport const toAstarteInterfaceDTO = (obj: AstarteInterface): AstarteInterfaceDTO =>\n  stripAstarteInterfaceDTODefaults(\n    obj.type === 'datastream'\n      ? {\n          interface_name: obj.name,\n          version_major: obj.major,\n          version_minor: obj.minor,\n          type: obj.type,\n          ownership: obj.ownership,\n          aggregation: obj.aggregation || 'individual',\n          description: obj.description,\n          doc: obj.documentation,\n          mappings: (obj.mappings || []).map((mapping) =>\n            toAstarteMappingDTO({\n              ...mapping,\n              explicitTimestamp: mapping.explicitTimestamp || false,\n              reliability: mapping.reliability || 'unreliable',\n              retention: mapping.retention || 'discard',\n              expiry: mapping.expiry || 0,\n              databaseRetentionPolicy: mapping.databaseRetentionPolicy || 'no_ttl',\n            }),\n          ),\n        }\n      : {\n          interface_name: obj.name,\n          version_major: obj.major,\n          version_minor: obj.minor,\n          type: obj.type,\n          ownership: obj.ownership,\n          description: obj.description,\n          doc: obj.documentation,\n          mappings: (obj.mappings || []).map((mapping) =>\n            toAstarteMappingDTO({\n              ...mapping,\n              allowUnset: mapping.allowUnset || false,\n            }),\n          ),\n        },\n  );\n","/* eslint-disable max-classes-per-file */\n/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport * as yup from 'yup';\nimport _ from 'lodash';\n\nimport { AstarteMapping } from '../Mapping';\nimport type { AstarteMappingObject } from '../Mapping';\nimport { fromAstarteInterfaceDTO, toAstarteInterfaceDTO } from '../../transforms/interface';\nimport type { AstarteInterfaceDTO } from '../../types';\n\ntype AstarteInterfaceJSON = AstarteInterfaceDTO;\n\ninterface AstarteInterfaceObject {\n  name: string;\n\n  major: number;\n\n  minor: number;\n\n  type: 'properties' | 'datastream';\n\n  ownership: 'device' | 'server';\n\n  aggregation?: 'individual' | 'object';\n\n  description?: string;\n\n  documentation?: string;\n\n  mappings: AstarteMapping[];\n}\n\nconst interfaceNameRegex = /^([a-zA-Z][a-zA-Z0-9]*\\.([a-zA-Z0-9][a-zA-Z0-9-]*\\.)*)?[a-zA-Z][a-zA-Z0-9]*$/;\nconst mappingEndpointPlaceholderRegex = /%{[a-zA-Z]+[a-zA-Z0-9_]*}/;\n\nconst getMappingEndpointPrefix = (endpoint: unknown) =>\n  _.isString(endpoint) ? endpoint.split('/').slice(0, -1).join('/') : '';\n\nconst checkMappingsUniqueness = (mappings?: AstarteMappingObject[] | null): boolean => {\n  if (mappings == null || mappings.length === 0) {\n    return true;\n  }\n  const endpoints = mappings.map((mapping) => mapping.endpoint);\n  const placeholdersRegex = new RegExp(mappingEndpointPlaceholderRegex, 'g');\n  const normalizedEndpoints = endpoints.map((mapping) =>\n    mapping.toLowerCase().replace(placeholdersRegex, ''),\n  );\n  return _.uniq(normalizedEndpoints).length === endpoints.length;\n};\n\nconst checkMappingsHaveSamePrefix = (mappings?: AstarteMappingObject[] | null): boolean => {\n  if (mappings == null || mappings.length === 0) {\n    return true;\n  }\n  const endpoints = mappings.map((mapping) => mapping.endpoint);\n  const endpointsPrefixes = endpoints.map(getMappingEndpointPrefix);\n  return endpointsPrefixes.every((prefix) => prefix === endpointsPrefixes[0]);\n};\n\nconst checkMappingsHaveSameAttributes = (mappings?: AstarteMappingObject[] | null): boolean => {\n  if (mappings == null || mappings.length === 0) {\n    return true;\n  }\n  return mappings.every(\n    (mapping) =>\n      mapping.retention === mappings[0].retention &&\n      mapping.reliability === mappings[0].reliability &&\n      mapping.expiry === mappings[0].expiry &&\n      mapping.allowUnset === mappings[0].allowUnset &&\n      mapping.explicitTimestamp === mappings[0].explicitTimestamp,\n  );\n};\n\nconst mappingsValidation = yup\n  .array(AstarteMapping.validation)\n  .max(1024)\n  .defined()\n  .test('unique-mappings', 'Mappings cannot have conflicting endpoints', checkMappingsUniqueness);\n\nconst astarteInterfaceObjectSchema: yup.ObjectSchema<AstarteInterfaceObject> = yup\n  .object({\n    name: yup\n      .string()\n      .required()\n      .max(128)\n      .matches(\n        interfaceNameRegex,\n        'Interface name has to be an unique, alphanumeric reverse internet domain name, not longer than 128 characters',\n      ),\n    major: yup.number().integer().min(0).required(),\n    minor: yup\n      .number()\n      .integer()\n      .min(0)\n      .required()\n      .when('major', {\n        is: 0,\n        then: yup.number().integer().min(1).required(),\n      }),\n    type: yup.string().oneOf(['properties', 'datastream']).required(),\n    ownership: yup.string().oneOf(['device', 'server']).required(),\n    aggregation: yup\n      .string()\n      .oneOf(['individual', 'object'])\n      .when('type', {\n        is: 'datastream',\n        then: yup.string().oneOf(['individual', 'object']).notRequired(),\n        otherwise: yup.string().strip(true),\n      }),\n    description: yup.string().max(1000).notRequired(),\n    documentation: yup.string().max(100000).notRequired(),\n    mappings: mappingsValidation.when(['type', 'aggregation'], {\n      is: (type, aggregation) => type === 'datastream' && aggregation === 'object',\n      then: mappingsValidation\n        .test(\n          'same-prefix-mappings',\n          'Mapping endpoints in Object aggregate interfaces must have the same prefix',\n          checkMappingsHaveSamePrefix,\n        )\n        .test(\n          'same-attributes-mappings',\n          'Mapping endpoints in Object aggregate interfaces must have the same attributes for retention, reliability, expiry, allowUnset, explicitTimestamp',\n          checkMappingsHaveSameAttributes,\n        ),\n    }),\n  })\n  .required();\n\nclass AstarteInterface {\n  name: string;\n\n  major: number;\n\n  minor: number;\n\n  type: 'properties' | 'datastream';\n\n  ownership: 'device' | 'server';\n\n  aggregation?: 'individual' | 'object';\n\n  description?: string;\n\n  documentation?: string;\n\n  mappings: AstarteMapping[];\n\n  constructor(obj: AstarteInterfaceObject) {\n    const validatedObj = AstarteInterface.validation.validateSync(obj, { abortEarly: false });\n    this.name = validatedObj.name;\n    this.major = validatedObj.major;\n    this.minor = validatedObj.minor;\n    this.type = validatedObj.type;\n    this.ownership = validatedObj.ownership;\n    if (validatedObj.type === 'datastream') {\n      this.aggregation = validatedObj.aggregation || 'individual';\n    }\n    this.description = validatedObj.description;\n    this.documentation = validatedObj.documentation;\n    this.mappings = validatedObj.mappings.map((mapping) =>\n      validatedObj.type === 'datastream'\n        ? new AstarteMapping({\n            ...mapping,\n            explicitTimestamp: mapping.explicitTimestamp || false,\n            reliability: mapping.reliability || 'unreliable',\n            retention: mapping.retention || 'discard',\n            expiry: mapping.expiry || 0,\n            databaseRetentionPolicy: mapping.databaseRetentionPolicy || 'no_ttl',\n          })\n        : new AstarteMapping({\n            ...mapping,\n            allowUnset: mapping.allowUnset || false,\n          }),\n    );\n  }\n\n  static findEndpointMapping(iface: AstarteInterface, endpoint: string): AstarteMapping | null {\n    return iface.mappings.find((m) => AstarteMapping.matchEndpoint(m.endpoint, endpoint)) || null;\n  }\n\n  static validation = astarteInterfaceObjectSchema;\n\n  static fromJSON(json: AstarteInterfaceJSON): AstarteInterface {\n    return fromAstarteInterfaceDTO(json);\n  }\n\n  static toJSON(iface: AstarteInterface): AstarteInterfaceJSON {\n    return toAstarteInterfaceDTO(iface);\n  }\n}\n\nexport type { AstarteInterfaceObject };\n\nexport { AstarteInterface, interfaceNameRegex };\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport {\n  AstarteTrigger,\n  AstarteTriggerHTTPActionObject,\n  AstarteTriggerAMQPActionObject,\n} from '../models/Trigger';\nimport type {\n  AstarteTriggerDTO,\n  AstarteTriggerHTTPActionDTO,\n  AstarteTriggerAMQPActionDTO,\n} from '../types';\n\nexport const fromAstarteTriggerDTO = (dto: AstarteTriggerDTO): AstarteTrigger => {\n  let action;\n  if ('http_url' in dto.action && dto.action.http_url != null) {\n    const dtoAction = dto.action as AstarteTriggerHTTPActionDTO;\n    action = {\n      httpUrl: dtoAction.http_url,\n      httpMethod: dtoAction.http_method,\n      httpStaticHeaders: dtoAction.http_static_headers,\n      ignoreSslErrors: dtoAction.ignore_ssl_errors,\n      templateType: dtoAction.template_type,\n      template: dtoAction.template,\n    };\n  } else {\n    const dtoAction = dto.action as AstarteTriggerAMQPActionDTO;\n    action = {\n      amqpExchange: dtoAction.amqp_exchange,\n      amqpRoutingKey: dtoAction.amqp_routing_key,\n      amqpStaticHeaders: dtoAction.amqp_static_headers,\n      amqpMessageExpirationMilliseconds: dtoAction.amqp_message_expiration_ms,\n      amqpMessagePriority: dtoAction.amqp_message_priority,\n      amqpMessagePersistent: dtoAction.amqp_message_persistent,\n    };\n  }\n  return new AstarteTrigger({\n    name: dto.name,\n    action,\n    simpleTriggers: dto.simple_triggers.map((simpleTriggerDTO) =>\n      simpleTriggerDTO.type === 'device_trigger'\n        ? {\n            type: simpleTriggerDTO.type,\n            on: simpleTriggerDTO.on,\n            deviceId: simpleTriggerDTO.device_id,\n            groupName: simpleTriggerDTO.group_name,\n          }\n        : {\n            type: simpleTriggerDTO.type,\n            on: simpleTriggerDTO.on,\n            deviceId: simpleTriggerDTO.device_id,\n            groupName: simpleTriggerDTO.group_name,\n            interfaceName: simpleTriggerDTO.interface_name,\n            interfaceMajor: simpleTriggerDTO.interface_major,\n            matchPath: simpleTriggerDTO.match_path,\n            valueMatchOperator: simpleTriggerDTO.value_match_operator,\n            knownValue: simpleTriggerDTO.known_value,\n          },\n    ),\n  });\n};\n\nexport const toAstarteTriggerDTO = (trigger: AstarteTrigger): AstarteTriggerDTO => {\n  let action;\n  if ('httpUrl' in trigger.action && trigger.action.httpUrl != null) {\n    const triggerAction = trigger.action as AstarteTriggerHTTPActionObject;\n    action = {\n      http_url: triggerAction.httpUrl,\n      http_method: triggerAction.httpMethod,\n      http_static_headers: triggerAction.httpStaticHeaders,\n      ignore_ssl_errors: triggerAction.ignoreSslErrors,\n      template_type: triggerAction.templateType,\n      template: triggerAction.template,\n    };\n  } else {\n    const triggerAction = trigger.action as AstarteTriggerAMQPActionObject;\n    action = {\n      amqp_exchange: triggerAction.amqpExchange,\n      amqp_routing_key: triggerAction.amqpRoutingKey,\n      amqp_static_headers: triggerAction.amqpStaticHeaders,\n      amqp_message_expiration_ms: triggerAction.amqpMessageExpirationMilliseconds,\n      amqp_message_priority: triggerAction.amqpMessagePriority,\n      amqp_message_persistent: triggerAction.amqpMessagePersistent,\n    };\n  }\n  return {\n    name: trigger.name,\n    action,\n    simple_triggers: trigger.simpleTriggers.map((simpleTrigger) =>\n      simpleTrigger.type === 'device_trigger'\n        ? {\n            type: simpleTrigger.type,\n            on: simpleTrigger.on,\n            device_id: simpleTrigger.deviceId,\n            group_name: simpleTrigger.groupName,\n          }\n        : {\n            type: simpleTrigger.type,\n            on: simpleTrigger.on,\n            device_id: simpleTrigger.deviceId,\n            group_name: simpleTrigger.groupName,\n            interface_name: simpleTrigger.interfaceName,\n            interface_major: simpleTrigger.interfaceMajor,\n            match_path: simpleTrigger.matchPath,\n            value_match_operator: simpleTrigger.valueMatchOperator,\n            known_value: simpleTrigger.knownValue,\n          },\n    ),\n  };\n};\n","/* eslint-disable no-template-curly-in-string */\n/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport * as yup from 'yup';\nimport _ from 'lodash';\n\nimport { AstarteInterface, interfaceNameRegex } from '../Interface';\nimport { AstarteMapping, mappingEndpointRegex } from '../Mapping';\nimport { fromAstarteTriggerDTO, toAstarteTriggerDTO } from '../../transforms/trigger';\nimport type { AstarteTriggerDTO } from '../../types';\n\ntype AstarteTriggerJSON = AstarteTriggerDTO;\n\ninterface AstarteTriggerHTTPActionObject {\n  httpUrl: string;\n  httpMethod: 'delete' | 'get' | 'head' | 'options' | 'patch' | 'post' | 'put';\n  httpStaticHeaders?: {\n    [headerName: string]: string;\n  };\n  ignoreSslErrors?: boolean;\n  templateType?: 'mustache';\n  template?: string;\n}\n\ninterface AstarteTriggerAMQPActionObject {\n  amqpExchange: string;\n  amqpRoutingKey?: string;\n  amqpStaticHeaders?: {\n    [headerName: string]: string;\n  };\n  amqpMessageExpirationMilliseconds: number;\n  amqpMessagePriority?: number;\n  amqpMessagePersistent: boolean;\n}\n\ninterface AstarteSimpleDeviceTriggerObject {\n  type: 'device_trigger';\n  on: 'device_disconnected' | 'device_connected' | 'device_error' | 'device_empty_cache_received';\n  deviceId?: string;\n  groupName?: string;\n}\n\ninterface AstarteSimpleDataTriggerObject {\n  type: 'data_trigger';\n  on:\n    | 'incoming_data'\n    | 'value_change'\n    | 'value_change_applied'\n    | 'path_created'\n    | 'path_removed'\n    | 'value_stored';\n  deviceId?: string;\n  groupName?: string;\n  interfaceName: string;\n  interfaceMajor?: number;\n  matchPath: string;\n  valueMatchOperator: '*' | '==' | '!=' | '>' | '>=' | '<' | '<=' | 'contains' | 'not_contains';\n  knownValue?: string | number | boolean;\n}\n\ntype AstarteSimpleTriggerObject = AstarteSimpleDeviceTriggerObject | AstarteSimpleDataTriggerObject;\n\ninterface AstarteTriggerObject {\n  name: string;\n  action: AstarteTriggerHTTPActionObject | AstarteTriggerAMQPActionObject;\n  simpleTriggers: AstarteSimpleTriggerObject[];\n}\n\nconst reservedHttpHeaders = [\n  'connection',\n  'content-length',\n  'date',\n  'host',\n  'te',\n  'upgrade',\n  'x-forwarded-for',\n  'x-forwarded-host',\n  'x-forwarded-proto',\n  'sec-websocket-accept',\n  'proxy-authorization',\n  'proxy-authenticate',\n];\n\nconst getAmqpExchangeRegex = (realm?: string | null) =>\n  realm\n    ? new RegExp(`^astarte_events_${realm}_[a-zA-Z0-9_\\\\.\\\\:]+$`)\n    : /^astarte_events_[a-zA-Z0-9]+_[a-zA-Z0-9_.:]+$/;\n\nconst amqpRoutingKeyRegex = /^[^{}]+$/;\n\nconst generateObjectValidation = <K, V>(keySchema: yup.Schema<K>, valueSchema: yup.Schema<V>) => (\n  obj: unknown,\n) => {\n  if (_.isUndefined(obj)) {\n    return true;\n  }\n  return (\n    _.isObject(obj) &&\n    _.isPlainObject(obj) &&\n    Object.entries(obj).every(\n      ([key, value]) => keySchema.isValidSync(key) && valueSchema.isValidSync(value),\n    )\n  );\n};\n\nconst astarteTriggerHttpActionObjectSchema: yup.ObjectSchema<AstarteTriggerHTTPActionObject> = yup\n  .object({\n    httpUrl: yup.string().min('http://a'.length).max(8192).required(),\n    httpMethod: yup\n      .string()\n      .oneOf(['delete', 'get', 'head', 'options', 'patch', 'post', 'put'])\n      .required(),\n    httpStaticHeaders: yup\n      .mixed<Record<string, string>>()\n      .test(\n        'http-static-headers',\n        '${path} must be an Object of string -> string',\n        generateObjectValidation(\n          yup\n            .string()\n            .required()\n            .test(\n              'reserved-http-headers',\n              '${path} cannot be a reserved HTTP header',\n              (headerName) => !reservedHttpHeaders.includes((headerName || '').toLowerCase()),\n            ),\n          yup.string(),\n        ),\n      )\n      .notRequired(),\n    ignoreSslErrors: yup.boolean().notRequired(),\n    templateType: yup.string().oneOf(['mustache']).notRequired(),\n    template: yup.string().when('templateType', {\n      is: 'mustache',\n      then: yup\n        .string()\n        .max(1024 * 1024)\n        .required(),\n      otherwise: yup.string().strip(true),\n    }),\n  })\n  .required();\n\nconst astarteTriggerAmqpActionObjectSchema: yup.ObjectSchema<AstarteTriggerAMQPActionObject> = yup\n  .object({\n    amqpExchange: yup\n      .string()\n      .max(255)\n      .required()\n      .when('$realm', (realm?: string | null) =>\n        yup\n          .string()\n          .matches(\n            getAmqpExchangeRegex(realm),\n            `\\${path} must have astarte_events_${\n              realm || '<realm-name>'\n            }_<any-allowed-string> format`,\n          ),\n      ),\n    amqpRoutingKey: yup\n      .string()\n      .matches(amqpRoutingKeyRegex, '${path} must not contain { and }')\n      .notRequired(),\n    amqpStaticHeaders: yup\n      .mixed<Record<string, string>>()\n      .test(\n        'amqp-static-headers',\n        '${path} must be an Object of string -> string',\n        generateObjectValidation(yup.string().required(), yup.string()),\n      )\n      .notRequired(),\n    amqpMessageExpirationMilliseconds: yup.number().integer().positive().required(),\n    amqpMessagePriority: yup.number().integer().min(0).max(9).notRequired(),\n    amqpMessagePersistent: yup.boolean().required(),\n  })\n  .required();\n\nconst astarteTriggerActionObjectSchema = yup.lazy((action) => {\n  if ('httpUrl' in (action as AstarteTriggerHTTPActionObject | AstarteTriggerAMQPActionObject)) {\n    return astarteTriggerHttpActionObjectSchema;\n  }\n  return astarteTriggerAmqpActionObjectSchema;\n});\n\nconst astarteSimpleDeviceTriggerObjectSchema: yup.ObjectSchema<AstarteSimpleDeviceTriggerObject> = yup\n  .object({\n    type: yup.string().oneOf(['device_trigger']).required(),\n    on: yup\n      .string()\n      .oneOf([\n        'device_disconnected',\n        'device_connected',\n        'device_error',\n        'device_empty_cache_received',\n      ])\n      .required(),\n    deviceId: yup.string().notRequired(),\n    groupName: yup\n      .string()\n      .notRequired()\n      .when('deviceId', (deviceId: unknown, schema: yup.StringSchema) =>\n        deviceId != null ? schema.strip(true) : schema,\n      ),\n  })\n  .required();\n\nconst astarteSimpleDataTriggerObjectSchema: yup.ObjectSchema<AstarteSimpleDataTriggerObject> = yup\n  .object({\n    type: yup.string().oneOf(['data_trigger']).required(),\n    on: yup\n      .string()\n      .oneOf([\n        'incoming_data',\n        'value_change',\n        'value_change_applied',\n        'path_created',\n        'path_removed',\n        'value_stored',\n      ])\n      .required(),\n    deviceId: yup.string().notRequired(),\n    groupName: yup\n      .string()\n      .notRequired()\n      .when('deviceId', (deviceId: unknown, schema: yup.StringSchema) =>\n        deviceId != null ? schema.strip(true) : schema,\n      ),\n    interfaceName: yup\n      .string()\n      .test(\n        'interface-name',\n        '${path} must be either * or a valid interface name',\n        (interfaceName) =>\n          interfaceName != null &&\n          (interfaceName === '*' || interfaceNameRegex.test(interfaceName)),\n      )\n      .required(),\n    interfaceMajor: yup.number().integer().min(0).notRequired(),\n    matchPath: yup\n      .string()\n      .test(\n        'match-path',\n        '${path} must be either /* or a valid interface mapping path',\n        (matchPath) =>\n          matchPath != null && (matchPath === '/*' || mappingEndpointRegex.test(matchPath)),\n      )\n      // TODO: this is a workaround to a data updater plant limitation\n      // see also https://github.com/astarte-platform/astarte/issues/513\n      .when('on', (on: AstarteSimpleDataTriggerObject['on'], schema: yup.StringSchema) =>\n        schema.test(\n          'match-path-limit-for-value-changed',\n          `\\${path} cannot be /* for value_change or value_change_applied triggers`,\n          (matchPath) =>\n            matchPath !== '/*' || !['value_change', 'value_change_applied'].includes(on),\n        ),\n      )\n      .required()\n      .when(\n        ['$interface', 'on', 'valueMatchOperator'],\n        (\n          iface: AstarteInterface | null,\n          on: AstarteSimpleDataTriggerObject['on'],\n          valueMatchOperator: AstarteSimpleDataTriggerObject['valueMatchOperator'],\n          schema: yup.StringSchema,\n        ) =>\n          iface == null\n            ? schema\n            : schema\n                .test(\n                  'match-path-of-interface',\n                  `\\${path} must be either /* or a valid mapping path for interface ${iface.name} v${iface.major}.${iface.minor}`,\n                  (matchPath) => {\n                    if (!matchPath) {\n                      return false;\n                    }\n                    if (matchPath === '/*') {\n                      return true;\n                    }\n                    return iface.mappings.some((m) =>\n                      AstarteMapping.matchEndpoint(m.endpoint, matchPath),\n                    );\n                  },\n                )\n                // TODO: this is a workaround to for the issue https://github.com/astarte-platform/astarte/issues/523\n                .test(\n                  'match-path-limit-for-datastream-object-interfaces',\n                  `only incoming_data triggers with /* path and * operator are supported for datastream object interfaces`,\n                  (matchPath) =>\n                    iface.aggregation !== 'object' ||\n                    (on === 'incoming_data' && valueMatchOperator === '*' && matchPath === '/*'),\n                ),\n      ),\n    valueMatchOperator: yup\n      .string()\n      .oneOf(['*', '==', '!=', '>', '>=', '<', '<=', 'contains', 'not_contains'])\n      .required(),\n    knownValue: yup\n      .mixed<string | boolean | number>()\n      .when(\n        ['matchPath', 'valueMatchOperator', '$interface'],\n        (\n          matchPath: string | undefined,\n          valueMatchOperator: string | undefined,\n          iface: AstarteInterface | null,\n        ) => {\n          if (!iface || !matchPath) {\n            return yup.mixed<string | boolean | number>().strip(true);\n          }\n          const matchMapping = iface.mappings.find((m) =>\n            AstarteMapping.matchEndpoint(m.endpoint, matchPath),\n          );\n          const ifacePathType = matchMapping ? matchMapping.type : null;\n          let schema: yup.StringSchema | yup.NumberSchema | yup.BooleanSchema = yup.string<\n            string | undefined\n          >();\n          if (!ifacePathType) {\n            schema = yup.string<string | undefined>();\n          } else if (['boolean', 'booleanarray'].includes(ifacePathType)) {\n            schema = yup.boolean<boolean | undefined>();\n          } else if (['double', 'doublearray'].includes(ifacePathType)) {\n            schema = yup.number<number | undefined>();\n          } else if (['integer', 'integerarray'].includes(ifacePathType)) {\n            schema = yup.number().integer();\n          }\n          return valueMatchOperator === '*' ? schema.strip(true) : schema.required();\n        },\n      ),\n  })\n  .required();\n\nconst astarteSimpleTriggerObjectSchema = yup.lazy((simpleTrigger) => {\n  if (_.get(simpleTrigger, 'type') === 'device_trigger') {\n    return astarteSimpleDeviceTriggerObjectSchema;\n  }\n  return astarteSimpleDataTriggerObjectSchema;\n});\n\nconst astarteTriggerObjectSchema: yup.ObjectSchema<AstarteTriggerObject> = yup\n  .object({\n    name: yup.string().required(),\n    action: astarteTriggerActionObjectSchema,\n    simpleTriggers: yup.array(astarteSimpleTriggerObjectSchema).required(),\n  })\n  .required();\n\ntype AstarteTriggerHTTPAction = AstarteTriggerHTTPActionObject;\ntype AstarteTriggerAMQPAction = AstarteTriggerAMQPActionObject;\ntype AstarteSimpleDeviceTrigger = AstarteSimpleDeviceTriggerObject;\ntype AstarteSimpleDataTrigger = AstarteSimpleDataTriggerObject;\ntype AstarteSimpleTrigger = AstarteSimpleDeviceTrigger | AstarteSimpleDataTrigger;\n\nclass AstarteTrigger {\n  name: string;\n\n  action: AstarteTriggerHTTPAction | AstarteTriggerAMQPAction;\n\n  simpleTriggers: AstarteSimpleTrigger[];\n\n  constructor(obj: AstarteTriggerObject) {\n    const validatedObj = AstarteTrigger.validation.validateSync(obj, { abortEarly: false });\n    this.name = validatedObj.name;\n    this.action = validatedObj.action;\n    this.simpleTriggers = validatedObj.simpleTriggers;\n  }\n\n  static validation = astarteTriggerObjectSchema;\n\n  static fromJSON(json: AstarteTriggerJSON): AstarteTrigger {\n    return fromAstarteTriggerDTO(json);\n  }\n\n  static toJSON(trigger: AstarteTrigger): AstarteTriggerJSON {\n    return toAstarteTriggerDTO(trigger);\n  }\n}\n\nexport type {\n  AstarteTriggerHTTPActionObject,\n  AstarteTriggerAMQPActionObject,\n  AstarteTriggerHTTPAction,\n  AstarteTriggerAMQPAction,\n  AstarteSimpleDeviceTrigger,\n  AstarteSimpleDataTrigger,\n  AstarteSimpleTrigger,\n};\n\nexport { AstarteTrigger };\n","/* eslint-disable max-classes-per-file */\n/*\n   This file is part of Astarte.\n   Copyright 2020 Ispirata Srl\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport _ from 'lodash';\n\nimport { AstarteInterface } from '../models';\nimport type {\n  AstarteDataType,\n  AstarteDataValue,\n  AstarteDataTuple,\n  AstartePropertyData,\n  AstarteDatastreamData,\n  AstarteDatastreamIndividualData,\n  AstarteDatastreamObjectData,\n  AstarteInterfaceValues,\n  AstarteIndividualDatastreamInterfaceValue,\n  AstarteAggregatedDatastreamInterfaceValue,\n} from '../types';\n\nconst getEndpointDataType = (iface: AstarteInterface, endpoint: string): AstarteDataType => {\n  const matchedMapping = AstarteInterface.findEndpointMapping(iface, endpoint);\n  if (matchedMapping == null) {\n    throw new Error(`Could not find an interface mapping for the endpoint ${endpoint}`);\n  }\n  return matchedMapping.type;\n};\n\nconst isAstarteDataValue = (value: unknown): value is AstarteDataValue =>\n  !_.isUndefined(value) && (!_.isPlainObject(value) || _.isNull(value));\n\nconst isPropertiesInterfaceValue = (value: unknown): value is AstarteDataValue =>\n  isAstarteDataValue(value);\n\nconst isIndividualDatastreamInterfaceValue = (\n  value: unknown,\n): value is AstarteIndividualDatastreamInterfaceValue => isAstarteDataValue(_.get(value, 'value'));\n\nconst isAggregatedDatastreamInterfaceValue = (\n  value: unknown,\n): value is AstarteAggregatedDatastreamInterfaceValue => Array.isArray(value);\n\ntype AstarteDataTreeKind = 'properties' | 'datastream_object' | 'datastream_individual';\n\nconst getDataTreeKind = (iface: AstarteInterface): AstarteDataTreeKind => {\n  if (iface.type === 'properties') {\n    return 'properties';\n  }\n  if (iface.aggregation === 'object') {\n    return 'datastream_object';\n  }\n  return 'datastream_individual';\n};\n\ntype JSON<Value> = Value | { [prop: string]: JSON<Value> };\n\ntype Equals<T, S> = [T] extends [S] ? ([S] extends [T] ? true : false) : false;\n\ninterface AstarteDataTreeNode<\n  Data extends AstartePropertyData | AstarteDatastreamIndividualData | AstarteDatastreamObjectData\n> {\n  dataKind: AstarteDataTreeKind;\n  name: string;\n  endpoint: string;\n  getParentNode: () => AstarteDataTreeNode<Data> | null;\n  getNode: (endpoint: string) => AstarteDataTreeNode<Data> | null;\n  getLeaves: () => AstarteDataTreeNode<Data>[];\n  toData: () => Equals<Data, AstarteDatastreamObjectData> extends true\n    ? AstarteDatastreamObjectData[]\n    : Equals<Data, AstarteDatastreamIndividualData> extends true\n    ? AstarteDatastreamIndividualData[]\n    : AstartePropertyData[];\n  toLinearizedData: () => Equals<Data, AstarteDatastreamObjectData> extends true\n    ? AstarteDatastreamData[]\n    : Equals<Data, AstarteDatastreamIndividualData> extends true\n    ? AstarteDatastreamData[]\n    : AstartePropertyData[];\n  toLastValue: () => JSON<AstarteDataValue>;\n}\n\ninterface AstarteDataTreeLeafNodeParams<\n  Data extends AstartePropertyData | AstarteDatastreamIndividualData | AstarteDatastreamObjectData\n> {\n  interface: AstarteInterface;\n  data: Equals<Data, AstarteDatastreamObjectData> extends true\n    ? AstarteDatastreamObjectData[]\n    : Equals<Data, AstarteDatastreamIndividualData> extends true\n    ? AstarteDatastreamIndividualData[]\n    : AstartePropertyData;\n  endpoint?: string;\n  parentNode?: AstarteDataTreeBranchNode<Data> | null;\n}\n\nclass AstarteDataTreeLeafNode<\n  Data extends AstartePropertyData | AstarteDatastreamIndividualData | AstarteDatastreamObjectData\n> implements AstarteDataTreeNode<Data> {\n  readonly dataKind: AstarteDataTreeKind;\n\n  readonly endpoint: string;\n\n  private readonly parent: AstarteDataTreeBranchNode<Data> | null;\n\n  private readonly data: Equals<Data, AstarteDatastreamObjectData> extends true\n    ? AstarteDatastreamObjectData[]\n    : Equals<Data, AstarteDatastreamIndividualData> extends true\n    ? AstarteDatastreamIndividualData[]\n    : AstartePropertyData;\n\n  private readonly linearizedData: Equals<Data, AstarteDatastreamObjectData> extends true\n    ? AstarteDatastreamData[]\n    : Equals<Data, AstarteDatastreamIndividualData> extends true\n    ? AstarteDatastreamData[]\n    : AstartePropertyData;\n\n  constructor({\n    interface: iface,\n    data,\n    endpoint = '',\n    parentNode = null,\n  }: AstarteDataTreeLeafNodeParams<Data>) {\n    this.endpoint = endpoint;\n    this.parent = parentNode;\n    this.dataKind = getDataTreeKind(iface);\n    this.data = data;\n    if (iface.type === 'properties') {\n      // @ts-expect-error cannot correctly infer from generics\n      this.linearizedData = data as AstartePropertyData;\n    } else if (iface.type === 'datastream' && iface.aggregation === 'individual') {\n      const interfaceData = data as AstarteDatastreamIndividualData[];\n      // @ts-expect-error cannot correctly infer from generics\n      this.linearizedData = interfaceData.map((obj) => ({\n        endpoint: obj.endpoint,\n        timestamp: obj.timestamp,\n        ...({ type: obj.type, value: obj.value } as AstarteDataTuple),\n      })) as AstarteDatastreamData[];\n    } else {\n      const interfaceData = data as AstarteDatastreamObjectData[];\n      // @ts-expect-error cannot correctly infer from generics\n      this.linearizedData = interfaceData\n        .map((obj) =>\n          Object.entries(obj.value).map(([prop, propValue]) => ({\n            endpoint: `${obj.endpoint}/${prop}`,\n            timestamp: obj.timestamp,\n            ...propValue,\n          })),\n        )\n        .flat() as AstarteDatastreamData[];\n    }\n  }\n\n  getParentNode(): AstarteDataTreeBranchNode<Data> | null {\n    return this.parent;\n  }\n\n  getNode(endpoint: string): AstarteDataTreeLeafNode<Data> | null {\n    const sanitizedEndpoint = endpoint.replace(/\\/$/, '');\n    if (sanitizedEndpoint === this.endpoint) {\n      return this;\n    }\n    return null;\n  }\n\n  getLeaves(): AstarteDataTreeLeafNode<Data>[] {\n    return [this];\n  }\n\n  toData(): Equals<Data, AstarteDatastreamObjectData> extends true\n    ? AstarteDatastreamObjectData[]\n    : Equals<Data, AstarteDatastreamIndividualData> extends true\n    ? AstarteDatastreamIndividualData[]\n    : [AstartePropertyData] {\n    // @ts-expect-error cannot correctly infer from generics\n    return _.isArray(this.data) ? this.data : [this.data];\n  }\n\n  toLinearizedData(): Equals<Data, AstarteDatastreamObjectData> extends true\n    ? AstarteDatastreamData[]\n    : Equals<Data, AstarteDatastreamIndividualData> extends true\n    ? AstarteDatastreamData[]\n    : [AstartePropertyData] {\n    // @ts-expect-error cannot correctly infer from generics\n    return _.isArray(this.linearizedData) ? this.linearizedData : [this.linearizedData];\n  }\n\n  toLastValue(): JSON<AstarteDataValue> {\n    if (this.dataKind === 'properties') {\n      const data = this.data as AstartePropertyData;\n      return data.value;\n    }\n    if (this.dataKind === 'datastream_individual') {\n      const data = this.data as AstarteDatastreamIndividualData[];\n      const lastData: AstarteDatastreamIndividualData | undefined = _.last(\n        _.orderBy(data, ['timestamp'], ['asc']),\n      );\n      return lastData ? lastData.value : null;\n    }\n    const data = this.data as AstarteDatastreamObjectData[];\n    const lastData: AstarteDatastreamObjectData | undefined = _.last(\n      _.orderBy(data, ['timestamp'], ['asc']),\n    );\n    return lastData ? _.mapValues(lastData.value, (valueTuple) => valueTuple.value) : null;\n  }\n\n  get name(): string {\n    return this.parent != null ? this.endpoint.replace(`${this.parent.endpoint}/`, '') : '';\n  }\n}\n\ninterface AstarteDataTreeBranchNodeParams<\n  Data extends AstartePropertyData | AstarteDatastreamIndividualData | AstarteDatastreamObjectData\n> {\n  interface: AstarteInterface;\n  data: AstarteInterfaceValues;\n  endpoint?: string;\n  parentNode?: AstarteDataTreeBranchNode<Data> | null;\n}\nclass AstarteDataTreeBranchNode<\n  Data extends AstartePropertyData | AstarteDatastreamIndividualData | AstarteDatastreamObjectData\n> implements AstarteDataTreeNode<Data> {\n  readonly dataKind: AstarteDataTreeKind;\n\n  readonly endpoint: string;\n\n  private readonly parent: AstarteDataTreeBranchNode<Data> | null;\n\n  private readonly children: Array<AstarteDataTreeBranchNode<Data> | AstarteDataTreeLeafNode<Data>>;\n\n  constructor({\n    interface: iface,\n    data,\n    endpoint = '',\n    parentNode = null,\n  }: AstarteDataTreeBranchNodeParams<Data>) {\n    this.endpoint = endpoint;\n    this.parent = parentNode;\n    this.dataKind = getDataTreeKind(iface);\n    if (iface.type === 'properties') {\n      // @ts-expect-error cannot correctly infer from generics\n      this.children = Object.entries(data).map(([prop, propValue]) =>\n        toPropertiesTreeNode({\n          interface: iface,\n          data: propValue,\n          endpoint: `${endpoint}/${prop}`,\n          // @ts-expect-error cannot correctly infer from generics\n          parentNode: this as AstarteDataTreeBranchNode<AstartePropertyData>,\n        }),\n      ) as Array<AstarteDataTreeBranchNode<Data> | AstarteDataTreeLeafNode<Data>>;\n    } else if (iface.type === 'datastream' && iface.aggregation === 'individual') {\n      // @ts-expect-error cannot correctly infer from generics\n      this.children = Object.entries(data).map(([prop, propValue]) =>\n        toDatastreamIndividualTreeNode({\n          interface: iface,\n          data: propValue,\n          endpoint: `${endpoint}/${prop}`,\n          // @ts-expect-error cannot correctly infer from generics\n          parentNode: this as AstarteDataTreeBranchNode<AstarteDatastreamIndividualData>,\n        }),\n      ) as Array<AstarteDataTreeBranchNode<Data> | AstarteDataTreeLeafNode<Data>>;\n    } else {\n      // @ts-expect-error cannot correctly infer from generics\n      this.children = Object.entries(data).map(([prop, propValue]) =>\n        toDatastreamObjectTreeNode({\n          interface: iface,\n          data: propValue,\n          endpoint: `${endpoint}/${prop}`,\n          // @ts-expect-error cannot correctly infer from generics\n          parentNode: this as AstarteDataTreeBranchNode<AstarteDatastreamObjectData>,\n        }),\n      ) as Array<AstarteDataTreeBranchNode<Data> | AstarteDataTreeLeafNode<Data>>;\n    }\n  }\n\n  getParentNode(): AstarteDataTreeBranchNode<Data> | null {\n    return this.parent;\n  }\n\n  getNode(\n    endpoint: string,\n  ): AstarteDataTreeBranchNode<Data> | AstarteDataTreeLeafNode<Data> | null {\n    const sanitizedEndpoint = endpoint.replace(/\\/$/, '');\n    if (sanitizedEndpoint === this.endpoint) {\n      return this;\n    }\n    if (this.children.length === 0) {\n      return null;\n    }\n    let foundNode: AstarteDataTreeBranchNode<Data> | AstarteDataTreeLeafNode<Data> | null = null;\n    this.children.forEach((child) => {\n      const node = child.getNode(sanitizedEndpoint);\n      if (node != null) {\n        foundNode = node;\n      }\n    });\n    return foundNode;\n  }\n\n  getLeaves(): AstarteDataTreeLeafNode<Data>[] {\n    return this.children.map((child) => child.getLeaves()).flat();\n  }\n\n  toData(): Equals<Data, AstarteDatastreamObjectData> extends true\n    ? AstarteDatastreamObjectData[]\n    : Equals<Data, AstarteDatastreamIndividualData> extends true\n    ? AstarteDatastreamIndividualData[]\n    : AstartePropertyData[] {\n    // @ts-expect-error cannot correctly infer from generics\n    return this.getLeaves()\n      .map((leaf) => leaf.toData())\n      .flat();\n  }\n\n  toLinearizedData(): Equals<Data, AstarteDatastreamObjectData> extends true\n    ? AstarteDatastreamData[]\n    : Equals<Data, AstarteDatastreamIndividualData> extends true\n    ? AstarteDatastreamData[]\n    : AstartePropertyData[] {\n    // @ts-expect-error cannot correctly infer from generics\n    return this.getLeaves()\n      .map((leaf) => leaf.toLinearizedData())\n      .flat();\n  }\n\n  toLastValue(): JSON<AstarteDataValue> {\n    return this.children.reduce(\n      (acc, child) => ({\n        ...acc,\n        [child.name]: child.toLastValue(),\n      }),\n      {},\n    );\n  }\n\n  get name(): string {\n    return this.parent != null ? this.endpoint.replace(`${this.parent.endpoint}/`, '') : '';\n  }\n}\n\nfunction toAstarteDataTree(params: {\n  interface: AstarteInterface;\n  data: AstarteInterfaceValues;\n}):\n  | AstarteDataTreeNode<AstartePropertyData>\n  | AstarteDataTreeNode<AstarteDatastreamIndividualData>\n  | AstarteDataTreeNode<AstarteDatastreamObjectData> {\n  if (params.interface.type === 'properties') {\n    return new AstarteDataTreeBranchNode<AstartePropertyData>(params);\n  }\n  if (params.interface.type === 'datastream' && params.interface.aggregation === 'individual') {\n    return new AstarteDataTreeBranchNode<AstarteDatastreamIndividualData>(params);\n  }\n  return toDatastreamObjectTreeNode({\n    interface: params.interface,\n    data: params.data,\n    endpoint: '',\n    parentNode: null,\n  });\n}\n\nfunction toPropertiesTreeNode(params: {\n  interface: AstarteInterface;\n  data: AstarteInterfaceValues;\n  endpoint: string;\n  parentNode: AstarteDataTreeBranchNode<AstartePropertyData> | null;\n}): AstarteDataTreeBranchNode<AstartePropertyData> | AstarteDataTreeLeafNode<AstartePropertyData> {\n  if (isPropertiesInterfaceValue(params.data)) {\n    return new AstarteDataTreeLeafNode<AstartePropertyData>({\n      interface: params.interface,\n      data: {\n        endpoint: params.endpoint,\n        ...({\n          value: params.data,\n          type: getEndpointDataType(params.interface, params.endpoint),\n        } as AstarteDataTuple),\n      },\n      endpoint: params.endpoint,\n      parentNode: params.parentNode,\n    });\n  }\n  return new AstarteDataTreeBranchNode<AstartePropertyData>({\n    interface: params.interface,\n    data: params.data,\n    endpoint: params.endpoint,\n    parentNode: params.parentNode,\n  });\n}\n\nfunction toDatastreamIndividualTreeNode(params: {\n  interface: AstarteInterface;\n  data: AstarteInterfaceValues;\n  endpoint: string;\n  parentNode: AstarteDataTreeBranchNode<AstarteDatastreamIndividualData> | null;\n}):\n  | AstarteDataTreeBranchNode<AstarteDatastreamIndividualData>\n  | AstarteDataTreeLeafNode<AstarteDatastreamIndividualData> {\n  if (isIndividualDatastreamInterfaceValue(params.data)) {\n    const leafData: AstarteDatastreamIndividualData[] = [\n      {\n        endpoint: params.endpoint,\n        timestamp: params.data.timestamp,\n        ...({\n          value: params.data.value,\n          type: getEndpointDataType(params.interface, params.endpoint),\n        } as AstarteDataTuple),\n      },\n    ];\n    return new AstarteDataTreeLeafNode<AstarteDatastreamIndividualData>({\n      interface: params.interface,\n      data: leafData,\n      endpoint: params.endpoint,\n      parentNode: params.parentNode,\n    });\n  }\n  return new AstarteDataTreeBranchNode<AstarteDatastreamIndividualData>({\n    interface: params.interface,\n    data: params.data,\n    endpoint: params.endpoint,\n    parentNode: params.parentNode,\n  });\n}\n\nfunction toDatastreamObjectTreeNode(params: {\n  interface: AstarteInterface;\n  data: AstarteInterfaceValues;\n  endpoint: string;\n  parentNode: AstarteDataTreeBranchNode<AstarteDatastreamObjectData> | null;\n}):\n  | AstarteDataTreeBranchNode<AstarteDatastreamObjectData>\n  | AstarteDataTreeLeafNode<AstarteDatastreamObjectData> {\n  if (isAggregatedDatastreamInterfaceValue(params.data)) {\n    const leafData: AstarteDatastreamObjectData[] = params.data.map((obj) => ({\n      endpoint: params.endpoint,\n      timestamp: obj.timestamp,\n      value: Object.entries(_.omit(obj, 'timestamp')).reduce(\n        (acc, [objProp, objPropValue]) => ({\n          ...acc,\n          [objProp]: {\n            value: objPropValue,\n            type: getEndpointDataType(params.interface, `${params.endpoint}/${objProp}`),\n          } as AstarteDataTuple,\n        }),\n        {},\n      ),\n    }));\n    return new AstarteDataTreeLeafNode<AstarteDatastreamObjectData>({\n      interface: params.interface,\n      data: leafData,\n      endpoint: params.endpoint,\n      parentNode: params.parentNode,\n    });\n  }\n  return new AstarteDataTreeBranchNode<AstarteDatastreamObjectData>({\n    interface: params.interface,\n    data: params.data,\n    endpoint: params.endpoint,\n    parentNode: params.parentNode,\n  });\n}\n\nexport { toAstarteDataTree };\n\nexport type { AstarteDataTreeNode, AstarteDataTreeKind };\n","/*\n   This file is part of Astarte.\n   Copyright 2020 Ispirata Srl\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport _ from 'lodash';\n\nimport { AstarteDevice } from '../models/Device';\n\nimport type { AstarteDeviceInterfaceStats } from '../models/Device';\nimport type { AstarteDeviceDTO } from '../types';\n\nconst fromInterfaceStatsDTO = (iface: any): AstarteDeviceInterfaceStats => ({\n  name: iface.name,\n  major: iface.major,\n  minor: iface.minor,\n  exchangedMessages: iface.exchanged_msgs,\n  exchangedBytes: iface.exchanged_bytes,\n});\n\nconst toInterfaceStatsDTO = (iface: AstarteDeviceInterfaceStats) => ({\n  name: iface.name,\n  major: iface.major,\n  minor: iface.minor,\n  exchanged_msgs: iface.exchangedMessages,\n  exchanged_bytes: iface.exchangedBytes,\n});\n\nexport const fromAstarteDeviceDTO = (dto: AstarteDeviceDTO): AstarteDevice =>\n  new AstarteDevice({\n    id: dto.id,\n    isConnected: !!dto.connected,\n    hasCredentialsInhibited: !!dto.credentials_inhibited,\n    aliases: new Map(Object.entries(dto.aliases || {})),\n    groups: dto.groups || [],\n    introspection: new Map(\n      Object.entries(dto.introspection || {}).map(([interfaceName, iface]) => [\n        interfaceName,\n        fromInterfaceStatsDTO({ name: interfaceName, ...iface }),\n      ]),\n    ),\n    metadata: new Map(Object.entries(dto.metadata || {})),\n    totalReceivedMessages: dto.total_received_msgs || 0,\n    totalReceivedBytes: dto.total_received_bytes || 0,\n    previousInterfaces: (dto.previous_interfaces || []).map(fromInterfaceStatsDTO),\n    firstRegistration:\n      dto.first_registration != null ? new Date(dto.first_registration) : undefined,\n    firstCredentialsRequest:\n      dto.first_credentials_request != null ? new Date(dto.first_credentials_request) : undefined,\n    lastDisconnection:\n      dto.last_disconnection != null ? new Date(dto.last_disconnection) : undefined,\n    lastConnection: dto.last_connection != null ? new Date(dto.last_connection) : undefined,\n    lastSeenIp: dto.last_seen_ip != null ? dto.last_seen_ip : undefined,\n    lastCredentialsRequestIp:\n      dto.last_credentials_request_ip != null ? dto.last_credentials_request_ip : undefined,\n  });\n\nexport const toAstarteDeviceDTO = (obj: AstarteDevice): AstarteDeviceDTO => ({\n  id: obj.id,\n  connected: !!obj.isConnected,\n  credentials_inhibited: !!obj.hasCredentialsInhibited,\n  aliases: Object.fromEntries(obj.aliases),\n  groups: obj.groups || [],\n  introspection: _.mapValues(Object.fromEntries(obj.introspection), (iface) =>\n    toInterfaceStatsDTO(iface),\n  ),\n  metadata: Object.fromEntries(obj.metadata),\n  total_received_msgs: obj.totalReceivedMessages || 0,\n  total_received_bytes: obj.totalReceivedBytes || 0,\n  previous_interfaces: (obj.previousInterfaces || []).map(toInterfaceStatsDTO),\n  first_registration:\n    obj.firstRegistration != null ? obj.firstRegistration.toISOString() : undefined,\n  first_credentials_request:\n    obj.firstCredentialsRequest != null ? obj.firstCredentialsRequest.toISOString() : undefined,\n  last_disconnection:\n    obj.lastDisconnection != null ? obj.lastDisconnection.toISOString() : undefined,\n  last_connection: obj.lastConnection != null ? obj.lastConnection.toISOString() : undefined,\n  last_seen_ip: obj.lastSeenIp != null ? obj.lastSeenIp : undefined,\n  last_credentials_request_ip:\n    obj.lastCredentialsRequestIp != null ? obj.lastCredentialsRequestIp : undefined,\n});\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport AstarteDevicesSource from './astarte_devices_source.json';\nimport Container from './container.json';\nimport DynamicVirtualDevicePool from './dynamic_virtual_device_pool.json';\nimport SplitMap from './split_map.json';\nimport VirtualDevicePool from './virtual_device_pool.json';\n\nexport default [\n  AstarteDevicesSource,\n  Container,\n  DynamicVirtualDevicePool,\n  SplitMap,\n  VirtualDevicePool,\n];\n","/* eslint-disable camelcase */\n/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport _ from 'lodash';\n\nexport abstract class AstarteDeviceEvent {\n  readonly deviceId: string;\n\n  readonly timestamp: Date;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected constructor(arg: any) {\n    if (!arg || !_.isPlainObject(arg)) {\n      throw new Error('Invalid argument');\n    }\n\n    if (!arg.device_id || typeof arg.device_id !== 'string') {\n      throw new Error('Invalid device id');\n    }\n\n    if (!arg.timestamp) {\n      throw new Error('Missing event timestamp');\n    }\n\n    const timestamp = new Date(arg.timestamp);\n    if (!arg.timestamp || Number.isNaN(timestamp.getTime())) {\n      throw new Error('Invalid timestamp');\n    }\n\n    this.deviceId = arg.device_id;\n    this.timestamp = timestamp;\n  }\n}\n","/*\n  This file is part of Astarte.\n\n  Copyright 2020 Ispirata Srl\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport _ from 'lodash';\nimport { AstarteDeviceEvent } from './AstarteDeviceEvent';\n\nexport class AstarteDeviceConnectedEvent extends AstarteDeviceEvent {\n  readonly ip: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private constructor(arg: any) {\n    super(arg);\n    if (!arg.event || !_.isPlainObject(arg.event) || arg.event.type !== 'device_connected') {\n      throw new Error('Invalid event');\n    }\n    if (typeof arg.event.device_ip_address !== 'string') {\n      throw new Error('Invalid device ip address');\n    }\n    this.ip = arg.event.device_ip_address;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromJSON(arg: any): AstarteDeviceConnectedEvent {\n    return new AstarteDeviceConnectedEvent(arg);\n  }\n}\n","/*\n  This file is part of Astarte.\n\n  Copyright 2020 Ispirata Srl\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport _ from 'lodash';\nimport { AstarteDeviceEvent } from './AstarteDeviceEvent';\n\nexport class AstarteDeviceDisconnectedEvent extends AstarteDeviceEvent {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private constructor(arg: any) {\n    super(arg);\n    if (!arg.event || !_.isPlainObject(arg.event) || arg.event.type !== 'device_disconnected') {\n      throw new Error('Invalid event');\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromJSON(arg: any): AstarteDeviceDisconnectedEvent {\n    return new AstarteDeviceDisconnectedEvent(arg);\n  }\n}\n","/*\n  This file is part of Astarte.\n\n  Copyright 2020 Ispirata Srl\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport _ from 'lodash';\nimport { AstarteDeviceEvent } from './AstarteDeviceEvent';\n\ntype DeviceErrorName =\n  | 'write_on_server_owned_interface'\n  | 'invalid_interface'\n  | 'invalid_path'\n  | 'mapping_not_found'\n  | 'interface_loading_failed'\n  | 'ambiguous_path'\n  | 'undecodable_bson_payload'\n  | 'unexpected_value_type'\n  | 'value_size_exceeded'\n  | 'unexpected_object_key'\n  | 'invalid_introspection'\n  | 'unexpected_control_message'\n  | 'device_session_not_found'\n  | 'resend_interface_properties_failed'\n  | 'empty_cache_error';\n\nfunction isValidName(name: string): name is DeviceErrorName {\n  switch (name) {\n    case 'write_on_server_owned_interface':\n    case 'invalid_interface':\n    case 'invalid_path':\n    case 'mapping_not_found':\n    case 'interface_loading_failed':\n    case 'ambiguous_path':\n    case 'undecodable_bson_payload':\n    case 'unexpected_value_type':\n    case 'value_size_exceeded':\n    case 'unexpected_object_key':\n    case 'invalid_introspection':\n    case 'unexpected_control_message':\n    case 'device_session_not_found':\n    case 'resend_interface_properties_failed':\n    case 'empty_cache_error':\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport class AstarteDeviceErrorEvent extends AstarteDeviceEvent {\n  readonly errorName: DeviceErrorName;\n\n  readonly metadata: unknown;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private constructor(arg: any) {\n    super(arg);\n    if (!arg.event || !_.isPlainObject(arg.event) || arg.event.type !== 'device_error') {\n      throw new Error('Invalid event');\n    }\n    if (typeof arg.event.error_name !== 'string' && !isValidName(arg.event.error_name)) {\n      throw new Error('Invalid device error');\n    }\n    this.errorName = arg.event.error_name;\n    this.metadata = arg.event.metadata;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromJSON(arg: any): AstarteDeviceErrorEvent {\n    return new AstarteDeviceErrorEvent(arg);\n  }\n}\n","/*\n  This file is part of Astarte.\n\n  Copyright 2020 Ispirata Srl\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport _ from 'lodash';\nimport { AstarteDeviceEvent } from './AstarteDeviceEvent';\nimport type { AstarteDataType } from '../dataType';\n\nexport class AstarteDeviceIncomingDataEvent extends AstarteDeviceEvent {\n  readonly interfaceName: string;\n\n  readonly path: string;\n\n  readonly value: AstarteDataType;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private constructor(arg: any) {\n    super(arg);\n    if (!arg.event || !_.isPlainObject(arg.event) || arg.event.type !== 'incoming_data') {\n      throw new Error('Invalid event');\n    }\n    if (typeof arg.event.interface !== 'string') {\n      throw new Error('Invalid interface');\n    }\n    if (typeof arg.event.path !== 'string') {\n      throw new Error('Invalid path');\n    }\n    if (arg.event.value == null) {\n      throw new Error('Invalid sent value');\n    }\n\n    this.interfaceName = arg.event.interface;\n    this.path = arg.event.path;\n    this.value = arg.event.value;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromJSON(arg: any): AstarteDeviceIncomingDataEvent {\n    return new AstarteDeviceIncomingDataEvent(arg);\n  }\n}\n","/* eslint-disable camelcase */\n/*\n  This file is part of Astarte.\n\n  Copyright 2020 Ispirata Srl\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport _ from 'lodash';\nimport { AstarteDeviceEvent } from './AstarteDeviceEvent';\n\nexport class AstarteDeviceUnsetPropertyEvent extends AstarteDeviceEvent {\n  readonly interfaceName: string;\n\n  readonly path: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private constructor(arg: any) {\n    super(arg);\n    if (\n      !arg.event ||\n      !_.isPlainObject(arg.event) ||\n      arg.event.type !== 'incoming_data' ||\n      arg.event.value !== null\n    ) {\n      throw new Error('Invalid event');\n    }\n    if (typeof arg.event.interface !== 'string') {\n      throw new Error('Invalid interface');\n    }\n    if (typeof arg.event.path !== 'string') {\n      throw new Error('Invalid path');\n    }\n    if (arg.event.value) {\n      throw new Error('Invalid sent value');\n    }\n\n    this.interfaceName = arg.event.interface;\n    this.path = arg.event.path;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromJSON(arg: any): AstarteDeviceUnsetPropertyEvent {\n    return new AstarteDeviceUnsetPropertyEvent(arg);\n  }\n}\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport axios from 'axios';\nimport { Socket as PhoenixSocket } from 'phoenix';\nimport _ from 'lodash';\n\nimport {\n  AstarteDataTreeNode,\n  fromAstarteDeviceDTO,\n  fromAstarteInterfaceDTO,\n  toAstarteInterfaceDTO,\n  fromAstartePipelineDTO,\n  toAstartePipelineDTO,\n  fromAstarteTriggerDTO,\n  toAstarteTriggerDTO,\n  toAstarteDataTree,\n} from './transforms';\nimport * as definitions from './definitions';\nimport { AstarteCustomBlock, toAstarteBlock } from './models/Block';\nimport { AstarteDevice } from './models/Device';\nimport { AstarteFlow } from './models/Flow';\nimport { AstartePipeline } from './models/Pipeline';\nimport type { AstarteInterface } from './models/Interface';\nimport type { AstarteBlock } from './models/Block';\nimport type { AstarteTrigger } from './models/Trigger';\nimport type {\n  AstarteBlockDTO,\n  AstarteDeviceDTO,\n  AstarteInterfaceValues,\n  AstartePropertyData,\n  AstarteDatastreamIndividualData,\n  AstarteDatastreamObjectData,\n} from './types';\nimport { AstarteDeviceEvent, decodeEvent } from './types/events';\n\nexport type AstarteClientEvent = 'socketError' | 'socketClose';\n\nexport interface AstarteInterfaceDescriptor {\n  name: string;\n  major: number;\n  minor: number;\n}\ntype Channel = any;\ntype Trigger = any;\n\ntype InterfaceOrInterfaceNameParams =\n  | { interfaceName: AstarteInterface['name'] }\n  | { interface: AstarteInterface };\n\n// Wrap phoenix lib calls in promise for async handling\nasync function openNewSocketConnection(\n  connectionParams: any,\n  onErrorHanlder: any,\n  onCloseHandler: any,\n): Promise<PhoenixSocket> {\n  const { socketUrl, realm, token } = connectionParams;\n\n  return new Promise((resolve) => {\n    const phoenixSocket = new PhoenixSocket(socketUrl, {\n      params: {\n        realm,\n        token,\n      },\n    });\n    phoenixSocket.onError((e: any) => onErrorHanlder(e));\n    phoenixSocket.onClose((e: any) => onCloseHandler(e));\n    phoenixSocket.onOpen(() => {\n      resolve(phoenixSocket);\n    });\n    phoenixSocket.connect();\n  });\n}\n\nasync function joinChannel(phoenixSocket: PhoenixSocket, channelString: string): Promise<Channel> {\n  return new Promise((resolve, reject) => {\n    const channel = phoenixSocket.channel(channelString, {});\n    channel\n      .join()\n      .receive('ok', () => {\n        resolve(channel);\n      })\n      .receive('error', (err: any) => {\n        reject(err);\n      });\n  });\n}\n\nasync function leaveChannel(channel: Channel): Promise<void> {\n  return new Promise((resolve, reject) => {\n    channel\n      .leave()\n      .receive('ok', () => {\n        resolve();\n      })\n      .receive('error', (err: any) => {\n        reject(err);\n      });\n  });\n}\n\nasync function registerTrigger(channel: Channel, triggerPayload: Trigger): Promise<void> {\n  return new Promise((resolve, reject) => {\n    channel\n      .push('watch', triggerPayload)\n      .receive('ok', () => {\n        resolve();\n      })\n      .receive('error', (err: any) => {\n        reject(err);\n      });\n  });\n}\n\nfunction astarteAPIurl(strings: any, baseUrl: any, ...keys: any) {\n  return (...values: any) => {\n    const dict = values[values.length - 1] || {};\n    const result = [strings[1]];\n    keys.forEach((key: any, i: any) => {\n      const value = Number.isInteger(key) ? values[key] : dict[key];\n      result.push(value, strings[i + 2]);\n    });\n    return new URL(result.join(''), baseUrl);\n  };\n}\n\ninterface AstarteClientConfig {\n  appEngineApiUrl: string;\n  flowApiUrl: string;\n  onSocketClose?: () => any;\n  onSocketError?: () => any;\n  pairingApiUrl: string;\n  realm?: string;\n  realmManagementApiUrl: string;\n  token?: string;\n}\n\nclass AstarteClient {\n  private config: { realm: string };\n\n  private apiConfig: any;\n\n  private joinedChannels: {\n    [roomName: string]: Channel;\n  };\n\n  private listeners: {\n    [eventName: string]: Array<() => any>;\n  };\n\n  private onSocketClose?: () => any;\n\n  private onSocketError?: () => any;\n\n  private phoenixSocket: PhoenixSocket | null;\n\n  private token: string;\n\n  constructor(config: AstarteClientConfig) {\n    this.config = {\n      realm: config.realm || '',\n    };\n\n    this.token = config.token || '';\n\n    this.onSocketClose = config.onSocketClose;\n    this.onSocketError = config.onSocketError;\n\n    this.phoenixSocket = null;\n    this.joinedChannels = {};\n    this.listeners = {};\n\n    this.getConfigAuth = this.getConfigAuth.bind(this);\n    this.getBlocks = this.getBlocks.bind(this);\n    this.getDeviceData = this.getDeviceData.bind(this);\n    this.getDevicesStats = this.getDevicesStats.bind(this);\n    this.getInterface = this.getInterface.bind(this);\n    this.getInterfaceMajors = this.getInterfaceMajors.bind(this);\n    this.getInterfaceNames = this.getInterfaceNames.bind(this);\n    this.getTriggerNames = this.getTriggerNames.bind(this);\n    this.getTrigger = this.getTrigger.bind(this);\n    this.deleteTrigger = this.deleteTrigger.bind(this);\n    this.getAppengineHealth = this.getAppengineHealth.bind(this);\n    this.getRealmManagementHealth = this.getRealmManagementHealth.bind(this);\n    this.getPairingHealth = this.getPairingHealth.bind(this);\n    this.getFlowHealth = this.getFlowHealth.bind(this);\n    this.getPipeline = this.getPipeline.bind(this);\n    this.getPipelines = this.getPipelines.bind(this);\n\n    // prettier-ignore\n    this.apiConfig = {\n      realmManagementHealth: astarteAPIurl`${config.realmManagementApiUrl}health`,\n      auth:                  astarteAPIurl`${config.realmManagementApiUrl}v1/${'realm'}/config/auth`,\n      interfaces:            astarteAPIurl`${config.realmManagementApiUrl}v1/${'realm'}/interfaces`,\n      interfaceMajors:       astarteAPIurl`${config.realmManagementApiUrl}v1/${'realm'}/interfaces/${'interfaceName'}`,\n      interface:             astarteAPIurl`${config.realmManagementApiUrl}v1/${'realm'}/interfaces/${'interfaceName'}/${'interfaceMajor'}`,\n      interfaceData:         astarteAPIurl`${config.realmManagementApiUrl}v1/${'realm'}/interfaces/${'interfaceName'}/${'interfaceMajor'}`,\n      trigger:               astarteAPIurl`${config.realmManagementApiUrl}v1/${'realm'}/triggers/${'triggerName'}`,\n      triggers:              astarteAPIurl`${config.realmManagementApiUrl}v1/${'realm'}/triggers`,\n      appengineHealth:       astarteAPIurl`${config.appEngineApiUrl}health`,\n      devicesStats:          astarteAPIurl`${config.appEngineApiUrl}v1/${'realm'}/stats/devices`,\n      devices:               astarteAPIurl`${config.appEngineApiUrl}v1/${'realm'}/devices`,\n      deviceInfo:            astarteAPIurl`${config.appEngineApiUrl}v1/${'realm'}/devices/${'deviceId'}`,\n      deviceData:            astarteAPIurl`${config.appEngineApiUrl}v1/${'realm'}/devices/${'deviceId'}/interfaces/${'interfaceName'}`,\n      groups:                astarteAPIurl`${config.appEngineApiUrl}v1/${'realm'}/groups`,\n      groupDevices:          astarteAPIurl`${config.appEngineApiUrl}v1/${'realm'}/groups/${'groupName'}/devices`,\n      deviceInGroup:         astarteAPIurl`${config.appEngineApiUrl}v1/${'realm'}/groups/${'groupName'}/devices/${'deviceId'}`,\n      phoenixSocket:         astarteAPIurl`${config.appEngineApiUrl}v1/socket`,\n      pairingHealth:         astarteAPIurl`${config.pairingApiUrl}health`,\n      registerDevice:        astarteAPIurl`${config.pairingApiUrl}v1/${'realm'}/agent/devices`,\n      deviceAgent:           astarteAPIurl`${config.pairingApiUrl}v1/${'realm'}/agent/devices/${'deviceId'}`,\n      flowHealth:            astarteAPIurl`${config.flowApiUrl}health`,\n      flows:                 astarteAPIurl`${config.flowApiUrl}v1/${'realm'}/flows`,\n      flowInstance:          astarteAPIurl`${config.flowApiUrl}v1/${'realm'}/flows/${'instanceName'}`,\n      pipelines:             astarteAPIurl`${config.flowApiUrl}v1/${'realm'}/pipelines`,\n      pipelineSource:        astarteAPIurl`${config.flowApiUrl}v1/${'realm'}/pipelines/${'pipelineId'}`,\n      blocks:                astarteAPIurl`${config.flowApiUrl}v1/${'realm'}/blocks`,\n      blockSource:           astarteAPIurl`${config.flowApiUrl}v1/${'realm'}/blocks/${'blockId'}`,\n    };\n  }\n\n  addListener(eventName: AstarteClientEvent, callback: () => void): void {\n    if (!this.listeners[eventName]) {\n      this.listeners[eventName] = [];\n    }\n\n    this.listeners[eventName].push(callback);\n  }\n\n  removeListener(eventName: AstarteClientEvent, callback: () => void): void {\n    const previousListeners = this.listeners[eventName];\n    if (previousListeners) {\n      this.listeners[eventName] = previousListeners.filter((listener) => listener !== callback);\n    }\n  }\n\n  private dispatch(eventName: AstarteClientEvent): void {\n    const listeners = this.listeners[eventName];\n    if (listeners) {\n      listeners.forEach((listener) => listener());\n    }\n  }\n\n  setCredentials(params: { realm: string; token: string } | null): void {\n    this.config.realm = params?.realm || '';\n    this.token = params?.token || '';\n  }\n\n  async getConfigAuth(): Promise<{ publicKey: string }> {\n    const response = await this.$get(this.apiConfig.auth(this.config));\n    return { publicKey: response.data.jwt_public_key_pem };\n  }\n\n  async updateConfigAuth(params: { publicKey: string }): Promise<void> {\n    await this.$put(this.apiConfig.auth(this.config), {\n      jwt_public_key_pem: params.publicKey,\n    });\n  }\n\n  async getInterfaceNames(): Promise<string[]> {\n    const response = await this.$get(this.apiConfig.interfaces(this.config));\n    return response.data;\n  }\n\n  async getInterfaceMajors(interfaceName: string): Promise<number[]> {\n    const response = await this.$get(\n      this.apiConfig.interfaceMajors({ ...this.config, interfaceName }),\n    );\n    return response.data;\n  }\n\n  async getInterface(params: {\n    interfaceName: AstarteInterface['name'];\n    interfaceMajor: AstarteInterface['major'];\n  }): Promise<AstarteInterface> {\n    const { interfaceName, interfaceMajor } = params;\n    const response = await this.$get(\n      this.apiConfig.interfaceData({\n        interfaceName,\n        interfaceMajor,\n        ...this.config,\n      }),\n    );\n    return fromAstarteInterfaceDTO(response.data);\n  }\n\n  async installInterface(iface: AstarteInterface): Promise<void> {\n    await this.$post(this.apiConfig.interfaces(this.config), toAstarteInterfaceDTO(iface));\n  }\n\n  async updateInterface(iface: AstarteInterface): Promise<void> {\n    await this.$put(\n      this.apiConfig.interface({\n        interfaceName: iface.name,\n        interfaceMajor: iface.major,\n        ...this.config,\n      }),\n      toAstarteInterfaceDTO(iface),\n    );\n  }\n\n  async deleteInterface(\n    interfaceName: AstarteInterface['name'],\n    interfaceMajor: AstarteInterface['major'],\n  ): Promise<void> {\n    await this.$delete(this.apiConfig.interface({ ...this.config, interfaceName, interfaceMajor }));\n  }\n\n  async getTriggerNames(): Promise<string[]> {\n    const response = await this.$get(this.apiConfig.triggers(this.config));\n    return response.data;\n  }\n\n  async getTrigger(triggerName: string): Promise<AstarteTrigger> {\n    const response = await this.$get(this.apiConfig.trigger({ ...this.config, triggerName }));\n    return fromAstarteTriggerDTO(response.data);\n  }\n\n  async deleteTrigger(triggerName: string): Promise<void> {\n    await this.$delete(this.apiConfig.trigger({ ...this.config, triggerName }));\n  }\n\n  async installTrigger(trigger: AstarteTrigger): Promise<void> {\n    await this.$post(this.apiConfig.triggers(this.config), toAstarteTriggerDTO(trigger));\n  }\n\n  async getDevicesStats(): Promise<any> {\n    const response = await this.$get(this.apiConfig.devicesStats(this.config));\n    return response.data;\n  }\n\n  async getDevices(params: {\n    details?: boolean;\n    from?: string;\n    limit?: number;\n  }): Promise<{ devices: AstarteDevice[]; nextToken: string | null }> {\n    const endpointUri = new URL(this.apiConfig.devices(this.config));\n    const query: any = {};\n    if (params.details) {\n      query.details = true;\n    }\n    if (params.limit) {\n      query.limit = params.limit;\n    }\n    if (params.from) {\n      query.from_token = params.from;\n    }\n    endpointUri.search = new URLSearchParams(query).toString();\n    const response = await this.$get(endpointUri.toString());\n    const devices = response.data.map((device: AstarteDeviceDTO) => fromAstarteDeviceDTO(device));\n    const nextToken = new URLSearchParams(response.links.next).get('from_token');\n    return { devices, nextToken };\n  }\n\n  async getDeviceInfo(deviceId: AstarteDevice['id']): Promise<AstarteDevice> {\n    const response = await this.$get(this.apiConfig.deviceInfo({ deviceId, ...this.config }));\n    return fromAstarteDeviceDTO(response.data);\n  }\n\n  async insertDeviceAlias(\n    deviceId: AstarteDevice['id'],\n    aliasKey: string,\n    aliasValue: string,\n  ): Promise<void> {\n    await this.$patch(this.apiConfig.deviceInfo({ deviceId, ...this.config }), {\n      aliases: { [aliasKey]: aliasValue },\n    });\n  }\n\n  async deleteDeviceAlias(deviceId: AstarteDevice['id'], aliasKey: string): Promise<void> {\n    await this.$patch(this.apiConfig.deviceInfo({ deviceId, ...this.config }), {\n      aliases: { [aliasKey]: null },\n    });\n  }\n\n  async insertDeviceMetadata(\n    deviceId: AstarteDevice['id'],\n    metadataKey: string,\n    metadataValue: string,\n  ): Promise<void> {\n    await this.$patch(this.apiConfig.deviceInfo({ deviceId, ...this.config }), {\n      metadata: { [metadataKey]: metadataValue },\n    });\n  }\n\n  async deleteDeviceMetadata(deviceId: AstarteDevice['id'], metadataKey: string): Promise<void> {\n    await this.$patch(this.apiConfig.deviceInfo({ deviceId, ...this.config }), {\n      metadata: { [metadataKey]: null },\n    });\n  }\n\n  async inhibitDeviceCredentialsRequests(\n    deviceId: AstarteDevice['id'],\n    inhibit: boolean,\n  ): Promise<void> {\n    await this.$patch(this.apiConfig.deviceInfo({ deviceId, ...this.config }), {\n      credentials_inhibited: inhibit,\n    });\n  }\n\n  async getDeviceData(params: {\n    deviceId: AstarteDevice['id'];\n    interfaceName: AstarteInterface['name'];\n  }): Promise<AstarteInterfaceValues> {\n    const response = await this.$get(\n      this.apiConfig.deviceData({\n        deviceId: params.deviceId,\n        interfaceName: params.interfaceName,\n        ...this.config,\n      }),\n    );\n    return response.data;\n  }\n\n  async getDeviceDataTree(\n    params: { deviceId: AstarteDevice['id'] } & InterfaceOrInterfaceNameParams,\n  ): Promise<\n    | AstarteDataTreeNode<AstartePropertyData>\n    | AstarteDataTreeNode<AstarteDatastreamIndividualData>\n    | AstarteDataTreeNode<AstarteDatastreamObjectData>\n  > {\n    let iface: AstarteInterface;\n    if ('interface' in params) {\n      iface = params.interface;\n    } else {\n      const device = await this.getDeviceInfo(params.deviceId);\n      const interfaceIntrospection = device.introspection.get(params.interfaceName);\n      if (!interfaceIntrospection) {\n        throw new Error(`Could not find interface ${params.interfaceName} in device introspection`);\n      }\n      iface = await this.getInterface({\n        interfaceName: params.interfaceName,\n        interfaceMajor: interfaceIntrospection.major,\n      });\n    }\n    const interfaceValues = await this.getDeviceData({\n      deviceId: params.deviceId,\n      interfaceName: iface.name,\n    });\n    return toAstarteDataTree({\n      interface: iface,\n      data: interfaceValues,\n    });\n  }\n\n  async getGroupList(): Promise<string[]> {\n    const response = await this.$get(this.apiConfig.groups(this.config));\n    return response.data;\n  }\n\n  async createGroup(params: {\n    groupName: string;\n    deviceIds: AstarteDevice['id'][];\n  }): Promise<void> {\n    const { groupName, deviceIds } = params;\n    await this.$post(this.apiConfig.groups(this.config), {\n      group_name: groupName,\n      devices: deviceIds,\n    });\n  }\n\n  async getDevicesInGroup(params: {\n    groupName: string;\n    details?: boolean;\n  }): Promise<AstarteDevice[]> {\n    const { groupName, details } = params;\n    if (!groupName) {\n      throw new Error('Invalid group name');\n    }\n    /* Double encoding to preserve the URL format when groupName contains % and / */\n    const encodedGroupName = encodeURIComponent(encodeURIComponent(groupName));\n    const endpointUri = new URL(\n      this.apiConfig.groupDevices({\n        ...this.config,\n        groupName: encodedGroupName,\n      }),\n    );\n    if (details) {\n      endpointUri.search = new URLSearchParams({ details: 'true' }).toString();\n    }\n    const response = await this.$get(endpointUri.toString());\n    return response.data.map((device: AstarteDeviceDTO) => fromAstarteDeviceDTO(device));\n  }\n\n  async addDeviceToGroup(params: { groupName: string; deviceId: string }): Promise<void> {\n    const { groupName, deviceId } = params;\n\n    if (!groupName) {\n      throw new Error('Invalid group name');\n    }\n\n    if (!deviceId) {\n      throw new Error('Invalid device ID');\n    }\n\n    /* Double encoding to preserve the URL format when groupName contains % and / */\n    const encodedGroupName = encodeURIComponent(encodeURIComponent(groupName));\n\n    await this.$post(\n      this.apiConfig.groupDevices({\n        ...this.config,\n        groupName: encodedGroupName,\n      }),\n      { device_id: deviceId },\n    );\n  }\n\n  async removeDeviceFromGroup(params: { groupName: string; deviceId: string }): Promise<void> {\n    const { groupName, deviceId } = params;\n\n    if (!groupName) {\n      throw new Error('Invalid group name');\n    }\n\n    if (!deviceId) {\n      throw new Error('Invalid device ID');\n    }\n\n    /* Double encoding to preserve the URL format when groupName contains % and / */\n    const encodedGroupName = encodeURIComponent(encodeURIComponent(groupName));\n\n    await this.$delete(\n      this.apiConfig.deviceInGroup({\n        ...this.config,\n        groupName: encodedGroupName,\n        deviceId,\n      }),\n    );\n  }\n\n  async registerDevice(params: {\n    deviceId: AstarteDevice['id'];\n    introspection?: { [interfaceName: string]: AstarteInterfaceDescriptor };\n  }): Promise<{ credentialsSecret: string }> {\n    const { deviceId, introspection } = params;\n    const requestBody: any = {\n      hw_id: deviceId,\n    };\n    if (introspection) {\n      const initialIntrospection = _.mapValues(introspection, (interfaceDescriptor) =>\n        _.pick(interfaceDescriptor, ['minor', 'major']),\n      );\n      requestBody.initial_introspection = initialIntrospection;\n    }\n    const response = await this.$post(this.apiConfig.registerDevice(this.config), requestBody);\n    return { credentialsSecret: response.data.credentials_secret };\n  }\n\n  async wipeDeviceCredentials(deviceId: AstarteDevice['id']): Promise<void> {\n    await this.$delete(this.apiConfig.deviceAgent({ deviceId, ...this.config }));\n  }\n\n  async getFlowInstances(): Promise<Array<AstarteFlow['name']>> {\n    const response = await this.$get(this.apiConfig.flows(this.config));\n    return response.data;\n  }\n\n  async getFlowDetails(flowName: AstarteFlow['name']): Promise<AstarteFlow> {\n    const response = await this.$get(\n      this.apiConfig.flowInstance({ ...this.config, instanceName: flowName }),\n    );\n    return AstarteFlow.fromObject(response.data);\n  }\n\n  async createNewFlowInstance(params: {\n    name: AstarteFlow['name'];\n    pipeline: string;\n    config: { [key: string]: any };\n  }): Promise<void> {\n    await this.$post(this.apiConfig.flows(this.config), params);\n  }\n\n  async deleteFlowInstance(flowName: AstarteFlow['name']): Promise<void> {\n    await this.$delete(this.apiConfig.flowInstance({ ...this.config, instanceName: flowName }));\n  }\n\n  async getPipelineNames(): Promise<Array<AstartePipeline['name']>> {\n    const response = await this.$get(this.apiConfig.pipelines(this.config));\n    return response.data;\n  }\n\n  async getPipelines(): Promise<AstartePipeline[]> {\n    const pipelineNames = await this.getPipelineNames();\n    const pipelines = await Promise.all(pipelineNames.map(this.getPipeline));\n    return pipelines;\n  }\n\n  async getPipeline(pipelineId: AstartePipeline['name']): Promise<AstartePipeline> {\n    const response = await this.$get(this.apiConfig.pipelineSource({ ...this.config, pipelineId }));\n    return new AstartePipeline(fromAstartePipelineDTO(response.data));\n  }\n\n  async getPipelineSource(pipelineId: any): Promise<any> {\n    const response = await this.$get(this.apiConfig.pipelineSource({ ...this.config, pipelineId }));\n    return response.data;\n  }\n\n  async registerPipeline(pipeline: AstartePipeline): Promise<void> {\n    await this.$post(this.apiConfig.pipelines(this.config), toAstartePipelineDTO(pipeline));\n  }\n\n  async deletePipeline(pipelineId: any): Promise<void> {\n    await this.$delete(this.apiConfig.pipelineSource({ ...this.config, pipelineId }));\n  }\n\n  async getBlocks(): Promise<AstarteBlock[]> {\n    const staticBlocks = definitions.blocks as AstarteBlockDTO[];\n    const response = await this.$get(this.apiConfig.blocks(this.config));\n    const fetchedBlocks = response.data as AstarteBlockDTO[];\n    const allBlocks = _.uniqBy(fetchedBlocks.concat(staticBlocks), 'name');\n    return allBlocks.map((block: AstarteBlockDTO) => toAstarteBlock(block));\n  }\n\n  async registerBlock(block: AstarteCustomBlock): Promise<void> {\n    const staticBlocksName = definitions.blocks.map((b) => b.name);\n    if (staticBlocksName.includes(block.name)) {\n      throw new Error(\"The block's name already exists\");\n    }\n    await this.$post(this.apiConfig.blocks(this.config), block);\n  }\n\n  async getBlock(blockId: AstarteBlock['name']): Promise<AstarteBlock> {\n    let blockDTO: AstarteBlockDTO;\n    const staticBlocksName = definitions.blocks.map((block) => block.name);\n    if (staticBlocksName.includes(blockId)) {\n      blockDTO = definitions.blocks.find((block) => block.name === blockId) as AstarteBlockDTO;\n    } else {\n      const response = await this.$get(this.apiConfig.blockSource({ ...this.config, blockId }));\n      blockDTO = response.data;\n    }\n    return toAstarteBlock(blockDTO);\n  }\n\n  async deleteBlock(blockId: AstarteBlock['name']): Promise<void> {\n    const staticBlocksName = definitions.blocks.map((b) => b.name);\n    if (staticBlocksName.includes(blockId)) {\n      throw new Error('Cannot delete a native block');\n    }\n    await this.$delete(this.apiConfig.blockSource({ ...this.config, blockId }));\n  }\n\n  async getRealmManagementHealth(): Promise<any> {\n    const response = await this.$get(this.apiConfig.realmManagementHealth(this.config));\n    return response.data;\n  }\n\n  async getAppengineHealth(): Promise<any> {\n    const response = await this.$get(this.apiConfig.appengineHealth(this.config));\n    return response.data;\n  }\n\n  async getPairingHealth(): Promise<any> {\n    const response = await this.$get(this.apiConfig.pairingHealth(this.config));\n    return response.data;\n  }\n\n  async getFlowHealth(): Promise<any> {\n    const response = await this.$get(this.apiConfig.flowHealth(this.config));\n    return response.data;\n  }\n\n  private async $get(url: string): Promise<any> {\n    return axios({\n      method: 'get',\n      url,\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n        'Content-Type': 'application/json;charset=UTF-8',\n      },\n    }).then((response) => response.data);\n  }\n\n  private async $post(url: string, data: any): Promise<any> {\n    return axios({\n      method: 'post',\n      url,\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n        'Content-Type': 'application/json;charset=UTF-8',\n      },\n      data: {\n        data,\n      },\n    }).then((response) => response.data);\n  }\n\n  private async $put(url: string, data: any): Promise<any> {\n    return axios({\n      method: 'put',\n      url,\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n        'Content-Type': 'application/json;charset=UTF-8',\n      },\n      data: {\n        data,\n      },\n    }).then((response) => response.data);\n  }\n\n  private async $patch(url: string, data: any): Promise<any> {\n    return axios({\n      method: 'patch',\n      url,\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n        'Content-Type': 'application/merge-patch+json',\n      },\n      data: {\n        data,\n      },\n    }).then((response) => response.data);\n  }\n\n  private async $delete(url: string): Promise<any> {\n    return axios({\n      method: 'delete',\n      url,\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n        'Content-Type': 'application/json;charset=UTF-8',\n      },\n    }).then((response) => response.data);\n  }\n\n  private async openSocketConnection(): Promise<PhoenixSocket> {\n    if (this.phoenixSocket) {\n      return Promise.resolve(this.phoenixSocket);\n    }\n\n    const socketUrl = new URL(this.apiConfig.phoenixSocket(this.config));\n    socketUrl.protocol = socketUrl.protocol === 'https:' ? 'wss:' : 'ws:';\n\n    return new Promise((resolve) => {\n      openNewSocketConnection(\n        {\n          socketUrl,\n          realm: this.config.realm,\n          token: this.token,\n        },\n        () => {\n          this.dispatch('socketError');\n        },\n        () => {\n          this.dispatch('socketClose');\n        },\n      ).then((socket) => {\n        this.phoenixSocket = socket;\n        resolve(socket);\n      });\n    });\n  }\n\n  async joinRoom(roomName: string): Promise<Channel> {\n    const { phoenixSocket } = this;\n    if (!phoenixSocket) {\n      return new Promise((resolve) => {\n        this.openSocketConnection().then(() => {\n          resolve(this.joinRoom(roomName));\n        });\n      });\n    }\n\n    const channel = this.joinedChannels[roomName];\n    if (channel) {\n      return Promise.resolve(channel);\n    }\n\n    return new Promise((resolve) => {\n      joinChannel(phoenixSocket, `rooms:${this.config.realm}:${roomName}`).then((joinedChannel) => {\n        this.joinedChannels[roomName] = joinedChannel;\n        resolve(joinedChannel);\n      });\n    });\n  }\n\n  async listenForEvents(\n    roomName: string,\n    eventHandler: (event: AstarteDeviceEvent) => void,\n  ): Promise<void> {\n    const channel = this.joinedChannels[roomName];\n    if (!channel) {\n      return Promise.reject(new Error(\"Can't listen for room events before joining it first\"));\n    }\n\n    channel.on('new_event', (jsonEvent: any) => {\n      const decodedEvent = decodeEvent(jsonEvent);\n\n      if (decodedEvent) {\n        eventHandler(decodedEvent);\n      } else {\n        throw new Error('Unrecognised event received');\n      }\n    });\n    return Promise.resolve();\n  }\n\n  async registerVolatileTrigger(roomName: string, triggerPayload: Trigger): Promise<void> {\n    const channel = this.joinedChannels[roomName];\n    if (!channel) {\n      return Promise.reject(new Error(\"Room not joined, couldn't register trigger\"));\n    }\n\n    return registerTrigger(channel, triggerPayload);\n  }\n\n  async leaveRoom(roomName: string): Promise<void> {\n    const channel = this.joinedChannels[roomName];\n    if (!channel) {\n      return Promise.reject(new Error(\"Can't leave a room without joining it first\"));\n    }\n\n    return leaveChannel(channel).then(() => {\n      delete this.joinedChannels[roomName];\n    });\n  }\n\n  get joinedRooms(): any[] {\n    const rooms: string[] = [];\n    Object.keys(this.joinedChannels).forEach((roomName) => {\n      rooms.push(roomName);\n    });\n    return rooms;\n  }\n\n  get realm(): string | null {\n    return this.config.realm || null;\n  }\n}\n\nexport default AstarteClient;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport AstarteClient from './client';\n\nexport type { AstarteInterfaceDescriptor } from './client';\n\nexport {\n  AstarteCustomBlock,\n  AstarteNativeBlock,\n  AstarteDevice,\n  AstarteFlow,\n  AstartePipeline,\n  AstarteInterface,\n  AstarteMapping,\n  AstarteRealm,\n  AstarteToken,\n  AstarteTrigger,\n} from './models';\n\nexport type {\n  AstarteTriggerHTTPAction,\n  AstarteTriggerAMQPAction,\n  AstarteSimpleDeviceTrigger,\n  AstarteSimpleDataTrigger,\n  AstarteSimpleTrigger,\n} from './models';\n\nexport {\n  AstarteDeviceEvent,\n  AstarteDeviceConnectedEvent,\n  AstarteDeviceDisconnectedEvent,\n  AstarteDeviceErrorEvent,\n  AstarteDeviceIncomingDataEvent,\n  AstarteDeviceUnsetPropertyEvent,\n} from './types/events';\n\nexport type { AstarteBlock, AstarteDeviceInterfaceStats } from './models';\n\nexport type { AstarteDataTreeNode, AstarteDataTreeKind } from './transforms';\n\nexport type {\n  AstarteDataType,\n  AstarteDataTuple,\n  AstarteDataValue,\n  AstartePropertyData,\n  AstarteDatastreamData,\n  AstarteDatastreamIndividualData,\n  AstarteDatastreamObjectData,\n  AstartePropertiesInterfaceValues,\n  AstarteIndividualDatastreamInterfaceValue,\n  AstarteIndividualDatastreamInterfaceValues,\n  AstarteAggregatedDatastreamInterfaceValue,\n  AstarteAggregatedDatastreamInterfaceValues,\n  AstarteInterfaceValues,\n} from './types';\n\nexport default AstarteClient;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport _ from 'lodash';\n\nimport type { AstartePipeline } from '../models/Pipeline';\nimport type { AstartePipelineDTO } from '../types';\n\nexport const fromAstartePipelineDTO = (dto: AstartePipelineDTO): AstartePipeline => ({\n  name: dto.name,\n  description: dto.description,\n  schema: dto.schema || {},\n  source: dto.source,\n});\n\nexport const toAstartePipelineDTO = (obj: AstartePipeline): AstartePipelineDTO => ({\n  name: obj.name,\n  description: obj.description,\n  schema: _.isEmpty(obj.schema) ? undefined : obj.schema,\n  source: obj.source,\n});\n","/*\n  This file is part of Astarte.\n\n  Copyright 2020 Ispirata Srl\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport { AstarteDeviceEvent } from './AstarteDeviceEvent';\nimport { AstarteDeviceConnectedEvent } from './AstarteDeviceConnectedEvent';\nimport { AstarteDeviceDisconnectedEvent } from './AstarteDeviceDisconnectedEvent';\nimport { AstarteDeviceErrorEvent } from './AstarteDeviceErrorEvent';\nimport { AstarteDeviceIncomingDataEvent } from './AstarteDeviceIncomingDataEvent';\nimport { AstarteDeviceUnsetPropertyEvent } from './AstarteDeviceUnsetPropertyEvent';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction decodeEvent(arg: any): AstarteDeviceEvent | null {\n  return decodeAnyOf(\n    [\n      AstarteDeviceConnectedEvent.fromJSON,\n      AstarteDeviceDisconnectedEvent.fromJSON,\n      AstarteDeviceErrorEvent.fromJSON,\n      AstarteDeviceUnsetPropertyEvent.fromJSON,\n      AstarteDeviceIncomingDataEvent.fromJSON,\n    ],\n    arg,\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype EventDecoder = (arg: any) => AstarteDeviceEvent;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction decodeAnyOf(decoders: EventDecoder[], value: any): AstarteDeviceEvent | null {\n  let decodedValue = null;\n\n  for (let i = 0; i < decoders.length && decodedValue === null; i += 1) {\n    try {\n      decodedValue = decoders[i](value);\n    } catch (err) {\n      // decoder not matching\n    }\n  }\n\n  return decodedValue;\n}\n\nexport {\n  AstarteDeviceEvent,\n  AstarteDeviceConnectedEvent,\n  AstarteDeviceDisconnectedEvent,\n  AstarteDeviceErrorEvent,\n  AstarteDeviceIncomingDataEvent,\n  AstarteDeviceUnsetPropertyEvent,\n  decodeEvent,\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nconst iconToClassName = {\n  add: 'fas fa-plus',\n  arrowLeft: 'fas fa-chevron-left',\n  blocks: 'fas fa-shapes',\n  copyPaste: 'fas fa-paste',\n  delete: 'fas fa-times',\n  devices: 'fas fa-cube',\n  documentation: 'fa fa-book',\n  edit: 'fas fa-pencil-alt',\n  erase: 'fas fa-eraser',\n  filter: 'fas fa-filter',\n  flows: 'fas fa-wind',\n  groups: 'fas fa-object-group',\n  home: 'fas fa-home',\n  interfaces: 'fas fa-stream',\n  logout: 'fas fa-sign-out-alt',\n  pipelines: 'fas fa-code-branch',\n  settings: 'fas fa-cog',\n  statusOK: 'fas fa-check-circle color-green',\n  statusConnected: 'fas fa-circle color-green',\n  statusDisconnected: 'fas fa-circle color-red',\n  statusKO: 'fas fa-times-circle color-red',\n  statusNeverConnected: 'fas fa-circle color-grey',\n  triggers: 'fas fa-bolt',\n};\n\ntype Icon = keyof typeof iconToClassName;\n\nconst dangerIcons: Icon[] = ['delete', 'erase'];\n\ninterface Props {\n  as?: 'default' | 'button';\n  className?: string;\n  icon: Icon;\n  onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  style?: React.CSSProperties;\n  tooltip?: string;\n  tooltipPlacement?: React.ComponentProps<typeof OverlayTrigger>['placement'];\n}\n\nexport default ({\n  as = 'default',\n  className,\n  icon,\n  onClick,\n  style = {},\n  tooltip,\n  tooltipPlacement,\n}: Props): React.ReactElement => {\n  const iconStyle = { ...style };\n  const iconClassNames: string[] = [];\n  iconClassNames.push(iconToClassName[icon]);\n\n  if (onClick) {\n    iconStyle.cursor = 'pointer';\n  }\n  if (as === 'button') {\n    iconClassNames.push('btn');\n  }\n  if (dangerIcons.includes(icon)) {\n    if (iconClassNames.includes('btn')) {\n      iconClassNames.push('btn-danger');\n    } else {\n      iconClassNames.push('color-red');\n    }\n  }\n  if (className) {\n    iconClassNames.push(className);\n  }\n\n  const iconElement = (\n    <i className={iconClassNames.join(' ')} style={iconStyle} onClick={onClick} />\n  );\n\n  return tooltip ? (\n    <OverlayTrigger\n      delay={{ show: 150, hide: 400 }}\n      overlay={<Tooltip id=\"tooltip\">{tooltip}</Tooltip>}\n      placement={tooltipPlacement}\n    >\n      {iconElement}\n    </OverlayTrigger>\n  ) : (\n    iconElement\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Col, Form, InputGroup } from 'react-bootstrap';\nimport { AstarteMapping } from 'astarte-client';\nimport type { AstarteInterface } from 'astarte-client';\nimport _ from 'lodash';\n\nconst astarteDataTypes: AstarteMapping['type'][] = [\n  'string',\n  'boolean',\n  'double',\n  'integer',\n  'longinteger',\n  'binaryblob',\n  'datetime',\n  'doublearray',\n  'integerarray',\n  'booleanarray',\n  'longintegerarray',\n  'stringarray',\n  'binaryblobarray',\n  'datetimearray',\n];\n\nconst defaultMapping: AstarteMapping = {\n  endpoint: '',\n  type: 'double',\n};\n\ninterface Props {\n  interfaceType: AstarteInterface['type'];\n  interfaceAggregation?: AstarteInterface['aggregation'];\n  mapping?: AstarteMapping;\n  onChange: (updatedMapping: AstarteMapping) => unknown;\n}\n\nexport default ({\n  interfaceType,\n  interfaceAggregation = 'individual',\n  mapping = defaultMapping,\n  onChange,\n}: Props): React.ReactElement => {\n  const isPropertiesInterface = interfaceType === 'properties';\n  const isDatastreamIndividualInterface =\n    interfaceType === 'datastream' && interfaceAggregation === 'individual';\n  const showMappingExpiry = mapping.retention === 'volatile' || mapping.retention === 'stored';\n  const showInterfaceDatabaseRetentionTtl = mapping.databaseRetentionPolicy === 'use_ttl';\n\n  let mappingValidationErrors: { [property: string]: string } = {};\n  try {\n    AstarteMapping.validation.validateSync(mapping, { abortEarly: false });\n  } catch (err) {\n    mappingValidationErrors = _.mapValues(_.keyBy(_.uniqBy(err.inner, 'path'), 'path'), 'message');\n  }\n\n  return (\n    <Form>\n      <Form.Row className=\"mb-2\">\n        <Col sm={12}>\n          <Form.Group controlId=\"mappingEndpoint\">\n            <Form.Label>Endpoint</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={mapping.endpoint}\n              onChange={({ target: { value } }) => onChange({ ...mapping, endpoint: value })}\n              autoComplete=\"off\"\n              required\n              isInvalid={mappingValidationErrors.endpoint != null}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {mappingValidationErrors.endpoint}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Col>\n      </Form.Row>\n      <Form.Row className=\"mb-2\">\n        <Col sm={isPropertiesInterface ? 8 : 12}>\n          <Form.Group controlId=\"mappingType\">\n            <Form.Label>Type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={mapping.type}\n              onChange={({ target: { value } }) =>\n                onChange({ ...mapping, type: value as AstarteMapping['type'] })\n              }\n              isInvalid={mappingValidationErrors.type != null}\n            >\n              {astarteDataTypes.map((t) => (\n                <option key={t}>{t}</option>\n              ))}\n            </Form.Control>\n            <Form.Control.Feedback type=\"invalid\">\n              {mappingValidationErrors.type}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Col>\n        {isPropertiesInterface && (\n          <Col sm={4}>\n            <Form.Group controlId=\"mappingAllowUnset\">\n              <Form.Label>Property options</Form.Label>\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Allow unset\"\n                checked={!!mapping.allowUnset}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const allowUnset = !!e.target.checked;\n                  onChange({ ...mapping, allowUnset: allowUnset || undefined });\n                }}\n                isInvalid={mappingValidationErrors.allowUnset != null}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {mappingValidationErrors.allowUnset}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n        )}\n      </Form.Row>\n      {isDatastreamIndividualInterface && (\n        <Form.Row className=\"mb-2\">\n          <Col md={6}>\n            <Form.Group controlId=\"mappingReliability\">\n              <Form.Label>Reliability</Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"reliability\"\n                value={mapping.reliability || 'unreliable'}\n                onChange={({ currentTarget: { value } }) => {\n                  let reliability = value as AstarteMapping['reliability'];\n                  reliability = reliability === 'unreliable' ? undefined : reliability;\n                  onChange({ ...mapping, reliability });\n                }}\n                isInvalid={mappingValidationErrors.reliability != null}\n              >\n                <option value=\"unreliable\">Unreliable</option>\n                <option value=\"guaranteed\">Guaranteed</option>\n                <option value=\"unique\">Unique</option>\n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {mappingValidationErrors.reliability}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n          <Col sm={6}>\n            <Form.Group controlId=\"mappingExplicitTimestamp\">\n              <Form.Label>Timestamp</Form.Label>\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Explicit timestamp\"\n                checked={!!mapping.explicitTimestamp}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const explicitTimestamp = !!e.target.checked;\n                  onChange({ ...mapping, explicitTimestamp: explicitTimestamp || undefined });\n                }}\n                isInvalid={mappingValidationErrors.explicitTimestamp != null}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {mappingValidationErrors.explicitTimestamp}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n      )}\n      {isDatastreamIndividualInterface && (\n        <Form.Row className=\"mb-2\">\n          <Col md={showMappingExpiry ? 6 : 12}>\n            <Form.Group controlId=\"mappingRetention\">\n              <Form.Label>Retention</Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"retention\"\n                value={mapping.retention || 'discard'}\n                onChange={({ currentTarget: { value } }) => {\n                  const retention = value as AstarteMapping['retention'];\n                  onChange({\n                    ...mapping,\n                    retention: retention === 'discard' ? undefined : retention,\n                    expiry: retention === 'discard' ? undefined : mapping.expiry,\n                  });\n                }}\n                isInvalid={mappingValidationErrors.retention != null}\n              >\n                <option value=\"discard\">Discard</option>\n                <option value=\"volatile\">Volatile</option>\n                <option value=\"stored\">Stored</option>\n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {mappingValidationErrors.retention}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n          {showMappingExpiry && (\n            <Col md={6}>\n              <Form.Group controlId=\"mappingExpiry\">\n                <Form.Label>Expiry</Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    min={0}\n                    value={mapping.expiry || 0}\n                    onChange={({ currentTarget: { value } }) => {\n                      const expiry = parseInt(value, 10) || undefined;\n                      onChange({ ...mapping, expiry });\n                    }}\n                    isInvalid={mappingValidationErrors.expiry != null}\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text>seconds</InputGroup.Text>\n                  </InputGroup.Append>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {mappingValidationErrors.expiry}\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n            </Col>\n          )}\n        </Form.Row>\n      )}\n      {isDatastreamIndividualInterface && (\n        <Form.Row className=\"mb-2\">\n          <Col md={showInterfaceDatabaseRetentionTtl ? 6 : 12}>\n            <Form.Group controlId=\"mappingDatabaseRetention\">\n              <Form.Label>Database retention</Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"mappingDatabaseRetention\"\n                value={mapping.databaseRetentionPolicy || 'no_ttl'}\n                onChange={({ currentTarget: { value } }) => {\n                  const databaseRetentionPolicy = value as AstarteMapping['databaseRetentionPolicy'];\n                  onChange({\n                    ...mapping,\n                    databaseRetentionPolicy:\n                      databaseRetentionPolicy === 'no_ttl' ? undefined : databaseRetentionPolicy,\n                    databaseRetentionTtl:\n                      databaseRetentionPolicy === 'no_ttl'\n                        ? undefined\n                        : mapping.databaseRetentionTtl || 60,\n                  });\n                }}\n                isInvalid={mappingValidationErrors.databaseRetentionPolicy != null}\n              >\n                <option value=\"no_ttl\">No TTL</option>\n                <option value=\"use_ttl\">Use TTL</option>\n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {mappingValidationErrors.databaseRetentionPolicy}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n          {showInterfaceDatabaseRetentionTtl && (\n            <Col md={6}>\n              <Form.Group controlId=\"mappingTTL\">\n                <Form.Label>TTL</Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    min={60}\n                    value={mapping.databaseRetentionTtl || 60}\n                    onChange={({ currentTarget: { value } }) => {\n                      const databaseRetentionTtl = parseInt(value, 10);\n                      onChange({ ...mapping, databaseRetentionTtl });\n                    }}\n                    isInvalid={mappingValidationErrors.databaseRetentionTtl != null}\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text>seconds</InputGroup.Text>\n                  </InputGroup.Append>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {mappingValidationErrors.databaseRetentionTtl}\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n            </Col>\n          )}\n        </Form.Row>\n      )}\n      <Form.Row className=\"mb-2\">\n        <Col sm={12}>\n          <Form.Group controlId=\"mappingDescription\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              value={mapping.description || ''}\n              onChange={({ target: { value } }) =>\n                onChange({ ...mapping, description: value || undefined })\n              }\n              autoComplete=\"off\"\n              isInvalid={mappingValidationErrors.description != null}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {mappingValidationErrors.description}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Col>\n      </Form.Row>\n      <Form.Row className=\"mb-2\">\n        <Col sm={12}>\n          <Form.Group controlId=\"mappingDocumentation\">\n            <Form.Label>Documentation</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              value={mapping.documentation || ''}\n              onChange={({ target: { value } }) =>\n                onChange({ ...mapping, documentation: value || undefined })\n              }\n              autoComplete=\"off\"\n              isInvalid={mappingValidationErrors.documentation != null}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {mappingValidationErrors.documentation}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Accordion,\n  Badge,\n  Button,\n  Card,\n  Col,\n  Container,\n  Form,\n  InputGroup,\n  Modal,\n  Row,\n} from 'react-bootstrap';\nimport { AstarteInterface, AstarteMapping } from 'astarte-client';\nimport _ from 'lodash';\n\nimport Icon from './Icon';\nimport MappingEditor from './MappingEditor';\n\ninterface FormControlWarningProps {\n  message?: string;\n}\n\nconst FormControlWarning = ({ message }: FormControlWarningProps): React.ReactElement | null => {\n  if (!message) {\n    return null;\n  }\n  return <div className=\"warning-feedback\">{message}</div>;\n};\n\ninterface MappingRowProps {\n  className?: string;\n  mapping: AstarteMapping;\n  onEdit?: () => void;\n  onDelete?: () => void;\n}\n\nconst reliabilityToLabel = {\n  unreliable: 'Unreliable',\n  guaranteed: 'Guaranteed',\n  unique: 'Unique',\n};\n\nconst retentionToLabel = {\n  discard: 'Discard',\n  volatile: 'Volatile',\n  stored: 'Stored',\n};\n\nconst databaseRetentionToLabel = {\n  no_ttl: 'No TTL',\n  use_ttl: 'Use TTL',\n};\n\nconst MappingRow = ({ className, mapping, onEdit, onDelete }: MappingRowProps) => (\n  <Accordion data-testid={mapping.endpoint}>\n    <Card className={className}>\n      <Accordion.Toggle\n        eventKey={mapping.endpoint}\n        as={Card.Header}\n        className=\"d-flex align-items-center flex-wrap\"\n      >\n        <span className=\"flex-grow-1\">\n          <Badge variant=\"secondary\">{mapping.type}</Badge>\n          <Button className=\"text-left text-truncate\" variant=\"link\">\n            {mapping.endpoint}\n          </Button>\n        </span>\n        {onEdit && (\n          <Button className=\"mr-2\" variant=\"outline-primary\" onClick={onEdit}>\n            Edit...\n          </Button>\n        )}\n        {onDelete && (\n          <Button variant=\"outline-primary\" onClick={onDelete}>\n            Remove\n          </Button>\n        )}\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey={mapping.endpoint}>\n        <Card.Body>\n          {mapping.description && (\n            <>\n              <h5>Description</h5>\n              <p>{mapping.description}</p>\n            </>\n          )}\n          {mapping.documentation && (\n            <>\n              <h5>Documentation</h5>\n              <p>{mapping.documentation}</p>\n            </>\n          )}\n          {mapping.allowUnset && (\n            <>\n              <h5>Allow Unset</h5>\n              <p>True</p>\n            </>\n          )}\n          {mapping.explicitTimestamp && (\n            <>\n              <h5>Explicit Timestamp</h5>\n              <p>True</p>\n            </>\n          )}\n          {mapping.reliability && (\n            <>\n              <h5>Reliability</h5>\n              <p>{reliabilityToLabel[mapping.reliability]}</p>\n            </>\n          )}\n          {mapping.retention && (\n            <>\n              <h5>Retention</h5>\n              <p>{retentionToLabel[mapping.retention]}</p>\n            </>\n          )}\n          {mapping.expiry && (\n            <>\n              <h5>Expiry</h5>\n              <p>{mapping.expiry} seconds</p>\n            </>\n          )}\n          {mapping.databaseRetentionPolicy && (\n            <>\n              <h5>Database Retention</h5>\n              <p>{databaseRetentionToLabel[mapping.databaseRetentionPolicy]}</p>\n            </>\n          )}\n          {mapping.databaseRetentionTtl != null && (\n            <>\n              <h5>Database Retention TTL</h5>\n              <p>{mapping.databaseRetentionTtl} seconds</p>\n            </>\n          )}\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  </Accordion>\n);\n\nconst getDefaultMapping = (params: {\n  interfaceType: AstarteInterface['type'];\n  interfaceAggregation: AstarteInterface['aggregation'];\n}): AstarteMapping => {\n  if (params.interfaceType === 'datastream' && params.interfaceAggregation === 'individual') {\n    return {\n      endpoint: '',\n      type: 'double',\n      explicitTimestamp: true,\n    };\n  }\n  return {\n    endpoint: '',\n    type: 'double',\n  };\n};\n\ninterface MappingModalProps {\n  interfaceType: AstarteInterface['type'];\n  interfaceAggregation?: AstarteInterface['aggregation'];\n  mapping?: AstarteMapping;\n  onCancel: () => void;\n  onConfirm: (newMapping: AstarteMapping) => void;\n}\n\nconst MappingModal = ({\n  interfaceType,\n  interfaceAggregation = 'individual',\n  mapping,\n  onCancel,\n  onConfirm,\n}: MappingModalProps): React.ReactElement => {\n  const [mappingDraft, setMappingDraft] = useState(\n    mapping || getDefaultMapping({ interfaceType, interfaceAggregation }),\n  );\n\n  const handleChange = useCallback((newMapping: AstarteMapping) => {\n    setMappingDraft(newMapping);\n  }, []);\n\n  const isValidMapping = AstarteMapping.validation.isValidSync(mappingDraft);\n\n  return (\n    <Modal show size=\"lg\" centered onHide={onCancel}>\n      <Modal.Header closeButton>\n        <Modal.Title>{mapping != null ? 'Edit mapping' : 'Add new mapping'}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <MappingEditor\n          interfaceType={interfaceType}\n          interfaceAggregation={interfaceAggregation}\n          mapping={mappingDraft}\n          onChange={handleChange}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onCancel}>\n          Cancel\n        </Button>\n        <Button\n          variant=\"primary\"\n          onClick={() => onConfirm(mappingDraft)}\n          disabled={!isValidMapping}\n        >\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nconst computeInterfaceWarnings = (iface: AstarteInterface): { [key: string]: string } => {\n  const warnings: { [key: string]: string } = {};\n\n  if (iface.type === 'datastream' && iface.aggregation === 'object') {\n    const endpoints = iface.mappings.map((mapping) => mapping.endpoint);\n    const endpointDepths = endpoints.map((endpoint) => endpoint.split('/').length - 1);\n    if (endpointDepths.some((depth) => depth < 2)) {\n      warnings.mappings =\n        'Interface mappings endpoints of depth 1 in Object aggregate interfaces are deprecated. The endpoint should have depth level of 2 or more (e.g. /my/endpoint).';\n    }\n  }\n\n  const interfaceNameRegex = /^([a-z][a-z0-9]*\\.([a-z0-9][a-z0-9-]*\\.)*)+[A-Z][a-zA-Z0-9]*$/;\n  if (!interfaceNameRegex.test(iface.name)) {\n    warnings.name =\n      'Interface name should be prefixed with a reverse domain name, and should use PascalCase (e.g. com.example.MyInterface)';\n  }\n\n  return warnings;\n};\n\nconst checkInterfaceHasMajorChanges = (\n  initialInterface: AstarteInterface,\n  draftInterface: AstarteInterface,\n) => {\n  const sensibleProperties: Array<keyof AstarteInterface> = [\n    'name',\n    'major',\n    'type',\n    'aggregation',\n    'ownership',\n  ];\n  const hasPropertyMajorChange = sensibleProperties.some(\n    (property) => draftInterface[property] !== initialInterface[property],\n  );\n  if (hasPropertyMajorChange) {\n    return true;\n  }\n  const hasExistingMappings = initialInterface.mappings.every((initialMapping) => {\n    const draftMapping = draftInterface.mappings.find(\n      ({ endpoint }) => endpoint === initialMapping.endpoint,\n    );\n    return _.isEqual(draftMapping, initialMapping);\n  });\n  if (!hasExistingMappings) {\n    return true;\n  }\n  return false;\n};\n\nconst formatJSON = (json: unknown): string => JSON.stringify(json, null, 4);\n\nconst formatJSONText = (text: string): string => {\n  try {\n    return formatJSON(JSON.parse(text));\n  } catch {\n    return text;\n  }\n};\n\nconst checkValidJSONText = (text: string): boolean => {\n  try {\n    JSON.parse(text);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nconst defaultInterface: AstarteInterface = {\n  name: '',\n  major: 0,\n  minor: 1,\n  type: 'properties',\n  ownership: 'device',\n  mappings: [],\n};\n\ninterface DatastreamOptions {\n  reliability?: AstarteMapping['reliability'];\n  retention?: AstarteMapping['retention'];\n  expiry?: AstarteMapping['expiry'];\n  databaseRetentionPolicy?: AstarteMapping['databaseRetentionPolicy'];\n  databaseRetentionTtl?: AstarteMapping['databaseRetentionTtl'];\n  explicitTimestamp?: AstarteMapping['explicitTimestamp'];\n}\n\nconst defaultDatastreamOptions = {\n  explicitTimestamp: true,\n};\n\nconst getInitialDatastreamOptions = (iface: AstarteInterface): DatastreamOptions => {\n  if (iface.mappings.length === 0) {\n    return defaultDatastreamOptions;\n  }\n  const mapping = iface.mappings[0];\n  const options: DatastreamOptions = {};\n  options.reliability = mapping.reliability;\n  options.retention = mapping.retention;\n  options.expiry = options.retention !== 'discard' ? mapping.expiry : undefined;\n  options.databaseRetentionPolicy = mapping.databaseRetentionPolicy;\n  options.databaseRetentionTtl =\n    options.databaseRetentionPolicy === 'use_ttl' ? mapping.databaseRetentionTtl : undefined;\n  options.explicitTimestamp = mapping.explicitTimestamp != null ? mapping.explicitTimestamp : true;\n  return options;\n};\n\ninterface Props {\n  initialData?: AstarteInterface;\n  isSourceVisible?: boolean;\n  onChange?: (updatedInterface: AstarteInterface, isValid: boolean) => unknown;\n  denyMajorChanges?: boolean;\n}\n\nexport default ({\n  initialData,\n  isSourceVisible = false,\n  onChange,\n  denyMajorChanges = false,\n}: Props): React.ReactElement => {\n  const [interfaceDraft, setInterfaceDraft] = useState<AstarteInterface>(\n    initialData || defaultInterface,\n  );\n  const [interfaceSource, setInterfaceSource] = useState(\n    formatJSON(AstarteInterface.toJSON(interfaceDraft)),\n  );\n  const [datastreamOptions, setDatastreamOptions] = useState<DatastreamOptions>(\n    getInitialDatastreamOptions(interfaceDraft),\n  );\n  const [isMappingModalVisible, setIsMappingModalVisible] = useState(false);\n  const [mappingToEditIndex, setMappingToEditIndex] = useState(0);\n\n  const parseAstarteInterfaceJSON = useCallback(\n    (json: any): AstarteInterface | null => {\n      let parsedInterface: AstarteInterface;\n      try {\n        parsedInterface = AstarteInterface.fromJSON(json);\n      } catch {\n        throw new Error('Invalid interface');\n      }\n      if (\n        initialData != null &&\n        denyMajorChanges &&\n        checkInterfaceHasMajorChanges(initialData, parsedInterface)\n      ) {\n        throw new Error(\n          'Interface cannot have major changes such as updating name, major, type, aggregation, ownership, or editing already existing mappings',\n        );\n      }\n      return parsedInterface;\n    },\n    [initialData, denyMajorChanges],\n  );\n\n  const handleInterfaceNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setInterfaceDraft((draft) => ({ ...draft, name: value.trim() }));\n  }, []);\n\n  const handleInterfaceMajorChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setInterfaceDraft((draft) => ({ ...draft, major: parseInt(value, 10) }));\n  }, []);\n\n  const handleInterfaceMinorChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setInterfaceDraft((draft) => ({ ...draft, minor: parseInt(value, 10) }));\n  }, []);\n\n  const clearMappingsOptions = useCallback(\n    (params: { type: AstarteInterface['type']; aggregation: AstarteInterface['aggregation'] }) => {\n      setInterfaceDraft((draft) => {\n        const mappings = draft.mappings.map((mapping) =>\n          _.omit(mapping, [\n            'allowUnset',\n            'reliability',\n            'retention',\n            'expiry',\n            'databaseRetentionPolicy',\n            'databaseRetentionTtl',\n            'explicitTimestamp',\n          ]),\n        );\n        return { ...draft, mappings };\n      });\n      if (params.type === 'datastream' && params.aggregation === 'object') {\n        setDatastreamOptions(defaultDatastreamOptions);\n      } else {\n        setDatastreamOptions({});\n      }\n    },\n    [],\n  );\n\n  const handleInterfaceTypeChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const type = value as AstarteInterface['type'];\n    const aggregation = type === 'datastream' ? 'individual' : undefined;\n    clearMappingsOptions({ type, aggregation });\n    setInterfaceDraft((draft) => ({ ...draft, type, aggregation }));\n  }, []);\n\n  const handleInterfaceAggregationChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const aggregation = value as AstarteInterface['aggregation'];\n    clearMappingsOptions({ type: 'datastream', aggregation });\n    setInterfaceDraft((draft) => ({\n      ...draft,\n      aggregation,\n    }));\n  }, []);\n\n  const handleInterfaceOwnershipChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const ownership = value as AstarteInterface['ownership'];\n    setInterfaceDraft((draft) => ({\n      ...draft,\n      ownership,\n    }));\n  }, []);\n\n  const handleInterfaceDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setInterfaceDraft((draft) => ({ ...draft, description: value || undefined }));\n  }, []);\n\n  const handleInterfaceDocumentationChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      setInterfaceDraft((draft) => ({ ...draft, documentation: value || undefined }));\n    },\n    [],\n  );\n\n  const handleInterfaceReliabilityChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    let reliability = value as AstarteMapping['reliability'];\n    reliability = reliability === 'unreliable' ? undefined : reliability;\n    setDatastreamOptions((options) => ({ ...options, reliability }));\n  }, []);\n\n  const handleInterfaceExplicitTimestampChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let explicitTimestamp = !!e.target.checked as AstarteMapping['explicitTimestamp'];\n      explicitTimestamp = explicitTimestamp || undefined;\n      setDatastreamOptions((options) => ({ ...options, explicitTimestamp }));\n    },\n    [],\n  );\n\n  const handleInterfaceRetentionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const retention = value as AstarteMapping['retention'];\n    setDatastreamOptions((options) => ({\n      ...options,\n      retention: retention === 'discard' ? undefined : retention,\n      expiry: retention === 'discard' ? undefined : options.expiry,\n    }));\n  }, []);\n\n  const handleInterfaceExpiryChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const expiry = parseInt(e.currentTarget.value, 10) || undefined;\n    setDatastreamOptions((options) => ({ ...options, expiry }));\n  }, []);\n\n  const handleInterfaceDatabaseRetentionPolicyChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.currentTarget;\n      const databaseRetentionPolicy = value as AstarteMapping['databaseRetentionPolicy'];\n      setDatastreamOptions((options) => ({\n        ...options,\n        databaseRetentionPolicy:\n          databaseRetentionPolicy === 'no_ttl' ? undefined : databaseRetentionPolicy,\n        databaseRetentionTtl:\n          databaseRetentionPolicy === 'no_ttl' ? undefined : options.databaseRetentionTtl || 60,\n      }));\n    },\n    [],\n  );\n\n  const handleInterfaceDatabaseRetentionTtlChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const databaseRetentionTtl = parseInt(e.currentTarget.value, 10);\n      setDatastreamOptions((options) => ({ ...options, databaseRetentionTtl }));\n    },\n    [],\n  );\n\n  const handleAddMapping = useCallback(() => {\n    setMappingToEditIndex(interfaceDraft.mappings.length);\n    setIsMappingModalVisible(true);\n  }, [interfaceDraft.mappings]);\n\n  const handleEditMapping = useCallback((mappingIndex: number) => {\n    setMappingToEditIndex(mappingIndex);\n    setIsMappingModalVisible(true);\n  }, []);\n\n  const handleDeleteMapping = useCallback((mappingIndex: number) => {\n    setInterfaceDraft((draft) => {\n      const updatedMappings = draft.mappings.filter((m, index) => index !== mappingIndex);\n      return { ...draft, mappings: updatedMappings };\n    });\n  }, []);\n\n  const handleConfirmEditMapping = useCallback(\n    (mapping: AstarteMapping) => {\n      setInterfaceDraft((draft) => {\n        let newMapping = { ...mapping };\n        if (interfaceDraft.type === 'datastream' && interfaceDraft.aggregation === 'object') {\n          newMapping = { ...mapping, ...datastreamOptions };\n        }\n        const isNewMapping = mappingToEditIndex >= draft.mappings.length;\n        const updatedMappings = isNewMapping\n          ? draft.mappings.concat(newMapping)\n          : draft.mappings.map((m, index) => (index === mappingToEditIndex ? newMapping : m));\n        return { ...draft, mappings: updatedMappings };\n      });\n      setIsMappingModalVisible(false);\n    },\n    [mappingToEditIndex, datastreamOptions, interfaceDraft.type, interfaceDraft.aggregation],\n  );\n\n  const handleInterfaceSourceChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setInterfaceSource(value);\n    if (!checkValidJSONText(value)) {\n      return;\n    }\n    let parsedInterface: AstarteInterface | null;\n    try {\n      parsedInterface = parseAstarteInterfaceJSON(JSON.parse(value));\n    } catch {\n      parsedInterface = null;\n    }\n    if (!parsedInterface) {\n      return;\n    }\n    setInterfaceDraft(parsedInterface);\n    const mapping: AstarteMapping | undefined = _.get(parsedInterface, 'mappings.0');\n    if (parsedInterface.type === 'datastream' && parsedInterface.aggregation === 'object') {\n      setDatastreamOptions({\n        reliability: mapping?.reliability,\n        retention: mapping?.retention,\n        expiry: mapping?.expiry,\n        databaseRetentionPolicy: mapping?.databaseRetentionPolicy,\n        databaseRetentionTtl: mapping?.databaseRetentionTtl,\n        explicitTimestamp: mapping?.explicitTimestamp,\n      });\n    } else {\n      setDatastreamOptions({});\n    }\n  }, []);\n\n  useEffect(() => {\n    setInterfaceDraft((draft) => {\n      if (draft.aggregation !== 'object' || draft.mappings.length === 0) {\n        return draft;\n      }\n      const mappings = draft.mappings.map((mapping) => ({\n        ...mapping,\n        reliability: datastreamOptions.reliability,\n        retention: datastreamOptions.retention,\n        expiry: datastreamOptions.expiry,\n        databaseRetentionPolicy: datastreamOptions.databaseRetentionPolicy,\n        databaseRetentionTtl: datastreamOptions.databaseRetentionTtl,\n        explicitTimestamp: datastreamOptions.explicitTimestamp,\n      }));\n      return { ...draft, mappings };\n    });\n  }, [datastreamOptions]);\n\n  let interfaceValidationErrors: { [key: string]: string } = {};\n  try {\n    AstarteInterface.validation.validateSync(interfaceDraft, { abortEarly: false });\n  } catch (err) {\n    interfaceValidationErrors = _.mapValues(\n      _.keyBy(_.uniqBy(err.inner, 'path'), 'path'),\n      'message',\n    );\n  }\n  const isValidInterface = _.isEmpty(interfaceValidationErrors);\n\n  useEffect(() => {\n    const formattedInterfaceSource = formatJSON(AstarteInterface.toJSON(interfaceDraft));\n    setInterfaceSource((source) =>\n      formatJSONText(source) !== formattedInterfaceSource ? formattedInterfaceSource : source,\n    );\n    if (onChange) {\n      onChange(interfaceDraft, isValidInterface);\n    }\n  }, [interfaceDraft, isValidInterface]);\n\n  const interfaceValidationWarnings = computeInterfaceWarnings(interfaceDraft);\n\n  let isValidInterfaceSource = true;\n  let interfaceSourceError = '';\n  if (!checkValidJSONText(interfaceSource)) {\n    isValidInterfaceSource = false;\n    interfaceSourceError = 'Invalid JSON';\n  } else {\n    try {\n      parseAstarteInterfaceJSON(JSON.parse(interfaceSource));\n    } catch (err) {\n      isValidInterfaceSource = false;\n      interfaceSourceError = err.message;\n    }\n  }\n\n  const mappingToEdit = _.nth(interfaceDraft.mappings, mappingToEditIndex);\n\n  const showInterfaceExpiry =\n    datastreamOptions.retention === 'volatile' || datastreamOptions.retention === 'stored';\n\n  const showInterfaceDatabaseRetentionTtl = datastreamOptions.databaseRetentionPolicy === 'use_ttl';\n\n  return (\n    <Row>\n      <Col md={isSourceVisible ? 6 : 12}>\n        <Container fluid className=\"bg-white rounded p-3\">\n          <Form>\n            <Form.Row className=\"mb-2\">\n              <Col md={6}>\n                <Form.Group controlId=\"interfaceName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Interface name\"\n                    value={interfaceDraft.name}\n                    onChange={handleInterfaceNameChange}\n                    autoComplete=\"off\"\n                    required\n                    isInvalid={interfaceValidationErrors.name != null}\n                    readOnly={denyMajorChanges}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {interfaceValidationErrors.name}\n                  </Form.Control.Feedback>\n                  {interfaceValidationErrors.name == null && (\n                    <FormControlWarning message={interfaceValidationWarnings.name} />\n                  )}\n                </Form.Group>\n              </Col>\n              <Col md={3}>\n                <Form.Group controlId=\"interfaceMajor\">\n                  <Form.Label>Major</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    min={initialData ? initialData.major : 0}\n                    value={interfaceDraft.major}\n                    onChange={handleInterfaceMajorChange}\n                    required\n                    isInvalid={interfaceValidationErrors.major != null}\n                    readOnly={denyMajorChanges}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {interfaceValidationErrors.major}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col md={3}>\n                <Form.Group controlId=\"interfaceMinor\">\n                  <Form.Label>Minor</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    min={initialData ? initialData.minor : 0}\n                    value={interfaceDraft.minor}\n                    onChange={handleInterfaceMinorChange}\n                    required\n                    isInvalid={interfaceValidationErrors.minor != null}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {interfaceValidationErrors.minor}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Form.Row>\n            <Form.Row className=\"mb-2\">\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>Type</Form.Label>\n                  <Form.Check\n                    type=\"radio\"\n                    name=\"interfaceType\"\n                    id=\"interfaceTypeDatastream\"\n                    label=\"Datastream\"\n                    value=\"datastream\"\n                    checked={interfaceDraft.type === 'datastream'}\n                    onChange={handleInterfaceTypeChange}\n                    disabled={denyMajorChanges}\n                  />\n                  <Form.Check\n                    type=\"radio\"\n                    name=\"interfaceType\"\n                    id=\"interfaceTypeProperties\"\n                    label=\"Properties\"\n                    value=\"properties\"\n                    checked={interfaceDraft.type === 'properties'}\n                    onChange={handleInterfaceTypeChange}\n                    disabled={denyMajorChanges}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>Aggregation</Form.Label>\n                  <Form.Check\n                    type=\"radio\"\n                    name=\"interfaceAggregation\"\n                    id=\"interfaceAggregationIndividual\"\n                    label=\"Individual\"\n                    value=\"individual\"\n                    checked={\n                      interfaceDraft.aggregation === 'individual' || !interfaceDraft.aggregation\n                    }\n                    onChange={handleInterfaceAggregationChange}\n                    disabled={interfaceDraft.type === 'properties' || denyMajorChanges}\n                  />\n                  <Form.Check\n                    type=\"radio\"\n                    name=\"interfaceAggregation\"\n                    id=\"interfaceAggregationObject\"\n                    label=\"Object\"\n                    value=\"object\"\n                    checked={interfaceDraft.aggregation === 'object'}\n                    onChange={handleInterfaceAggregationChange}\n                    disabled={interfaceDraft.type === 'properties' || denyMajorChanges}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>Ownership</Form.Label>\n                  <Form.Check\n                    type=\"radio\"\n                    name=\"interfaceOwnership\"\n                    id=\"interfaceOwnershipDevice\"\n                    label=\"Device\"\n                    value=\"device\"\n                    checked={interfaceDraft.ownership === 'device'}\n                    onChange={handleInterfaceOwnershipChange}\n                    disabled={denyMajorChanges}\n                  />\n                  <Form.Check\n                    type=\"radio\"\n                    name=\"interfaceOwnership\"\n                    id=\"interfaceOwnershipServer\"\n                    label=\"Server\"\n                    value=\"server\"\n                    checked={interfaceDraft.ownership === 'server'}\n                    onChange={handleInterfaceOwnershipChange}\n                    disabled={denyMajorChanges}\n                  />\n                </Form.Group>\n              </Col>\n            </Form.Row>\n            {interfaceDraft.type === 'datastream' && interfaceDraft.aggregation === 'object' && (\n              <Form.Row className=\"mb-2\">\n                <Col md={6}>\n                  <Form.Group controlId=\"objectMappingReliability\">\n                    <Form.Label>Reliability</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      name=\"mappingReliability\"\n                      value={datastreamOptions.reliability || 'unreliable'}\n                      onChange={handleInterfaceReliabilityChange}\n                      disabled={denyMajorChanges}\n                    >\n                      <option value=\"unreliable\">{reliabilityToLabel.unreliable}</option>\n                      <option value=\"guaranteed\">{reliabilityToLabel.guaranteed}</option>\n                      <option value=\"unique\">{reliabilityToLabel.unique}</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col md={6}>\n                  <Form.Group controlId=\"objectMappingExplicitTimestamp\">\n                    <Form.Label>Timestamp</Form.Label>\n                    <Form.Check\n                      type=\"checkbox\"\n                      name=\"mappingExplicitTimestamp\"\n                      label=\"Explicit timestamp\"\n                      checked={!!datastreamOptions.explicitTimestamp}\n                      onChange={handleInterfaceExplicitTimestampChange}\n                      disabled={denyMajorChanges}\n                    />\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n            )}\n            {interfaceDraft.type === 'datastream' && interfaceDraft.aggregation === 'object' && (\n              <Form.Row className=\"mb-2\">\n                <Col md={showInterfaceExpiry ? 6 : 12}>\n                  <Form.Group controlId=\"objectMappingRetention\">\n                    <Form.Label>Retention</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      name=\"mappingRetention\"\n                      value={datastreamOptions.retention || 'discard'}\n                      onChange={handleInterfaceRetentionChange}\n                      disabled={denyMajorChanges}\n                    >\n                      <option value=\"discard\">{retentionToLabel.discard}</option>\n                      <option value=\"volatile\">{retentionToLabel.volatile}</option>\n                      <option value=\"stored\">{retentionToLabel.stored}</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                {showInterfaceExpiry && (\n                  <Col md={6}>\n                    <Form.Group controlId=\"objectMappingExpiry\">\n                      <Form.Label>Expiry</Form.Label>\n                      <InputGroup>\n                        <Form.Control\n                          type=\"number\"\n                          min={0}\n                          value={datastreamOptions.expiry || 0}\n                          onChange={handleInterfaceExpiryChange}\n                          isInvalid={(datastreamOptions.expiry || 0) < 0}\n                          disabled={denyMajorChanges}\n                        />\n                        <InputGroup.Append>\n                          <InputGroup.Text>seconds</InputGroup.Text>\n                        </InputGroup.Append>\n                      </InputGroup>\n                    </Form.Group>\n                  </Col>\n                )}\n              </Form.Row>\n            )}\n            {interfaceDraft.type === 'datastream' && interfaceDraft.aggregation === 'object' && (\n              <Form.Row className=\"mb-2\">\n                <Col md={showInterfaceDatabaseRetentionTtl ? 6 : 12}>\n                  <Form.Group controlId=\"objectMappingDatabaseRetention\">\n                    <Form.Label>Database Retention</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      name=\"mappingDatabaseRetention\"\n                      value={datastreamOptions.databaseRetentionPolicy || 'no_ttl'}\n                      onChange={handleInterfaceDatabaseRetentionPolicyChange}\n                      disabled={denyMajorChanges}\n                    >\n                      <option value=\"no_ttl\">{databaseRetentionToLabel.no_ttl}</option>\n                      <option value=\"use_ttl\">{databaseRetentionToLabel.use_ttl}</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                {showInterfaceDatabaseRetentionTtl && (\n                  <Col md={6}>\n                    <Form.Group controlId=\"objectMappingTTL\">\n                      <Form.Label>TTL</Form.Label>\n                      <InputGroup>\n                        <Form.Control\n                          type=\"number\"\n                          min={60}\n                          value={datastreamOptions.databaseRetentionTtl || 60}\n                          onChange={handleInterfaceDatabaseRetentionTtlChange}\n                          isInvalid={(datastreamOptions.databaseRetentionTtl || 60) < 60}\n                          disabled={denyMajorChanges}\n                        />\n                        <InputGroup.Append>\n                          <InputGroup.Text>seconds</InputGroup.Text>\n                        </InputGroup.Append>\n                      </InputGroup>\n                    </Form.Group>\n                  </Col>\n                )}\n              </Form.Row>\n            )}\n            <Form.Row className=\"mb-2\">\n              <Col sm={12}>\n                <Form.Group controlId=\"interfaceDescription\">\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    value={interfaceDraft.description || ''}\n                    onChange={handleInterfaceDescriptionChange}\n                    autoComplete=\"off\"\n                    rows={3}\n                    isInvalid={interfaceValidationErrors.description != null}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {interfaceValidationErrors.description}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Form.Row>\n            <Form.Row className=\"mb-2\">\n              <Col sm={12}>\n                <Form.Group controlId=\"interfaceDocumentation\">\n                  <Form.Label>Documentation</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    value={interfaceDraft.documentation || ''}\n                    onChange={handleInterfaceDocumentationChange}\n                    autoComplete=\"off\"\n                    rows={3}\n                    isInvalid={interfaceValidationErrors.documentation != null}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {interfaceValidationErrors.documentation}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Form.Row>\n            <Form.Row className=\"mb-2\">\n              <Col sm={12}>\n                <Form.Group controlId=\"interfaceMappings\">\n                  <button\n                    type=\"button\"\n                    className=\"btn accordion-button w-100 mb-2\"\n                    onClick={handleAddMapping}\n                  >\n                    <Icon icon=\"add\" className=\"mr-2\" /> Add new mapping...\n                  </button>\n                  {interfaceDraft.mappings.map((mapping, index) => {\n                    const isExistingMapping = (initialData?.mappings || []).some(\n                      ({ endpoint }) => endpoint === mapping.endpoint,\n                    );\n                    const canEdit = !(denyMajorChanges && isExistingMapping);\n                    const canDelete = !(denyMajorChanges && isExistingMapping);\n                    return (\n                      <MappingRow\n                        key={mapping.endpoint}\n                        className=\"mb-2\"\n                        mapping={mapping}\n                        onEdit={canEdit ? () => handleEditMapping(index) : undefined}\n                        onDelete={canDelete ? () => handleDeleteMapping(index) : undefined}\n                      />\n                    );\n                  })}\n                  <Form.Control\n                    className=\"d-none\"\n                    isInvalid={interfaceValidationErrors.mappings != null}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {interfaceValidationErrors.mappings}\n                  </Form.Control.Feedback>\n                  <FormControlWarning message={interfaceValidationWarnings.mappings} />\n                </Form.Group>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Col>\n      {isSourceVisible && (\n        <Col md={6}>\n          <Form.Group controlId=\"interfaceSource\" className=\"h-100 d-flex flex-column\">\n            <Form.Control\n              as=\"textarea\"\n              className=\"flex-grow-1 text-monospace\"\n              value={interfaceSource}\n              onChange={handleInterfaceSourceChange}\n              autoComplete=\"off\"\n              required\n              isValid={isValidInterfaceSource}\n              isInvalid={!isValidInterfaceSource}\n            />\n            <Form.Control.Feedback type=\"invalid\">{interfaceSourceError}</Form.Control.Feedback>\n          </Form.Group>\n        </Col>\n      )}\n      {isMappingModalVisible && (\n        <MappingModal\n          interfaceType={interfaceDraft.type}\n          interfaceAggregation={interfaceDraft.aggregation}\n          mapping={mappingToEdit}\n          onCancel={() => setIsMappingModalVisible(false)}\n          onConfirm={handleConfirmEditMapping}\n        />\n      )}\n    </Row>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport InterfaceEditor from './components/InterfaceEditor';\n\nexport default (): React.ReactElement => (\n  <Container fluid className=\"p-3\">\n    <h2>Interface Editor</h2>\n    <div className=\"mt-4\">\n      <InterfaceEditor isSourceVisible />\n    </div>\n  </Container>\n);\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useMemo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Nav, NavItem, NavLink } from 'react-bootstrap';\n\nimport Icon from './components/Icon';\n\ninterface SidebarApiStatusProps {\n  healthy: boolean;\n  realm: React.ReactNode;\n}\n\nconst SidebarApiStatus = ({ healthy, realm }: SidebarApiStatusProps) => (\n  <NavItem className=\"nav-status pl-4\">\n    <div>\n      <b>Realm</b>\n    </div>\n    <p>{realm}</p>\n    <div>\n      <b>API Status</b>\n    </div>\n    <p className=\"my-1\">\n      <Icon icon={healthy ? 'statusConnected' : 'statusDisconnected'} className=\"mr-2\" />\n      {healthy ? 'Up and running' : 'Degraded'}\n    </p>\n  </NavItem>\n);\n\nconst SidebarBrand = () => (\n  <Link to=\"/\" className=\"nav-brand mb-3\">\n    <img alt=\"Astarte logo\" src=\"/static/img/logo.svg\" className=\"brand-logo\" />\n  </Link>\n);\n\ninterface SidebarItemProps {\n  icon: React.ComponentProps<typeof Icon>['icon'];\n  label: string;\n  link: string;\n}\n\nconst SidebarItem = ({ icon, label, link }: SidebarItemProps) => {\n  const location = useLocation();\n\n  const isSelected = useMemo(() => {\n    if (link === '/') {\n      return location.pathname === '/' || location.pathname === '/home';\n    }\n    return location.pathname.startsWith(link);\n  }, [location.pathname]);\n\n  return (\n    <NavLink as={Link} to={link} active={isSelected}>\n      <Icon icon={icon} className=\"mr-2\" />\n      {label}\n    </NavLink>\n  );\n};\n\nconst SidebarSeparator = () => (\n  <NavItem>\n    <hr />\n  </NavItem>\n);\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Sidebar = ({ children }: Props): React.ReactElement => (\n  <Nav className=\"navbar-dark flex-nowrap vh-100 overflow-auto flex-column\">{children}</Nav>\n);\n\nSidebar.ApiStatus = SidebarApiStatus;\nSidebar.Brand = SidebarBrand;\nSidebar.Item = SidebarItem;\nSidebar.Separator = SidebarSeparator;\n\nexport default Sidebar;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\nimport { AstarteRealm, AstarteToken } from 'astarte-client';\n\ntype LoginType = 'oauth' | 'token';\n\nfunction isValidUrl(urlString: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(urlString);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction tokenValidationFeedback(\n  tokenValidation: 'expired' | 'noAstarteClaims' | 'valid' | 'invalid',\n): React.ReactElement {\n  let message = null;\n  switch (tokenValidation) {\n    case 'valid':\n      return <></>;\n    case 'expired': {\n      message = 'Provided JWT token has expired.';\n      break;\n    }\n    case 'noAstarteClaims': {\n      message = 'Provided JWT token has no usable Astarte claims.';\n      break;\n    }\n    case 'invalid':\n    default:\n      message = 'Invalid JWT token.';\n  }\n  return <Form.Control.Feedback type=\"invalid\">{message}</Form.Control.Feedback>;\n}\n\ninterface TokenFormProps {\n  canSwitchLoginType: boolean;\n  defaultRealm: string;\n  onSwitchLoginType: (loginType: LoginType) => void;\n  onLogin: (authUrl: string) => void;\n}\n\nconst TokenForm = ({\n  canSwitchLoginType,\n  defaultRealm,\n  onSwitchLoginType,\n  onLogin,\n}: TokenFormProps): React.ReactElement => {\n  const [realm, setRealm] = useState(defaultRealm);\n  const [jwt, setJwt] = useState('');\n\n  const isValidRealm = AstarteRealm.isValidName(realm);\n\n  const tokenValidation = useMemo(() => AstarteToken.validate(jwt), [jwt]);\n\n  const canSubmitForm = isValidRealm && tokenValidation === 'valid';\n\n  const handleTokenLogin = (event: React.FormEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const searchParams = new URLSearchParams({ realm });\n    const hashParams = new URLSearchParams({ access_token: jwt });\n    onLogin(`/auth?${searchParams}#${hashParams}`);\n  };\n\n  const AstartectlLink = () => (\n    <a\n      href=\"https://github.com/astarte-platform/astartectl#installation\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      astartectl\n    </a>\n  );\n\n  return (\n    <Form className=\"login-form p-3 w-100\" onSubmit={handleTokenLogin}>\n      <Form.Group controlId=\"astarteRealm\">\n        <Form.Label>Realm</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Astarte Realm\"\n          value={realm}\n          onChange={(e) => {\n            setRealm(e.target.value);\n          }}\n          isValid={realm !== '' && isValidRealm}\n          isInvalid={realm !== '' && !isValidRealm}\n          required\n        />\n      </Form.Group>\n      <Form.Group controlId=\"astarteToken\">\n        <Form.Label>Token</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={6}\n          placeholder=\"Auth token\"\n          value={jwt}\n          onChange={(e) => {\n            setJwt(e.target.value.trim());\n          }}\n          isValid={jwt !== '' && tokenValidation === 'valid'}\n          isInvalid={jwt !== '' && tokenValidation !== 'valid'}\n          required\n        />\n        {tokenValidationFeedback(tokenValidation)}\n      </Form.Group>\n      <Button type=\"submit\" variant=\"primary\" disabled={!canSubmitForm} className=\"w-100\">\n        Login\n      </Button>\n      {canSwitchLoginType && (\n        <div className=\"d-flex flex-row-reverse mt-2\">\n          <Button variant=\"link\" onClick={() => onSwitchLoginType('oauth')}>\n            Switch to OAuth login\n          </Button>\n        </div>\n      )}\n      <div className=\"container-fluid border rounded p-2 bg-light mt-3\">\n        A valid JWT token should be used, you can use <AstartectlLink /> to generate one:\n        <br />\n        <code>$ astartectl utils gen-jwt all-realm-apis -k your_key.pem</code>\n      </div>\n    </Form>\n  );\n};\n\ninterface OAuthFormProps {\n  canSwitchLoginType: boolean;\n  defaultRealm: string;\n  onSwitchLoginType: (loginType: LoginType) => void;\n  onLogin: (authUrl: string) => void;\n}\n\nconst OAuthForm = ({\n  canSwitchLoginType,\n  onSwitchLoginType,\n  defaultRealm,\n  onLogin,\n}: OAuthFormProps): React.ReactElement => {\n  const [realm, setRealm] = useState(defaultRealm);\n  const [providerUrl, setProviderUrl] = useState('');\n  const isValidRealm = AstarteRealm.isValidName(realm);\n  const isValidProviderUrl = isValidUrl(providerUrl);\n\n  const handleOAuthLogin = (event: React.FormEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const dashboardLoginUrl = new URL('auth', window.location.toString());\n    dashboardLoginUrl.search = new URLSearchParams({\n      realm,\n      authUrl: providerUrl,\n    }).toString();\n    const oauthLoginUrl = new URL(providerUrl);\n    oauthLoginUrl.search = new URLSearchParams({\n      client_id: 'astarte-dashboard',\n      response_type: 'token',\n      redirect_uri: dashboardLoginUrl.toString(),\n    }).toString();\n    onLogin(oauthLoginUrl.toString());\n  };\n\n  return (\n    <Form className=\"login-form p-3 w-100\" onSubmit={handleOAuthLogin}>\n      <Form.Group controlId=\"astarteRealm\">\n        <Form.Label>Realm</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Astarte Realm\"\n          value={realm}\n          onChange={(e) => {\n            setRealm(e.target.value);\n          }}\n          isValid={realm !== '' && isValidRealm}\n          isInvalid={realm !== '' && !isValidRealm}\n          required\n        />\n      </Form.Group>\n      <Form.Group controlId=\"oauthProviderUrl\">\n        <Form.Label>OAuth provider URL</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Astarte Realm\"\n          value={providerUrl}\n          onChange={(e) => {\n            setProviderUrl(e.target.value);\n          }}\n          isValid={providerUrl !== '' && isValidProviderUrl}\n          isInvalid={providerUrl !== '' && !isValidProviderUrl}\n          required\n        />\n      </Form.Group>\n      <Button\n        type=\"submit\"\n        variant=\"primary\"\n        disabled={!isValidRealm || !isValidProviderUrl}\n        className=\"w-100\"\n      >\n        Login\n      </Button>\n      {canSwitchLoginType && (\n        <div className=\"d-flex flex-row-reverse mt-2\">\n          <Button variant=\"link\" onClick={() => onSwitchLoginType('token')}>\n            Switch to token login\n          </Button>\n        </div>\n      )}\n    </Form>\n  );\n};\n\nconst LeftColumn = (): React.ReactElement => (\n  <Col lg={6} className=\"p-0 no-gutters d-none d-lg-block\">\n    <div className=\"d-flex flex-column align-items-center justify-content-center position-relative login-image-container\">\n      <img\n        src=\"/static/img/background-login-top.svg\"\n        alt=\"Background visual spacer\"\n        className=\"w-100 position-absolute top-background-image\"\n      />\n      <img\n        src=\"/static/img/background-login-bottom.svg\"\n        alt=\"Background visual spacer\"\n        className=\"w-100 position-absolute bottom-background-image\"\n      />\n      <img src=\"/static/img/logo-login.svg\" alt=\"Astarte logo\" className=\"logo m-4\" />\n      <img\n        src=\"/static/img/mascotte-computer.svg\"\n        alt=\"Astarte mascotte\"\n        className=\"mascotte m-4\"\n      />\n    </div>\n  </Col>\n);\n\ninterface RightColumnProps {\n  canSwitchLoginType: boolean;\n  defaultRealm: string;\n  type: LoginType;\n  onLogin: (authUrl: string) => void;\n}\n\nconst RightColumn = ({\n  canSwitchLoginType,\n  defaultRealm,\n  type,\n  onLogin,\n}: RightColumnProps): React.ReactElement => {\n  const [loginType, setLoginType] = useState(type);\n  const handleLoginTypeSwitch = (newLoginType: LoginType) => {\n    setLoginType(newLoginType);\n  };\n\n  return (\n    <Col\n      lg={6}\n      sm={12}\n      className=\"bg-white d-flex flex-column align-items-center justify-content-center min-vh-100\"\n    >\n      <h1>Sign In</h1>\n      {loginType === 'oauth' ? (\n        <OAuthForm\n          defaultRealm={defaultRealm}\n          canSwitchLoginType={canSwitchLoginType}\n          onSwitchLoginType={handleLoginTypeSwitch}\n          onLogin={onLogin}\n        />\n      ) : (\n        <TokenForm\n          defaultRealm={defaultRealm}\n          canSwitchLoginType={canSwitchLoginType}\n          onSwitchLoginType={handleLoginTypeSwitch}\n          onLogin={onLogin}\n        />\n      )}\n    </Col>\n  );\n};\n\ninterface Props {\n  canSwitchLoginType: boolean;\n  defaultRealm: string;\n  type: LoginType;\n}\n\nexport default ({ type, canSwitchLoginType, defaultRealm }: Props): React.ReactElement => {\n  const navigate = useNavigate();\n  return (\n    <Container fluid>\n      <Row>\n        <LeftColumn />\n        <RightColumn\n          type={type}\n          canSwitchLoginType={canSwitchLoginType}\n          defaultRealm={defaultRealm}\n          onLogin={(url) => {\n            navigate(url);\n          }}\n        />\n      </Row>\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport type { ChartData, ChartDataKind, ChartDataWrapper } from '../dataKinds';\n\ninterface DataKindConstructor<Kind extends ChartDataKind> {\n  new (data: Kind): Kind;\n}\n\nclass ChartProvider<Wrapper extends ChartDataWrapper, Kind extends ChartDataKind> {\n  readonly name: string;\n\n  readonly dataWrapper: Wrapper;\n\n  readonly dataKind: DataKindConstructor<Kind>;\n\n  private readonly $getData: () => Promise<ChartData<Wrapper, Kind> | null>;\n\n  constructor(params: {\n    name: string;\n    dataWrapper: Wrapper;\n    dataKind: DataKindConstructor<Kind>;\n    getData: () => Promise<ChartData<Wrapper, Kind> | null>;\n  }) {\n    this.name = params.name;\n    this.dataWrapper = params.dataWrapper;\n    this.dataKind = params.dataKind;\n    this.$getData = params.getData;\n  }\n\n  async getData(): Promise<ChartData<Wrapper, Kind> | null> {\n    const data = await this.$getData();\n    if (data == null) {\n      return null;\n    }\n    const DataKindCtor = this.dataKind;\n    switch (this.dataWrapper) {\n      case 'Array':\n        // @ts-expect-error cannot infer type\n        return data.map((value) => new DataKindCtor(value));\n      case 'Object':\n      default:\n        // @ts-expect-error cannot infer type\n        return new DataKindCtor(data);\n    }\n  }\n}\n\nexport { ChartProvider };\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport { Aggregated } from './Aggregated';\n\nexport class ConnectedDevices implements Aggregated {\n  readonly data: {\n    connected: { type: 'integer'; value: number };\n    disconnected: { type: 'integer'; value: number };\n  };\n\n  constructor(params: {\n    data: {\n      connected: { type: 'integer'; value: number };\n      disconnected: { type: 'integer'; value: number };\n    };\n  }) {\n    this.data = params.data;\n  }\n}\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport { Aggregated } from './Aggregated';\n\nexport class DeviceStats implements Aggregated {\n  readonly data: {\n    [property: string]: { type: 'integer'; value: number };\n  };\n\n  constructor(params: {\n    data: {\n      [property: string]: { type: 'integer'; value: number };\n    };\n  }) {\n    this.data = params.data;\n  }\n}\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport type AstarteClient from 'astarte-client';\n\nimport { ChartProvider } from './provider';\nimport { ConnectedDevices } from '../dataKinds';\n\ninterface ProviderParams {\n  name?: string;\n}\n\nconst generateConnectedDevicesProvider = (\n  client: AstarteClient,\n  params: ProviderParams = {},\n): ChartProvider<'Object', ConnectedDevices> =>\n  new ChartProvider({\n    name: params.name || 'Connected devices',\n    dataWrapper: 'Object',\n    dataKind: ConnectedDevices,\n    async getData(): Promise<ConnectedDevices> {\n      const devicesStats = await client.getDevicesStats();\n      return {\n        data: {\n          connected: {\n            value: Number(devicesStats.connected_devices),\n            type: 'integer',\n          },\n          disconnected: {\n            value: Number(devicesStats.total_devices - devicesStats.connected_devices),\n            type: 'integer',\n          },\n        },\n      };\n    },\n  });\n\nexport { generateConnectedDevicesProvider };\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport AstarteClient from 'astarte-client';\n\nimport {\n  generateConnectedDevicesProvider,\n  generateDeviceDatastreamIndividualProvider,\n  generateDeviceDatastreamObjectProvider,\n  generateDevicePropertyProvider,\n  generateDeviceStatsProvider,\n  ChartProvider,\n} from './providers';\n\nimport type {\n  Aggregated,\n  TimestampedAggregated,\n  TimestampedIndividual,\n  ConnectedDevices,\n  DeviceStats,\n} from './dataKinds';\n\ntype AstarteConfig =\n  | AstarteClient\n  | {\n      appEngineApiUrl: string;\n      realmManagementApiUrl: string;\n      token: string;\n      realm: string;\n    };\n\nconst getAstarteClient = (astarteConfig: AstarteConfig): AstarteClient => {\n  if (astarteConfig instanceof AstarteClient) {\n    return astarteConfig;\n  }\n  const astarteClient = new AstarteClient({\n    appEngineApiUrl: astarteConfig.appEngineApiUrl,\n    realmManagementApiUrl: astarteConfig.realmManagementApiUrl,\n    pairingApiUrl: '',\n    flowApiUrl: '',\n  });\n  astarteClient.setCredentials({\n    token: astarteConfig.token,\n    realm: astarteConfig.realm,\n  });\n  return astarteClient;\n};\n\nconst getConnectedDevices = (\n  astarteConfig: AstarteConfig,\n  params: { name?: string } = {},\n): ChartProvider<'Object', ConnectedDevices> =>\n  generateConnectedDevicesProvider(getAstarteClient(astarteConfig), params);\n\nconst getDeviceDatastreamIndividual = (\n  astarteConfig: AstarteConfig,\n  params: {\n    name?: string;\n    deviceId: string;\n    interfaceName: string;\n    endpoint: string;\n  },\n): ChartProvider<'Array', TimestampedIndividual> =>\n  generateDeviceDatastreamIndividualProvider(getAstarteClient(astarteConfig), params);\n\nconst getDeviceDatastreamObject = (\n  astarteConfig: AstarteConfig,\n  params: {\n    name?: string;\n    deviceId: string;\n    interfaceName: string;\n    endpoint: string;\n  },\n): ChartProvider<'Array', TimestampedAggregated> =>\n  generateDeviceDatastreamObjectProvider(getAstarteClient(astarteConfig), params);\n\nconst getDeviceProperty = (\n  astarteConfig: AstarteConfig,\n  params: {\n    name?: string;\n    deviceId: string;\n    interfaceName: string;\n    endpoint: string;\n  },\n): ChartProvider<'Object', Aggregated> =>\n  generateDevicePropertyProvider(getAstarteClient(astarteConfig), params);\n\nconst getDeviceStats = (\n  astarteConfig: AstarteConfig,\n  params: {\n    name?: string;\n    deviceId: string;\n    stats?: 'exchangedBytes' | 'exchangedMessages';\n  },\n): ChartProvider<'Object', DeviceStats> =>\n  generateDeviceStatsProvider(getAstarteClient(astarteConfig), params);\n\nexport {\n  Aggregated,\n  TimestampedAggregated,\n  TimestampedIndividual,\n  ConnectedDevices,\n  DeviceStats,\n} from './dataKinds';\n\nexport type { ChartData, ChartDataKind, ChartDataWrapper } from './dataKinds';\n\nexport type { ChartProvider } from './providers';\n\nexport {\n  getConnectedDevices,\n  getDeviceDatastreamIndividual,\n  getDeviceDatastreamObject,\n  getDeviceProperty,\n  getDeviceStats,\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport type AstarteClient from 'astarte-client';\nimport _ from 'lodash';\n\nimport { ChartProvider } from './provider';\nimport { DeviceStats } from '../dataKinds';\n\ninterface ProviderParams {\n  name?: string;\n  deviceId: string;\n  stats?: 'exchangedBytes' | 'exchangedMessages';\n}\n\nconst generateDeviceStatsProvider = (\n  client: AstarteClient,\n  params: ProviderParams,\n): ChartProvider<'Object', DeviceStats> =>\n  new ChartProvider({\n    name: params.name || 'Device stats',\n    dataWrapper: 'Object',\n    dataKind: DeviceStats,\n    async getData(): Promise<DeviceStats> {\n      const device = await client.getDeviceInfo(params.deviceId);\n      const currentInterfaces = Array.from(device.introspection.values());\n      const interfaces = [...currentInterfaces, ...device.previousInterfaces];\n      const totalBytes = device.totalReceivedBytes;\n      const totalMessages = device.totalReceivedMessages;\n      const interfacesBytes = _.sumBy(interfaces, 'exchangedBytes');\n      const interfacesMessages = _.sumBy(interfaces, 'exchangedMessages');\n      const otherBytes = totalBytes - interfacesBytes;\n      const otherMessages = totalMessages - interfacesMessages;\n      return {\n        data: interfaces.reduce(\n          (acc, iface) => ({\n            ...acc,\n            [`${iface.name} v${iface.major}.${iface.minor}`]: {\n              type: 'integer',\n              value: Number(\n                (params.stats === 'exchangedMessages'\n                  ? iface.exchangedMessages\n                  : iface.exchangedBytes) || 0,\n              ),\n            },\n          }),\n          {\n            Other: {\n              type: 'integer',\n              value: Number(params.stats === 'exchangedMessages' ? otherMessages : otherBytes),\n            },\n          },\n        ),\n      };\n    },\n  });\n\nexport { generateDeviceStatsProvider };\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport { useCallback, useEffect, useState } from 'react';\nimport type { ChartProvider, ChartData, ChartDataWrapper, ChartDataKind } from 'astarte-charts';\n\ntype Status = 'initial' | 'loading' | 'loaded';\n\ntype DataFetcher<Data> =\n  | {\n      status: 'initial';\n      data: null;\n      refresh: () => Promise<void>;\n    }\n  | {\n      status: 'loading';\n      data: Data | null;\n      refresh: () => Promise<void>;\n    }\n  | {\n      status: 'loaded';\n      data: Data | null;\n      refresh: () => Promise<void>;\n    };\n\nexport const useChartProviders = <\n  DataWrapper extends ChartDataWrapper,\n  DataKind extends ChartDataKind\n>(params: {\n  providers: ChartProvider<DataWrapper, DataKind>[];\n  onError?: (error: Error) => void;\n  refreshInterval?: number;\n}): DataFetcher<(ChartData<DataWrapper, DataKind> | null)[]> => {\n  const [status, setStatus] = useState<Status>('initial');\n  const [data, setData] = useState<(ChartData<DataWrapper, DataKind> | null)[] | null>(null);\n\n  const fetchData = useCallback(async () => {\n    setStatus('loading');\n    try {\n      const providersData = await Promise.all(\n        params.providers.map((provider) => provider.getData()),\n      );\n      setData(providersData);\n    } catch (err) {\n      if (params.onError) {\n        params.onError(err);\n      }\n    } finally {\n      setStatus('loaded');\n    }\n  }, [params.providers]);\n\n  useEffect(() => {\n    fetchData();\n    if (params.refreshInterval) {\n      const fetchDataInterval = setInterval(fetchData, params.refreshInterval);\n      return () => clearInterval(fetchDataInterval);\n    }\n    return () => {};\n  }, [fetchData, params.refreshInterval]);\n\n  if (status === 'initial') {\n    return {\n      status,\n      data: data as null,\n      refresh: fetchData,\n    };\n  }\n  return {\n    status,\n    data,\n    refresh: fetchData,\n  };\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useMemo } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { ChartProvider, ConnectedDevices } from 'astarte-charts';\n\nimport { useChartProviders } from '../hooks';\n\ninterface Props {\n  provider: ChartProvider<'Object', ConnectedDevices>;\n  height?: number;\n  width?: number;\n  showLegend?: boolean;\n  legendPosition?: 'top' | 'left' | 'bottom' | 'right';\n  legendAlign?: 'start' | 'center' | 'end';\n  refreshInterval?: number;\n}\n\nexport const ConnectedDevicesChart = ({\n  provider,\n  height,\n  width,\n  showLegend = true,\n  legendPosition = 'right',\n  legendAlign = 'start',\n  refreshInterval,\n}: Props): React.ReactElement => {\n  const providers = useMemo(() => [provider], [provider]);\n\n  const dataFetcher = useChartProviders({ providers, refreshInterval });\n\n  const chartData = useMemo(() => {\n    const noChartData = { labels: [], datasets: [] };\n    if (dataFetcher.data == null) {\n      return noChartData;\n    }\n    const providerData = dataFetcher.data[0];\n    if (providerData == null) {\n      return noChartData;\n    }\n    const {\n      data: { connected, disconnected },\n    } = providerData;\n    return {\n      labels: ['Disconnected', 'Connected'],\n      datasets: [\n        {\n          data: [disconnected.value, connected.value],\n          backgroundColor: ['#cc5b6d', '#5bcc6c'],\n        },\n      ],\n    };\n  }, [dataFetcher.data]);\n\n  const chartOptions = useMemo(\n    () => ({\n      responsive: true,\n      legend: {\n        display: showLegend,\n        position: legendPosition,\n        align: legendAlign,\n      },\n    }),\n    [showLegend, legendPosition, legendAlign],\n  );\n\n  return <Pie data={chartData} width={width} height={height} options={chartOptions} />;\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useMemo } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport Color from 'color';\nimport { ChartProvider, Aggregated } from 'astarte-charts';\n\nimport { useChartProviders } from '../hooks';\n\ninterface Props<Kind extends Aggregated = Aggregated> {\n  providers: [ChartProvider<'Object', Kind>];\n  height?: number;\n  width?: number;\n  showLegend?: boolean;\n  legendPosition?: 'top' | 'left' | 'bottom' | 'right';\n  legendAlign?: 'start' | 'center' | 'end';\n  refreshInterval?: number;\n}\n\nexport const PieChart = <Kind extends Aggregated = Aggregated>({\n  providers,\n  height,\n  width,\n  showLegend = true,\n  legendPosition = 'top',\n  legendAlign = 'start',\n  refreshInterval,\n}: Props<Kind>): React.ReactElement => {\n  const dataFetcher = useChartProviders({ providers, refreshInterval });\n\n  const chartData = useMemo(() => {\n    const noChartData = { labels: [], datasets: [] };\n    if (dataFetcher.data == null) {\n      return noChartData;\n    }\n    const providerData = dataFetcher.data[0];\n    if (providerData == null) {\n      return noChartData;\n    }\n    const { data } = providerData;\n    const labels = Object.keys(data);\n    const series = labels.map((label) => Number(data[label].value));\n    const colors = labels.map((label, index) =>\n      Color.hsl((index * 360) / labels.length, 70, 70)\n        .rgb()\n        .string(),\n    );\n    return {\n      labels,\n      datasets: [\n        {\n          data: series,\n          backgroundColor: colors,\n        },\n      ],\n    };\n  }, [dataFetcher.data]);\n\n  const chartOptions = useMemo(\n    () => ({\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: showLegend,\n        position: legendPosition,\n        align: legendAlign,\n      },\n    }),\n    [showLegend, legendPosition, legendAlign],\n  );\n\n  return <Pie data={chartData} width={width} height={height} options={chartOptions} />;\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { createContext, useCallback, useContext, useMemo, useState } from 'react';\nimport AstarteClient from 'astarte-client';\nimport _ from 'lodash';\n\nimport type { DashboardConfig } from './types';\n\nconst parseAstarteApiUrls = (params: DashboardConfig) => {\n  const { astarteApiUrl } = params;\n  let appEngineApiUrl: URL;\n  let realmManagementApiUrl: URL;\n  let pairingApiUrl: URL;\n  let flowApiUrl: URL;\n\n  if (astarteApiUrl === 'localhost') {\n    appEngineApiUrl = new URL('http://localhost:4002');\n    realmManagementApiUrl = new URL('http://localhost:4000');\n    pairingApiUrl = new URL('http://localhost:4003');\n    flowApiUrl = new URL('http://localhost:4009');\n  } else {\n    appEngineApiUrl = new URL('appengine/', astarteApiUrl);\n    realmManagementApiUrl = new URL('realmmanagement/', astarteApiUrl);\n    pairingApiUrl = new URL('pairing/', astarteApiUrl);\n    flowApiUrl = new URL('flow/', astarteApiUrl);\n  }\n\n  if (params.appEngineApiUrl) {\n    appEngineApiUrl = new URL(params.appEngineApiUrl);\n  }\n  if (params.realmManagementApiUrl) {\n    realmManagementApiUrl = new URL(params.realmManagementApiUrl);\n  }\n  if (params.pairingApiUrl) {\n    pairingApiUrl = new URL(params.pairingApiUrl);\n  }\n  if (params.flowApiUrl) {\n    flowApiUrl = new URL(params.flowApiUrl);\n  }\n\n  return {\n    appEngineApiUrl: appEngineApiUrl.toString(),\n    realmManagementApiUrl: realmManagementApiUrl.toString(),\n    pairingApiUrl: pairingApiUrl.toString(),\n    flowApiUrl: flowApiUrl.toString(),\n  };\n};\n\ntype Session = {\n  realm: string;\n  token: string;\n  authUrl: string | null;\n};\n\nconst SESSION_VERSION = 1;\n\nfunction saveSession(session?: Session | null): void {\n  if (!session) {\n    localStorage.removeItem('session');\n  } else {\n    localStorage.setItem('session', JSON.stringify({ ...session, _version: SESSION_VERSION }));\n  }\n}\n\nfunction loadSession(): Session | null {\n  let session: Session | null = null;\n  try {\n    session = JSON.parse(localStorage.getItem('session') || '');\n  } catch {\n    session = null;\n  }\n  if (_.get(session, '_version') === SESSION_VERSION) {\n    return _.omit(session, '_version');\n  }\n  return null;\n}\n\ntype AstarteContextValue = {\n  client: AstarteClient;\n  realm: string | null;\n  isAuthenticated: boolean;\n  login: (params: { realm: string; token: string; authUrl: string | null }) => boolean;\n  logout: () => void;\n};\n\nconst AstarteContext: React.Context<AstarteContextValue> = createContext(null) as any;\n\ninterface AstarteProviderProps {\n  children: React.ReactNode;\n  config: DashboardConfig;\n}\n\nconst AstarteProvider = ({\n  children,\n  config,\n  ...props\n}: AstarteProviderProps): React.ReactElement => {\n  const [session, setSession] = useState(loadSession());\n\n  const client = useMemo(() => {\n    const apiConfig = parseAstarteApiUrls(config);\n    const authConfig = _.pick(session, ['realm', 'token']);\n    const clientConfig = _.merge({}, apiConfig, authConfig);\n    return new AstarteClient(clientConfig);\n  }, [config]);\n\n  const updateSession = useCallback(\n    (newSession: Session | null) => {\n      client.setCredentials(\n        newSession && {\n          realm: newSession.realm,\n          token: newSession.token,\n        },\n      );\n      setSession(newSession);\n      saveSession(newSession);\n    },\n    [client],\n  );\n\n  const login = useCallback(\n    (params: { realm: string; token: string; authUrl: string | null }) => {\n      const { realm, token, authUrl } = params;\n      if (!realm || !token) {\n        return false;\n      }\n      updateSession({ realm, token, authUrl });\n      return true;\n    },\n    [updateSession],\n  );\n\n  const logout = useCallback(() => updateSession(null), [updateSession]);\n\n  const contextValue = useMemo(\n    () => ({\n      client,\n      realm: session && session.realm,\n      isAuthenticated: session != null,\n      login,\n      logout,\n    }),\n    [client, login, logout, session],\n  );\n\n  return (\n    <AstarteContext.Provider value={contextValue} {...props}>\n      {children}\n    </AstarteContext.Provider>\n  );\n};\n\nconst useAstarte = (): AstarteContextValue => useContext(AstarteContext);\n\nexport { useAstarte };\n\nexport default AstarteProvider;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n */\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\ntype Status = 'loading' | 'ok' | 'err';\n\ntype FetchState<Data, FetchParams extends any[]> =\n  | {\n      status: 'loading';\n      value: Data | null;\n      error: Error | null;\n      refresh: (...params: FetchParams) => Promise<void>;\n    }\n  | {\n      status: 'ok';\n      value: Data;\n      error: Error | null;\n      refresh: (...params: FetchParams) => Promise<void>;\n    }\n  | {\n      status: 'err';\n      value: Data | null;\n      error: Error;\n      refresh: (...params: FetchParams) => Promise<void>;\n    };\n\nconst useFetch = <Data = any, FetchParams extends any[] = any[]>(\n  fetchData: (...params: FetchParams) => Promise<Data>,\n  ...initialFetchParams: FetchParams\n): FetchState<Data, FetchParams> => {\n  if (!fetchData) {\n    throw new Error('Invalid fetch method');\n  }\n\n  const [status, setStatus] = useState<Status>('loading');\n  const [data, setData] = useState<Data | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n  const isReady = useRef(false);\n\n  const getData = useCallback(\n    async (...fetchParams: FetchParams) => {\n      setStatus('loading');\n      try {\n        const fetchedData = await fetchData(...fetchParams);\n        if (isReady.current) {\n          setData(fetchedData);\n          setStatus('ok');\n        }\n      } catch (err) {\n        setError(err);\n        setStatus('err');\n      }\n    },\n    [isReady],\n  );\n\n  useEffect(() => {\n    isReady.current = true;\n    getData(...initialFetchParams);\n    return () => {\n      isReady.current = false;\n    };\n  }, []);\n\n  if (status === 'err') {\n    return {\n      status,\n      value: data,\n      error: error as Error,\n      refresh: getData,\n    };\n  }\n  if (status === 'ok') {\n    return {\n      status,\n      value: data as Data,\n      error,\n      refresh: getData,\n    };\n  }\n  return {\n    status,\n    value: data,\n    error,\n    refresh: getData,\n  };\n};\n\nexport default useFetch;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\ninterface Props<Data> {\n  data: Data | null;\n  status: 'loading' | 'ok' | 'err';\n  showRefreshing?: boolean;\n  fallback?: React.ReactElement;\n  errorFallback?: React.ReactElement;\n  children: (data: Data) => React.ReactElement;\n}\n\nconst WaitForData = <Data = any>({\n  data,\n  status,\n  showRefreshing = false,\n  fallback,\n  errorFallback,\n  children,\n}: Props<Data>): React.ReactElement | null => {\n  switch (status) {\n    case 'ok':\n      return children(data as Data);\n\n    case 'loading':\n      if (!showRefreshing && data) {\n        return children(data);\n      }\n      return fallback || null;\n\n    case 'err':\n      return errorFallback || null;\n\n    default:\n      return null;\n  }\n};\n\nexport default WaitForData;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Button, Col, Container, Card, Row, Spinner, Table } from 'react-bootstrap';\nimport { getConnectedDevices, ChartProvider, ConnectedDevices } from 'astarte-charts';\nimport { ConnectedDevicesChart } from 'astarte-charts/react';\n\nimport { useConfig } from './ConfigManager';\nimport { useAstarte } from './AstarteManager';\nimport useFetch from './hooks/useFetch';\nimport Icon from './components/Icon';\nimport WaitForData from './components/WaitForData';\n\ntype ServiceStatus = 'loading' | 'ok' | 'err';\n\ninterface ServiceStatusRowProps {\n  service: string;\n  status: ServiceStatus;\n}\n\nconst ServiceStatusRow = ({ service, status }: ServiceStatusRowProps): React.ReactElement => {\n  let messageCell;\n\n  if (status === 'loading') {\n    messageCell = (\n      <td>\n        <Spinner animation=\"border\" role=\"status\" />\n      </td>\n    );\n  } else if (status === 'ok') {\n    messageCell = (\n      <td className=\"color-green\">\n        <Icon icon=\"statusOK\" className=\"mr-1\" />\n        This service is operating normally\n      </td>\n    );\n  } else {\n    messageCell = (\n      <td className=\"color-red\">\n        <Icon icon=\"statusKO\" className=\"mr-1\" />\n        This service appears offline\n      </td>\n    );\n  }\n\n  return (\n    <tr>\n      <td>{service}</td>\n      {messageCell}\n    </tr>\n  );\n};\n\ninterface ApiStatusCardProps {\n  appengine: ServiceStatus;\n  realmManagement: ServiceStatus;\n  pairing: ServiceStatus;\n  showFlowStatus: boolean;\n  flow: ServiceStatus | null;\n}\n\nconst ApiStatusCard = ({\n  appengine,\n  realmManagement,\n  pairing,\n  showFlowStatus,\n  flow,\n}: ApiStatusCardProps): React.ReactElement => (\n  <Card id=\"status-card\" className=\"h-100\">\n    <Card.Header as=\"h5\">API Status</Card.Header>\n    <Card.Body>\n      <Table responsive>\n        <thead>\n          <tr>\n            <th>Service</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          <ServiceStatusRow service=\"Realm Management\" status={realmManagement} />\n          <ServiceStatusRow service=\"AppEngine\" status={appengine} />\n          <ServiceStatusRow service=\"Pairing\" status={pairing} />\n          {showFlowStatus && flow && <ServiceStatusRow service=\"Flow\" status={flow} />}\n        </tbody>\n      </Table>\n    </Card.Body>\n  </Card>\n);\n\ninterface DevicesCardProps {\n  connectedDevices: number;\n  totalDevices: number;\n  connectedDevicesProvider: ChartProvider<'Object', ConnectedDevices>;\n}\n\nconst DevicesCard = ({\n  connectedDevices,\n  totalDevices,\n  connectedDevicesProvider,\n}: DevicesCardProps): React.ReactElement => (\n  <Card id=\"devices-card\" className=\"h-100\">\n    <Card.Header as=\"h5\">Devices</Card.Header>\n    <Card.Body>\n      <Container className=\"h-100 p-0\" fluid>\n        <Row noGutters>\n          <Col xs={12} lg={6}>\n            <Card.Title>Connected devices</Card.Title>\n            <Card.Text>{connectedDevices}</Card.Text>\n            <Card.Title>Registered devices</Card.Title>\n            <Card.Text>{totalDevices}</Card.Text>\n          </Col>\n          <Col xs={12} lg={6}>\n            {totalDevices > 0 && <ConnectedDevicesChart provider={connectedDevicesProvider} />}\n          </Col>\n        </Row>\n      </Container>\n    </Card.Body>\n  </Card>\n);\n\ninterface InterfaceListProps {\n  interfaces: string[];\n  onInterfaceClick: (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    interfaceName: string,\n  ) => void;\n  maxShownInterfaces: number;\n}\n\nconst InterfaceList = ({\n  interfaces,\n  onInterfaceClick,\n  maxShownInterfaces,\n}: InterfaceListProps): React.ReactElement => {\n  const shownInterfaces = interfaces.slice(0, maxShownInterfaces);\n  const remainingInterfaces = interfaces.length - maxShownInterfaces;\n\n  return (\n    <ul className=\"list-unstyled\">\n      {shownInterfaces.map((interfaceName) => (\n        <li key={interfaceName} className=\"my-1\">\n          <a\n            href=\"/interfaces\"\n            onClick={(e) => {\n              onInterfaceClick(e, interfaceName);\n            }}\n          >\n            <Icon icon=\"interfaces\" className=\"mr-1\" />\n            {interfaceName}\n          </a>\n        </li>\n      ))}\n      {remainingInterfaces > 0 && (\n        <li>\n          <Link to=\"/interfaces\">\n            {`${remainingInterfaces} more installed ${\n              remainingInterfaces > 1 ? 'interfaces' : 'interface'\n            }…`}\n          </Link>\n        </li>\n      )}\n    </ul>\n  );\n};\n\ninterface InterfacesCardProps {\n  interfaceList: string[];\n  onInterfaceClick: (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    interfaceName: string,\n  ) => void;\n  onInstallInterfaceClick: () => void;\n}\n\nconst InterfacesCard = ({\n  interfaceList,\n  onInterfaceClick,\n  onInstallInterfaceClick,\n}: InterfacesCardProps): React.ReactElement => (\n  <Card id=\"interfaces-card\" className=\"h-100\">\n    <Card.Header as=\"h5\">Interfaces</Card.Header>\n    <Card.Body className=\"d-flex flex-column\">\n      {interfaceList.length > 0 ? (\n        <InterfaceList\n          interfaces={interfaceList}\n          onInterfaceClick={onInterfaceClick}\n          maxShownInterfaces={4}\n        />\n      ) : (\n        <>\n          <Card.Text>\n            Interfaces defines how data is exchanged between Astarte and its peers.\n          </Card.Text>\n          <Card.Text>\n            <a\n              href=\"https://docs.astarte-platform.org/snapshot/030-interface.html\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Learn more...\n            </a>\n          </Card.Text>\n        </>\n      )}\n      <Button\n        variant=\"primary\"\n        className=\"align-self-start mt-auto\"\n        onClick={onInstallInterfaceClick}\n      >\n        Install a new interface\n      </Button>\n    </Card.Body>\n  </Card>\n);\n\ninterface TriggerListProps {\n  triggers: string[];\n  maxShownTriggers: number;\n}\n\nconst TriggerList = ({ triggers, maxShownTriggers }: TriggerListProps): React.ReactElement => {\n  const shownTriggers = triggers.slice(0, maxShownTriggers);\n  const remainingTriggers = triggers.length - maxShownTriggers;\n\n  return (\n    <ul className=\"list-unstyled\">\n      {shownTriggers.map((triggerName) => (\n        <li key={triggerName} className=\"my-1\">\n          <Link to={`/triggers/${triggerName}/edit`}>\n            <Icon icon=\"triggers\" className=\"mr-1\" />\n            {triggerName}\n          </Link>\n        </li>\n      ))}\n      {remainingTriggers > 0 && (\n        <li>\n          <Link to=\"/triggers\">\n            {`${remainingTriggers} more installed ${\n              remainingTriggers > 1 ? 'triggers' : 'trigger'\n            }…`}\n          </Link>\n        </li>\n      )}\n    </ul>\n  );\n};\n\ninterface TriggersCardProps {\n  triggerList: string[];\n  onInstallTriggerClick: () => void;\n}\n\nconst TriggersCard = ({\n  triggerList,\n  onInstallTriggerClick,\n}: TriggersCardProps): React.ReactElement => (\n  <Card id=\"triggers-card\" className=\"h-100\">\n    <Card.Header as=\"h5\">Triggers</Card.Header>\n    <Card.Body className=\"d-flex flex-column\">\n      {triggerList.length > 0 ? (\n        <TriggerList triggers={triggerList} maxShownTriggers={4} />\n      ) : (\n        <>\n          <Card.Text>\n            Triggers in Astarte are the go-to mechanism for generating push events.\n          </Card.Text>\n          <Card.Text>\n            Triggers allow users to specify conditions upon which a custom payload is delivered to a\n            recipient, using a specific action, which usually maps to a specific transport/protocol,\n            such as HTTP.\n          </Card.Text>\n          <Card.Text>\n            <a\n              href=\"https://docs.astarte-platform.org/snapshot/060-using_triggers.html\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Learn more...\n            </a>\n          </Card.Text>\n        </>\n      )}\n      <Button\n        variant=\"primary\"\n        className=\"align-self-start mt-auto\"\n        onClick={onInstallTriggerClick}\n      >\n        Install a new trigger\n      </Button>\n    </Card.Body>\n  </Card>\n);\n\nexport default (): React.ReactElement => {\n  const astarte = useAstarte();\n  const config = useConfig();\n  const devicesStats = useFetch(astarte.client.getDevicesStats);\n  const interfaces = useFetch(astarte.client.getInterfaceNames);\n  const triggers = useFetch(astarte.client.getTriggerNames);\n  const appEngineHealth = useFetch(astarte.client.getAppengineHealth);\n  const realmManagementHealth = useFetch(astarte.client.getRealmManagementHealth);\n  const pairingHealth = useFetch(astarte.client.getPairingHealth);\n  const flowHealth = config.features.flow ? useFetch(astarte.client.getFlowHealth) : null;\n  const navigate = useNavigate();\n\n  const connectedDevicesProvider = useMemo(() => getConnectedDevices(astarte.client), [\n    astarte.client,\n  ]);\n\n  const refreshData = () => {\n    devicesStats.refresh();\n    interfaces.refresh();\n    triggers.refresh();\n    appEngineHealth.refresh();\n    realmManagementHealth.refresh();\n    pairingHealth.refresh();\n    if (config.features.flow && flowHealth) {\n      flowHealth.refresh();\n    }\n  };\n\n  useEffect(() => {\n    const refreshTimer = setInterval(() => {\n      refreshData();\n    }, 30000);\n\n    return () => {\n      clearTimeout(refreshTimer);\n    };\n  }, [astarte.client]);\n\n  const redirectToLastInterface = useCallback((e, interfaceName) => {\n    e.preventDefault();\n    astarte.client.getInterfaceMajors(interfaceName).then((interfaceMajors) => {\n      const latestMajor = Math.max(...interfaceMajors);\n      navigate(`/interfaces/${interfaceName}/${latestMajor}/edit`);\n    });\n  }, []);\n\n  const cellSpacingClass = 'mb-3';\n\n  return (\n    <Container fluid className=\"p-3\">\n      <Row>\n        <Col xs={12}>\n          <h2 className=\"mb-4\">Astarte Dashboard</h2>\n        </Col>\n        <Col xs={6} className={cellSpacingClass}>\n          <ApiStatusCard\n            appengine={appEngineHealth.status}\n            realmManagement={realmManagementHealth.status}\n            pairing={pairingHealth.status}\n            showFlowStatus={config.features.flow}\n            flow={flowHealth ? flowHealth.status : null}\n          />\n        </Col>\n        <WaitForData data={devicesStats.value} status={devicesStats.status}>\n          {({ connected_devices: connectedDevices, total_devices: totalDevices }) => (\n            <Col xs={6} className={cellSpacingClass}>\n              <DevicesCard\n                connectedDevices={connectedDevices}\n                totalDevices={totalDevices}\n                connectedDevicesProvider={connectedDevicesProvider}\n              />\n            </Col>\n          )}\n        </WaitForData>\n        <WaitForData data={interfaces.value} status={interfaces.status}>\n          {(interfaceList) => (\n            <Col xs={6} className={cellSpacingClass}>\n              <InterfacesCard\n                interfaceList={interfaceList}\n                onInterfaceClick={redirectToLastInterface}\n                onInstallInterfaceClick={() => navigate('/interfaces/new')}\n              />\n            </Col>\n          )}\n        </WaitForData>\n        <WaitForData data={triggers.value} status={triggers.status}>\n          {(triggerList) => (\n            <Col xs={6} className={cellSpacingClass}>\n              <TriggersCard\n                triggerList={triggerList}\n                onInstallTriggerClick={() => navigate('/triggers/new')}\n              />\n            </Col>\n          )}\n        </WaitForData>\n      </Row>\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Icon from '../components/Icon';\n\ninterface Props {\n  href: string;\n}\n\nexport default function BackButton({ href }: Props): React.ReactElement {\n  return (\n    <Link to={href} className=\"mr-2\" aria-label=\"Back\">\n      <Icon icon=\"arrowLeft\" />\n    </Link>\n  );\n}\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport BackButton from './BackButton';\nimport Icon from '../components/Icon';\n\ninterface Props {\n  backLink?: string;\n  children: React.ReactNode;\n  docsLink?: string;\n  title: string;\n}\n\nexport default function SingleCardPage({\n  backLink,\n  children,\n  docsLink,\n  title,\n}: Props): React.ReactElement {\n  return (\n    <Container fluid className=\"p-3\">\n      <header className=\"d-flex justify-content-between align-items-baseline\">\n        <h2>\n          {backLink && <BackButton href={backLink} />}\n          {title}\n        </h2>\n        {docsLink && (\n          <div className=\"float-right\">\n            <a target=\"_blank\" rel=\"noreferrer\" href={docsLink}>\n              <Icon icon=\"documentation\" className=\"mr-2\" />\n              Documentation\n            </a>\n          </div>\n        )}\n      </header>\n      <Container fluid className=\"bg-white rounded p-3\">\n        {children}\n      </Container>\n    </Container>\n  );\n}\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Button, Container } from 'react-bootstrap';\n\ninterface Props {\n  title: string;\n  onRetry?: () => void;\n}\n\nconst Empty = ({ title, onRetry }: Props): React.ReactElement => {\n  const tryAgain = onRetry ? (\n    <Button variant=\"link\" className=\"p-0\" onClick={onRetry}>\n      try again\n    </Button>\n  ) : (\n    'try again'\n  );\n\n  return (\n    <Container fluid className=\"text-center\">\n      <img\n        src=\"/static/img/mascotte-repair.svg\"\n        alt=\"Lion mascotte with repair tools\"\n        style={{ maxWidth: 200 }}\n      />\n      <h5 className=\"mt-2\">{title}</h5>\n      <p>Please check your connectivity and {tryAgain}.</p>\n    </Container>\n  );\n};\n\nexport default Empty;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Button, Container, Spinner, Table } from 'react-bootstrap';\n\nimport SingleCardPage from './ui/SingleCardPage';\nimport { useAlerts } from './AlertManager';\nimport Empty from './components/Empty';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\nimport { useAstarte } from './AstarteManager';\n\ninterface GroupState {\n  name: string;\n  totalDevices: number;\n  connectedDevices: number;\n}\n\ntype GroupMap = Map<string, GroupState>;\n\ntype GroupsTableProps = {\n  groupMap: GroupMap;\n};\n\nconst GroupsTable = ({ groupMap }: GroupsTableProps) => {\n  if (groupMap.size === 0) {\n    return <p>No registered group</p>;\n  }\n  return (\n    <Table responsive>\n      <thead>\n        <tr>\n          <th>Group name</th>\n          <th>Connected devices</th>\n          <th>Total devices</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Array.from(groupMap.values()).map((group) => {\n          const encodedGroupName = encodeURIComponent(encodeURIComponent(group.name));\n          return (\n            <tr key={group.name}>\n              <td>\n                <Link to={`/groups/${encodedGroupName}/edit`}>{group.name}</Link>\n              </td>\n              <td>{group.connectedDevices}</td>\n              <td>{group.totalDevices}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default (): React.ReactElement => {\n  const astarte = useAstarte();\n  const pageAlerts = useAlerts();\n  const navigate = useNavigate();\n\n  const fetchGroups = useCallback(async (): Promise<GroupMap> => {\n    pageAlerts.closeAll();\n    const groupNames = await astarte.client.getGroupList();\n    const groupMap: GroupMap = new Map();\n    const fetchGroupPromises = groupNames.map((groupName) =>\n      astarte.client\n        .getDevicesInGroup({\n          groupName,\n          details: true,\n        })\n        .catch(() => {\n          pageAlerts.showError(`Couldn't get the device list for group ${groupName}`);\n          return null;\n        }),\n    );\n    const groupsDevices = await Promise.all(fetchGroupPromises);\n    groupNames.forEach((groupName, index) => {\n      const groupDevices = groupsDevices[index];\n      if (groupDevices) {\n        groupMap.set(groupName, {\n          name: groupName,\n          totalDevices: groupDevices.length,\n          connectedDevices: groupDevices.filter((device) => device.isConnected).length,\n        });\n      }\n    });\n    return groupMap;\n  }, [astarte.client, pageAlerts.closeAll, pageAlerts.showError]);\n\n  const groupsFetcher = useFetch(fetchGroups);\n\n  return (\n    <SingleCardPage title=\"Groups\">\n      <pageAlerts.Alerts />\n      <WaitForData\n        data={groupsFetcher.value}\n        status={groupsFetcher.status}\n        fallback={\n          <Container fluid className=\"text-center\">\n            <Spinner animation=\"border\" role=\"status\" />\n          </Container>\n        }\n        errorFallback={<Empty title=\"Couldn't load groups\" onRetry={groupsFetcher.refresh} />}\n      >\n        {(groupMap) => <GroupsTable groupMap={groupMap} />}\n      </WaitForData>\n      <Button\n        variant=\"primary\"\n        onClick={() => {\n          navigate('/groups/new');\n        }}\n      >\n        Create new group\n      </Button>\n    </SingleCardPage>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback } from 'react';\nimport { Button, Modal, Spinner } from 'react-bootstrap';\nimport type { ModalProps } from 'react-bootstrap';\n\ntype BoostrapVariant =\n  | 'primary'\n  | 'secondary'\n  | 'success'\n  | 'warning'\n  | 'danger'\n  | 'info'\n  | 'light'\n  | 'dark'\n  | 'link';\n\ninterface Props {\n  cancelLabel?: string;\n  children: React.ReactNode;\n  confirmLabel?: string;\n  confirmOnEnter?: boolean;\n  confirmVariant?: BoostrapVariant;\n  disabled?: boolean;\n  isConfirming?: boolean;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  size?: ModalProps['size'];\n  title: React.ReactNode;\n}\n\nconst ConfirmModal = ({\n  cancelLabel = 'Cancel',\n  children,\n  confirmLabel = 'Confirm',\n  confirmOnEnter = true,\n  confirmVariant = 'primary',\n  disabled = false,\n  isConfirming = false,\n  onCancel,\n  onConfirm,\n  size = 'lg',\n  title,\n}: Props): React.ReactElement => {\n  const handleKeyDown = useCallback((event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.key === 'Enter' && confirmOnEnter && !isConfirming) {\n      onConfirm();\n    }\n  }, []);\n\n  return (\n    <div onKeyDown={handleKeyDown}>\n      <Modal show centered size={size} onHide={onCancel || onConfirm}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{children}</Modal.Body>\n        <Modal.Footer>\n          {onCancel && (\n            <Button variant=\"secondary\" onClick={onCancel} style={{ minWidth: '5em' }}>\n              {cancelLabel}\n            </Button>\n          )}\n          <Button\n            variant={confirmVariant}\n            disabled={disabled || isConfirming}\n            onClick={onConfirm}\n            style={{ minWidth: '5em' }}\n          >\n            {isConfirming && (\n              <Spinner className=\"mr-2\" size=\"sm\" animation=\"border\" role=\"status\" />\n            )}\n            {confirmLabel}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ConfirmModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useState, useCallback } from 'react';\nimport { Container, Spinner, Table } from 'react-bootstrap';\nimport type { AstarteDevice } from 'astarte-client';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\n\nimport Empty from './components/Empty';\nimport Icon from './components/Icon';\nimport ConfirmModal from './components/modals/Confirm';\nimport SingleCardPage from './ui/SingleCardPage';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\nimport { useAstarte } from './AstarteManager';\n\nconst deviceTableRow = (\n  device: AstarteDevice,\n  index: number,\n  showModal: (d: AstarteDevice) => void,\n) => {\n  let icon;\n  let iconTooltip;\n  let lastEvent;\n\n  if (device.isConnected) {\n    icon = 'statusConnected' as const;\n    iconTooltip = 'Connected';\n    lastEvent = `Connected on ${(device.lastConnection as Date).toLocaleString()}`;\n  } else if (device.lastConnection) {\n    icon = 'statusDisconnected' as const;\n    iconTooltip = 'Disconnected';\n    lastEvent = `Disconnected on ${(device.lastDisconnection as Date).toLocaleString()}`;\n  } else {\n    icon = 'statusNeverConnected' as const;\n    iconTooltip = 'Never connected';\n    lastEvent = 'Never connected';\n  }\n\n  return (\n    <tr key={index}>\n      <td>\n        <Icon icon={icon} tooltip={iconTooltip} tooltipPlacement=\"right\" />\n      </td>\n      <td className={device.hasNameAlias ? '' : 'text-monospace'}>\n        <Link to={`/devices/${device.id}/edit`}>{device.name}</Link>\n      </td>\n      <td>{lastEvent}</td>\n      <td>\n        <Icon\n          icon=\"delete\"\n          as=\"button\"\n          tooltip=\"Remove from group\"\n          tooltipPlacement=\"left\"\n          onClick={() => showModal(device)}\n        />\n      </td>\n    </tr>\n  );\n};\n\nconst deviceTable = (deviceList: AstarteDevice[], showModal: (d: AstarteDevice) => void) => (\n  <Table responsive>\n    <thead>\n      <tr>\n        <th>Status</th>\n        <th>Device handle</th>\n        <th>Last connection event</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>{deviceList.map((device, index) => deviceTableRow(device, index, showModal))}</tbody>\n  </Table>\n);\n\nconst GroupDevicesPage = (): React.ReactElement => {\n  const groupName = decodeURIComponent(useParams().groupName);\n  const [selectedDevice, setSelectedDevice] = useState<AstarteDevice | null>(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isRemovingDevice, setIsRemovingDevice] = useState(false);\n  const navigate = useNavigate();\n  const astarte = useAstarte();\n\n  const devicesFetcher = useFetch(() =>\n    astarte.client.getDevicesInGroup({\n      groupName,\n      details: true,\n    }),\n  );\n\n  const showModal = useCallback(\n    (device: AstarteDevice) => {\n      setSelectedDevice(device);\n      setIsModalVisible(true);\n    },\n    [setSelectedDevice, setIsModalVisible],\n  );\n\n  const closeModal = useCallback(() => {\n    setIsModalVisible(false);\n  }, [setIsModalVisible]);\n\n  const removeDevice = useCallback(() => {\n    if (!selectedDevice) {\n      return;\n    }\n    setIsRemovingDevice(true);\n    astarte.client\n      .removeDeviceFromGroup({\n        groupName,\n        deviceId: selectedDevice.id,\n      })\n      .finally(() => {\n        if (devicesFetcher.value != null && devicesFetcher.value.length === 1) {\n          navigate({ pathname: '/groups' });\n        } else {\n          setIsRemovingDevice(false);\n          setIsModalVisible(false);\n          devicesFetcher.refresh();\n        }\n      });\n  }, [\n    astarte.client,\n    setIsRemovingDevice,\n    setIsModalVisible,\n    devicesFetcher.refresh,\n    devicesFetcher.value,\n    groupName,\n    selectedDevice,\n    navigate,\n  ]);\n\n  const selectedDeviceName = selectedDevice?.name as string;\n\n  return (\n    <SingleCardPage title=\"Group Devices\" backLink=\"/groups\">\n      <h5 className=\"mt-1 mb-3\">{`Devices in group ${groupName}`}</h5>\n      <WaitForData\n        data={devicesFetcher.value}\n        status={devicesFetcher.status}\n        fallback={\n          <Container fluid className=\"text-center\">\n            <Spinner animation=\"border\" role=\"status\" />\n          </Container>\n        }\n        errorFallback={\n          <Empty title=\"Couldn't load devices in group\" onRetry={devicesFetcher.refresh} />\n        }\n      >\n        {(devices) => deviceTable(devices, showModal)}\n      </WaitForData>\n      {isModalVisible && (\n        <ConfirmModal\n          title=\"Warning\"\n          confirmLabel=\"Remove\"\n          confirmVariant=\"danger\"\n          onCancel={closeModal}\n          onConfirm={removeDevice}\n          isConfirming={isRemovingDevice}\n        >\n          {devicesFetcher.value != null && devicesFetcher.value.length === 1 && (\n            <p>This is the last device in the group. Removing this device will delete the group</p>\n          )}\n          <p>\n            Remove device <b>{selectedDeviceName}</b> from group <b>{groupName}</b>?\n          </p>\n        </ConfirmModal>\n      )}\n    </SingleCardPage>\n  );\n};\n\nexport default GroupDevicesPage;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useMemo } from 'react';\nimport { Form, Table } from 'react-bootstrap';\nimport { AstarteDevice } from 'astarte-client';\n\ninterface HighlightProps {\n  text: string;\n  word?: string;\n}\n\nconst Highlight = ({ text, word }: HighlightProps): React.ReactElement => {\n  if (!word) {\n    return <span>{text}</span>;\n  }\n\n  return (\n    <>\n      {text.split(word).reduce(\n        (prev: React.ReactElement[], current, index) => [\n          ...prev,\n          <span key={index} className=\"bg-warning text-dark\">\n            {word}\n          </span>,\n          <span>{current}</span>,\n        ],\n        [],\n      )}\n    </>\n  );\n};\n\ninterface DeviceTableRowProps {\n  deviceId: string;\n  deviceAliases: Array<[string, string]>;\n  filter?: string;\n  selected: boolean;\n  onToggleDevice: (deviceId: string, checked: boolean) => void;\n}\n\nconst DeviceTableRow = ({\n  deviceId,\n  deviceAliases,\n  filter,\n  selected,\n  onToggleDevice,\n}: DeviceTableRowProps) => {\n  const onToggleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { checked } = event.target;\n      onToggleDevice(deviceId, checked);\n    },\n    [deviceId, onToggleDevice],\n  );\n  return (\n    <tr>\n      <td>\n        <Form.Check\n          id={`device-${deviceId}`}\n          type=\"checkbox\"\n          checked={selected}\n          onChange={onToggleChange}\n        />\n      </td>\n      <td className=\"text-monospace\">\n        <Highlight text={deviceId} word={filter} />\n      </td>\n      <td>\n        <ul className=\"list-unstyled\">\n          {deviceAliases.map(([aliasTag, alias]) => (\n            <li key={aliasTag}>\n              <Highlight text={alias} word={filter} />\n            </li>\n          ))}\n        </ul>\n      </td>\n    </tr>\n  );\n};\n\ninterface CheckableDeviceTableProps {\n  devices: AstarteDevice[];\n  filter?: string;\n  selectedDevices: Set<AstarteDevice['id']>;\n  onToggleDevice: DeviceTableRowProps['onToggleDevice'];\n}\n\nconst CheckableDeviceTable = ({\n  devices,\n  filter,\n  selectedDevices,\n  onToggleDevice,\n}: CheckableDeviceTableProps): React.ReactElement => {\n  const filteredDevices = useMemo(() => {\n    if (filter) {\n      return devices.filter((device) => {\n        const aliases = Array.from(device.aliases.values());\n        return (\n          device.id.includes(filter) || aliases.filter((alias) => alias.includes(filter)).length > 0\n        );\n      });\n    }\n    return devices;\n  }, [devices, filter]);\n\n  if (!filteredDevices.length) {\n    return <p>No device matched the current filter</p>;\n  }\n\n  return (\n    <Table responsive hover>\n      <thead>\n        <tr>\n          <th>Selected</th>\n          <th>Device ID</th>\n          <th>Aliases</th>\n        </tr>\n      </thead>\n      <tbody>\n        {filteredDevices.map((device) => (\n          <DeviceTableRow\n            key={device.id}\n            deviceId={device.id}\n            deviceAliases={Array.from(device.aliases.entries())}\n            selected={selectedDevices.has(device.id)}\n            filter={filter}\n            onToggleDevice={onToggleDevice}\n          />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default CheckableDeviceTable;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Container, Form, InputGroup, Spinner } from 'react-bootstrap';\nimport type { AstarteDevice } from 'astarte-client';\n\nimport { useAlerts } from './AlertManager';\nimport { useAstarte } from './AstarteManager';\nimport Empty from './components/Empty';\nimport Icon from './components/Icon';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\nimport SingleCardPage from './ui/SingleCardPage';\nimport CheckableDeviceTable from './ui/CheckableDeviceTable';\n\ninterface GroupNameFormGroupProps {\n  groupName: string;\n  onGroupNameChange: (groupName: string) => void;\n}\n\nconst GroupNameFormGroup = ({\n  groupName,\n  onGroupNameChange,\n}: GroupNameFormGroupProps): React.ReactElement => {\n  const isValidGroupName = !groupName.startsWith('@') && !groupName.startsWith('~');\n  return (\n    <Form.Group controlId=\"groupNameInput\">\n      <Form.Label>Group name</Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Your group name\"\n        value={groupName}\n        onChange={(e) => onGroupNameChange(e.target.value.trim())}\n        autoComplete=\"off\"\n        required\n        isValid={groupName !== '' && isValidGroupName}\n        isInvalid={groupName !== '' && !isValidGroupName}\n      />\n      {!isValidGroupName && (\n        <Form.Control.Feedback type=\"invalid\">\n          The group name cannot start with ~ or @.\n        </Form.Control.Feedback>\n      )}\n    </Form.Group>\n  );\n};\n\ninterface FilterInputBoxProps {\n  filter: string;\n  onFilterChange: (filter: string) => void;\n}\n\nconst FilterInputBox = ({ filter, onFilterChange }: FilterInputBoxProps): React.ReactElement => (\n  <Form.Group>\n    <Form.Label srOnly>Table filter</Form.Label>\n    <InputGroup>\n      <InputGroup.Prepend>\n        <InputGroup.Text>\n          <Icon icon=\"filter\" />\n        </InputGroup.Text>\n      </InputGroup.Prepend>\n      <Form.Control\n        type=\"text\"\n        value={filter}\n        onChange={(e) => onFilterChange(e.target.value)}\n        placeholder=\"Device ID/alias\"\n      />\n    </InputGroup>\n  </Form.Group>\n);\n\nexport default (): React.ReactElement => {\n  const [groupName, setGroupName] = useState('');\n  const [deviceFilter, setDeviceFilter] = useState('');\n  const [selectedDevices, setSelectedDevices] = useState<Set<AstarteDevice['id']>>(new Set());\n  const [isCreatingGroup, setIsCreatingGroup] = useState(false);\n  const astarte = useAstarte();\n\n  const devicesFetcher = useFetch(() =>\n    astarte.client.getDevices({ details: true }).then(({ devices }) => devices),\n  );\n  const formAlerts = useAlerts();\n  const navigate = useNavigate();\n\n  const createGroup = (event: React.FormEvent<HTMLElement>) => {\n    event.preventDefault();\n    setIsCreatingGroup(true);\n    astarte.client\n      .createGroup({\n        groupName,\n        deviceIds: Array.from(selectedDevices),\n      })\n      .then(() => {\n        navigate({ pathname: '/groups' });\n      })\n      .catch((err) => {\n        formAlerts.showError(`Could not create group: ${err.message}`);\n        setIsCreatingGroup(false);\n      });\n  };\n\n  const handleDeviceToggle = (deviceId: string, checked: boolean) => {\n    setSelectedDevices((previousSelection) => {\n      const newSelection = new Set(previousSelection);\n      if (checked) {\n        newSelection.add(deviceId);\n      } else {\n        newSelection.delete(deviceId);\n      }\n      return newSelection;\n    });\n  };\n\n  const selectedDeviceCount = selectedDevices.size;\n  const isValidGroupName =\n    groupName !== '' && !groupName.startsWith('@') && !groupName.startsWith('~');\n  const isValidForm = isValidGroupName && selectedDeviceCount > 0;\n\n  return (\n    <SingleCardPage title=\"Create a New Group\" backLink=\"/groups\">\n      <formAlerts.Alerts />\n      <WaitForData\n        data={devicesFetcher.value}\n        status={devicesFetcher.status}\n        fallback={\n          <Container fluid className=\"text-center\">\n            <Spinner animation=\"border\" role=\"status\" />\n          </Container>\n        }\n        errorFallback={\n          <Empty title=\"Couldn't load the device list\" onRetry={devicesFetcher.refresh} />\n        }\n      >\n        {(devices) => (\n          <Form onSubmit={createGroup}>\n            <GroupNameFormGroup groupName={groupName} onGroupNameChange={setGroupName} />\n            <div className=\"table-toolbar p-1\">\n              <span>\n                {selectedDeviceCount > 0\n                  ? `${selectedDeviceCount} ${\n                      selectedDeviceCount === 1 ? 'device' : 'devices'\n                    } selected.`\n                  : 'Please select at least one device.'}\n              </span>\n              <div className=\"float-right\">\n                <FilterInputBox filter={deviceFilter} onFilterChange={setDeviceFilter} />\n              </div>\n            </div>\n            <CheckableDeviceTable\n              filter={deviceFilter}\n              devices={devices}\n              selectedDevices={selectedDevices}\n              onToggleDevice={handleDeviceToggle}\n            />\n            <Form.Row className=\"flex-row-reverse pr-2\">\n              <Button variant=\"primary\" type=\"submit\" disabled={!isValidForm || isCreatingGroup}>\n                {isCreatingGroup && (\n                  <Spinner as=\"span\" size=\"sm\" animation=\"border\" role=\"status\" className=\"mr-2\" />\n                )}\n                Create group\n              </Button>\n            </Form.Row>\n          </Form>\n        )}\n      </WaitForData>\n    </SingleCardPage>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Col, Container, ListGroup, Row, Spinner } from 'react-bootstrap';\n\nimport { useAstarte } from './AstarteManager';\nimport Empty from './components/Empty';\nimport Icon from './components/Icon';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\nimport useInterval from './hooks/useInterval';\n\ninterface TriggerRowProps {\n  name: string;\n  onClick: () => void;\n}\n\nconst TriggerRow = ({ name, onClick }: TriggerRowProps): React.ReactElement => (\n  <ListGroup.Item>\n    <Button variant=\"link\" className=\"p-0\" onClick={onClick}>\n      <Icon icon=\"triggers\" className=\"mr-2\" />\n      {name}\n    </Button>\n  </ListGroup.Item>\n);\n\nconst LoadingRow = (): React.ReactElement => (\n  <ListGroup.Item>\n    <Container fluid className=\"text-center\">\n      <Spinner animation=\"border\" role=\"status\" />\n    </Container>\n  </ListGroup.Item>\n);\n\ninterface ErrorRowProps {\n  onRetry: () => void;\n}\n\nconst ErrorRow = ({ onRetry }: ErrorRowProps): React.ReactElement => (\n  <ListGroup.Item>\n    <Empty title=\"Couldn't load available triggers\" onRetry={onRetry} />\n  </ListGroup.Item>\n);\n\nexport default (): React.ReactElement => {\n  const astarte = useAstarte();\n  const navigate = useNavigate();\n  const triggersFetcher = useFetch(astarte.client.getTriggerNames);\n\n  useInterval(triggersFetcher.refresh, 30000);\n\n  return (\n    <Container fluid className=\"p-3\">\n      <Row>\n        <Col>\n          <h2>Triggers</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-3\">\n        <Col sm={12}>\n          <ListGroup>\n            <ListGroup.Item>\n              <Button\n                variant=\"link\"\n                className=\"p-0\"\n                onClick={() => {\n                  navigate('/triggers/new');\n                }}\n              >\n                <Icon icon=\"add\" className=\"mr-2\" />\n                Install a new trigger...\n              </Button>\n            </ListGroup.Item>\n            <WaitForData\n              data={triggersFetcher.value}\n              status={triggersFetcher.status}\n              fallback={<LoadingRow />}\n              errorFallback={<ErrorRow onRetry={triggersFetcher.refresh} />}\n            >\n              {(triggers) => (\n                <>\n                  {triggers.map((trigger) => (\n                    <TriggerRow\n                      key={trigger}\n                      name={trigger}\n                      onClick={() => {\n                        navigate(`/triggers/${trigger}/edit`);\n                      }}\n                    />\n                  ))}\n                </>\n              )}\n            </WaitForData>\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useMemo } from 'react';\nimport { Col, Form } from 'react-bootstrap';\nimport {\n  AstarteInterface,\n  AstarteMapping,\n  AstarteSimpleTrigger,\n  AstarteSimpleDeviceTrigger,\n  AstarteSimpleDataTrigger,\n} from 'astarte-client';\nimport _ from 'lodash';\n\nconst triggerConditionToLabel = {\n  device_disconnected: 'Device Disconnected',\n  device_connected: 'Device Connected',\n  device_error: 'Device Error',\n  device_empty_cache_received: 'Empty Cache Received',\n  incoming_data: 'Incoming Data',\n  value_change: 'Value Change',\n  value_change_applied: 'Value Change Applied',\n  path_created: 'Path Created',\n  path_removed: 'Path Removed',\n  value_stored: 'Value Stored',\n};\n\nconst triggerOperatorToLabel = {\n  '*': '*',\n  '==': '==',\n  '!=': '!=',\n  '>': '>',\n  '>=': '>=',\n  '<': '<',\n  '<=': '<=',\n  contains: 'Contains',\n  not_contains: 'Not Contains',\n};\n\nconst defaultSimpleDeviceTrigger: AstarteSimpleDeviceTrigger = {\n  type: 'device_trigger',\n  on: 'device_connected',\n};\n\nconst defaultSimpleDataTrigger: AstarteSimpleDataTrigger = {\n  type: 'data_trigger',\n  on: 'incoming_data',\n  interfaceName: '*',\n  matchPath: '/*',\n  valueMatchOperator: '*',\n};\n\ninterface SimpleTriggerFormProps {\n  fetchInterface: (params: {\n    interfaceName: string;\n    interfaceMajor: number;\n  }) => Promise<AstarteInterface | null>;\n  fetchInterfaceMajors: (interfaceName: string) => Promise<number[]>;\n  interfacesName: string[];\n  interfaceMajors: number[];\n  isLoadingInterface?: boolean;\n  isLoadingInterfacesName?: boolean;\n  isLoadingInterfaceMajors?: boolean;\n  isReadOnly?: boolean;\n  onChange: (simpleTrigger: AstarteSimpleTrigger) => void;\n  simpleTrigger: AstarteSimpleTrigger;\n  simpleTriggerInterface: AstarteInterface | null;\n  validationErrors?: { [key: string]: string };\n}\n\nconst SimpleTriggerForm = ({\n  fetchInterface,\n  fetchInterfaceMajors,\n  interfacesName = [],\n  interfaceMajors = [],\n  isLoadingInterface = false,\n  isLoadingInterfacesName = false,\n  isLoadingInterfaceMajors = false,\n  isReadOnly,\n  onChange,\n  simpleTrigger,\n  simpleTriggerInterface,\n  validationErrors = {},\n}: SimpleTriggerFormProps): React.ReactElement => {\n  const isDeviceTrigger = _.get(simpleTrigger, 'type') === 'device_trigger';\n  const isDataTrigger = _.get(simpleTrigger, 'type') === 'data_trigger';\n  const hasTargetDevice = _.get(simpleTrigger, 'deviceId') != null;\n  const hasTargetGroup = _.get(simpleTrigger, 'groupName') != null;\n  // eslint-disable-next-line no-nested-ternary\n  const triggerTargetType = hasTargetDevice ? 'device' : hasTargetGroup ? 'group' : 'all_devices';\n  const triggerInterfaceName: string | undefined = _.get(simpleTrigger, 'interfaceName');\n  const hasSelectedInterface = triggerInterfaceName != null && triggerInterfaceName !== '*';\n  const triggerValueMatchOperator:\n    | AstarteSimpleDataTrigger['valueMatchOperator']\n    | undefined = _.get(simpleTrigger, 'valueMatchOperator');\n  const hasSelectedOperator =\n    triggerValueMatchOperator != null && triggerValueMatchOperator !== '*';\n  const triggerMatchPath: AstarteSimpleDataTrigger['matchPath'] | undefined = _.get(\n    simpleTrigger,\n    'matchPath',\n  );\n  const triggerInterfaceType = useMemo(\n    () => (simpleTriggerInterface ? simpleTriggerInterface.type : null),\n    [simpleTriggerInterface],\n  );\n  const triggerInterfaceAggregation = useMemo(\n    () => (simpleTriggerInterface ? simpleTriggerInterface.aggregation : null),\n    [simpleTriggerInterface],\n  );\n  const triggerInterfacePathType = useMemo(() => {\n    if (!simpleTriggerInterface || !triggerMatchPath) {\n      return null;\n    }\n    const mapping = simpleTriggerInterface.mappings.find((m) =>\n      AstarteMapping.matchEndpoint(m.endpoint, triggerMatchPath),\n    );\n    return mapping ? mapping.type : null;\n  }, [simpleTriggerInterface, triggerMatchPath]);\n\n  const handleTriggerTypeChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.currentTarget;\n      const type = value as AstarteSimpleTrigger['type'];\n      onChange(type === 'data_trigger' ? defaultSimpleDataTrigger : defaultSimpleDeviceTrigger);\n    },\n    [onChange],\n  );\n\n  const handleTriggerConditionChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.currentTarget;\n      const on = value as AstarteSimpleTrigger['on'];\n      onChange({ ...simpleTrigger, on } as AstarteSimpleTrigger);\n    },\n    [simpleTrigger, onChange],\n  );\n\n  const handleTriggerTargetChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.currentTarget;\n      const target = value as 'all_devices' | 'device' | 'group';\n      if (target === 'device') {\n        onChange({ ...simpleTrigger, deviceId: '', groupName: undefined });\n      } else if (target === 'group') {\n        onChange({ ...simpleTrigger, deviceId: undefined, groupName: '' });\n      } else {\n        onChange({ ...simpleTrigger, deviceId: undefined, groupName: undefined });\n      }\n    },\n    [simpleTrigger, onChange],\n  );\n\n  const handleTriggerTargetDeviceChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      onChange({ ...simpleTrigger, deviceId: value });\n    },\n    [simpleTrigger, onChange],\n  );\n\n  const handleTriggerTargetGroupChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      onChange({ ...simpleTrigger, groupName: value });\n    },\n    [simpleTrigger, onChange],\n  );\n\n  const handleTriggerInterfaceNameChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const interfaceName = value;\n      const newSimpleTrigger = {\n        ...simpleTrigger,\n        interfaceName,\n        interfaceMajor: undefined,\n        matchPath: '/*',\n        valueMatchOperator: '*',\n        knownValue: undefined,\n      } as AstarteSimpleDataTrigger;\n      onChange(newSimpleTrigger);\n      if (interfaceName !== '*') {\n        fetchInterfaceMajors(interfaceName).then((majors) => {\n          if (majors.length > 0) {\n            const interfaceMajor = Math.max(...majors);\n            onChange({ ...newSimpleTrigger, interfaceMajor });\n            fetchInterface({ interfaceName, interfaceMajor });\n          }\n        });\n      }\n    },\n    [simpleTrigger, onChange, fetchInterfaceMajors, fetchInterface],\n  );\n\n  const handleTriggerInterfaceMajorChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const interfaceMajor = parseInt(value, 10);\n      onChange({\n        ...simpleTrigger,\n        interfaceMajor,\n        matchPath: '/*',\n        valueMatchOperator: '*',\n        knownValue: undefined,\n      } as AstarteSimpleDataTrigger);\n      const interfaceName = triggerInterfaceName as string;\n      fetchInterface({ interfaceName, interfaceMajor });\n    },\n    [simpleTrigger, onChange, fetchInterface, triggerInterfaceName],\n  );\n\n  const handleTriggerInterfacePathChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const matchPath = value;\n      onChange({\n        ...simpleTrigger,\n        matchPath,\n        valueMatchOperator: '*',\n        knownValue: undefined,\n      } as AstarteSimpleDataTrigger);\n    },\n    [simpleTrigger, onChange],\n  );\n\n  const handleTriggerInterfaceOperatorChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const valueMatchOperator = value as AstarteSimpleDataTrigger['valueMatchOperator'];\n      if (valueMatchOperator === '*') {\n        onChange({\n          ...simpleTrigger,\n          valueMatchOperator,\n          knownValue: undefined,\n        } as AstarteSimpleDataTrigger);\n      } else {\n        onChange({\n          ...simpleTrigger,\n          valueMatchOperator,\n        } as AstarteSimpleDataTrigger);\n      }\n    },\n    [simpleTrigger, onChange],\n  );\n\n  const handleTriggerInterfaceKnownValueChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      let knownValue: AstarteSimpleDataTrigger['knownValue'] = value;\n      if (!triggerInterfacePathType) {\n        knownValue = String(value);\n      } else if (['boolean', 'booleanarray'].includes(triggerInterfacePathType)) {\n        if (value.toLowerCase() === 'false') {\n          knownValue = false;\n        }\n        if (value.toLowerCase() === 'true') {\n          knownValue = true;\n        }\n      } else if (\n        ['integer', 'double', 'integerarray', 'doublearray'].includes(triggerInterfacePathType)\n      ) {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n          knownValue = parsedValue;\n        }\n      }\n      onChange({ ...simpleTrigger, knownValue } as AstarteSimpleDataTrigger);\n    },\n    [simpleTrigger, onChange, triggerInterfacePathType],\n  );\n\n  const renderTriggerConditionOptions = useCallback(() => {\n    let options: Array<keyof typeof triggerConditionToLabel> = [];\n    if (isDeviceTrigger) {\n      options = [\n        'device_connected',\n        'device_disconnected',\n        'device_error',\n        'device_empty_cache_received',\n      ];\n    } else if (triggerInterfaceType === 'properties') {\n      options = [\n        'incoming_data',\n        'value_change',\n        'value_change_applied',\n        'path_created',\n        'path_removed',\n        'value_stored',\n      ];\n    } else {\n      // TODO: this is a workaround to for the issue https://github.com/astarte-platform/astarte/issues/523\n      options =\n        triggerInterfaceAggregation === 'object'\n          ? ['incoming_data']\n          : ['incoming_data', 'value_stored'];\n    }\n    return options.map((option) => (\n      <option key={option} value={option}>\n        {triggerConditionToLabel[option]}\n      </option>\n    ));\n  }, [isDeviceTrigger, triggerInterfaceType]);\n\n  const renderInterfaceNameOptions = useCallback(() => {\n    const options = interfacesName.map((ifaceName) => (\n      <option key={ifaceName} value={ifaceName}>\n        {ifaceName}\n      </option>\n    ));\n    return [\n      <option key=\"*\" value=\"*\">\n        Any interface\n      </option>,\n      ...options,\n    ];\n  }, [interfacesName]);\n\n  const renderInterfaceMajorOptions = useCallback(() => {\n    const options = interfaceMajors.map((ifaceMajor) => (\n      <option key={ifaceMajor} value={ifaceMajor}>\n        {ifaceMajor}\n      </option>\n    ));\n    return options;\n  }, [interfaceMajors]);\n\n  const renderTriggerOperatorOptions = useCallback(() => {\n    let operators: Array<keyof typeof triggerOperatorToLabel> = [];\n    if (!triggerInterfacePathType) {\n      operators = ['*'];\n    } else {\n      const isArrayLikePath =\n        triggerInterfacePathType.includes('array') ||\n        triggerInterfacePathType.includes('string') ||\n        triggerInterfacePathType.includes('binaryblob');\n      operators = isArrayLikePath\n        ? ['*', '==', '!=', '>', '>=', '<', '<=', 'contains', 'not_contains']\n        : ['*', '==', '!=', '>', '>=', '<', '<='];\n    }\n    const options = operators.map((operator) => (\n      <option key={operator} value={operator}>\n        {triggerOperatorToLabel[operator]}\n      </option>\n    ));\n    return options;\n  }, [triggerInterfacePathType]);\n\n  return (\n    <Form>\n      <Form.Row className=\"mb-2\">\n        <Col sm={12}>\n          <Form.Group controlId=\"triggerSimpleTriggerType\">\n            <Form.Label>Trigger type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name=\"triggerSimpleTriggerType\"\n              disabled={isReadOnly}\n              value={_.get(simpleTrigger, 'type')}\n              onChange={handleTriggerTypeChange}\n              isInvalid={_.get(validationErrors, 'type') != null}\n            >\n              <option value=\"device_trigger\">Device Trigger</option>\n              <option value=\"data_trigger\">Data Trigger</option>\n            </Form.Control>\n            <Form.Control.Feedback type=\"invalid\">\n              {_.get(validationErrors, 'type')}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Col>\n      </Form.Row>\n      <Form.Row className=\"mb-2\">\n        <Col sm={hasTargetDevice || hasTargetGroup ? 4 : 12}>\n          <Form.Group controlId=\"triggerTargetSelect\">\n            <Form.Label>Target</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name=\"triggerTargetSelect\"\n              disabled={isReadOnly}\n              value={triggerTargetType}\n              onChange={handleTriggerTargetChange}\n            >\n              <option value=\"all_devices\">All devices</option>\n              <option value=\"device\">Device</option>\n              <option value=\"group\">Group</option>\n            </Form.Control>\n          </Form.Group>\n        </Col>\n        {hasTargetDevice && (\n          <Col sm={8}>\n            <Form.Group controlId=\"triggerDeviceId\">\n              <Form.Label>Device id</Form.Label>\n              <Form.Control\n                type=\"text\"\n                autoComplete=\"off\"\n                required\n                readOnly={isReadOnly}\n                value={_.get(simpleTrigger, 'deviceId') || ''}\n                onChange={handleTriggerTargetDeviceChange}\n                isInvalid={_.get(validationErrors, 'deviceId') != null}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {_.get(validationErrors, 'deviceId')}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n        )}\n        {hasTargetGroup && (\n          <Col sm={8}>\n            <Form.Group controlId=\"triggerGroupName\">\n              <Form.Label>Group Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                autoComplete=\"off\"\n                required\n                readOnly={isReadOnly}\n                value={_.get(simpleTrigger, 'groupName') || ''}\n                onChange={handleTriggerTargetGroupChange}\n                isInvalid={_.get(validationErrors, 'groupName') != null}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {_.get(validationErrors, 'groupName')}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n        )}\n      </Form.Row>\n      <Form.Row className=\"mb-2\">\n        <Col sm={12}>\n          <Form.Group controlId=\"triggerCondition\">\n            <Form.Label>Trigger condition</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name=\"triggerCondition\"\n              disabled={isReadOnly || isLoadingInterface}\n              value={_.get(simpleTrigger, 'on')}\n              onChange={handleTriggerConditionChange}\n              isInvalid={_.get(validationErrors, 'on') != null}\n            >\n              {renderTriggerConditionOptions()}\n            </Form.Control>\n            <Form.Control.Feedback type=\"invalid\">\n              {_.get(validationErrors, 'on')}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Col>\n      </Form.Row>\n      {isDataTrigger && (\n        <>\n          <Form.Row className=\"mb-2\">\n            <Col sm={hasSelectedInterface ? 8 : 12}>\n              <Form.Group controlId=\"triggerInterfaceName\">\n                <Form.Label>Interface name</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"triggerInterfaceName\"\n                  disabled={isReadOnly || isLoadingInterfacesName}\n                  value={triggerInterfaceName || '*'}\n                  onChange={handleTriggerInterfaceNameChange}\n                  isInvalid={_.get(validationErrors, 'interfaceName') != null}\n                >\n                  {renderInterfaceNameOptions()}\n                </Form.Control>\n                <Form.Control.Feedback type=\"invalid\">\n                  {_.get(validationErrors, 'interfaceName')}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n            {hasSelectedInterface && (\n              <Col sm={4}>\n                <Form.Group controlId=\"triggerInterfaceMajor\">\n                  <Form.Label>Interface major</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"triggerInterfaceMajor\"\n                    disabled={isReadOnly || isLoadingInterfaceMajors || isLoadingInterface}\n                    value={_.get(simpleTrigger, 'interfaceMajor') || 0}\n                    onChange={handleTriggerInterfaceMajorChange}\n                    isInvalid={_.get(validationErrors, 'interfaceMajor') != null}\n                  >\n                    {renderInterfaceMajorOptions()}\n                  </Form.Control>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {_.get(validationErrors, 'interfaceMajor')}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            )}\n          </Form.Row>\n          {hasSelectedInterface && (\n            <>\n              <Form.Row className=\"mb-2\">\n                <Col sm={12}>\n                  <Form.Group controlId=\"triggerPath\">\n                    <Form.Label>Path</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      autoComplete=\"off\"\n                      required\n                      readOnly={isReadOnly || isLoadingInterfaceMajors || isLoadingInterface}\n                      value={_.get(simpleTrigger, 'matchPath') || ''}\n                      isInvalid={_.get(validationErrors, 'matchPath') != null}\n                      onChange={handleTriggerInterfacePathChange}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {_.get(validationErrors, 'matchPath')}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n              <Form.Row className=\"mb-2\">\n                <Col sm={4}>\n                  <Form.Group controlId=\"triggerOperator\">\n                    <Form.Label>Operator</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      name=\"triggerOperator\"\n                      disabled={isReadOnly || isLoadingInterfaceMajors || isLoadingInterface}\n                      value={triggerValueMatchOperator || '*'}\n                      onChange={handleTriggerInterfaceOperatorChange}\n                      isInvalid={_.get(validationErrors, 'valueMatchOperator') != null}\n                    >\n                      {renderTriggerOperatorOptions()}\n                    </Form.Control>\n                    <Form.Control.Feedback type=\"invalid\">\n                      {_.get(validationErrors, 'valueMatchOperator')}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n                {hasSelectedOperator && (\n                  <Col sm={8}>\n                    <Form.Group controlId=\"triggerKnownValue\">\n                      <Form.Label>Value</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        required\n                        readOnly={isReadOnly || isLoadingInterfaceMajors || isLoadingInterface}\n                        value={String(_.get(simpleTrigger, 'knownValue') ?? '')}\n                        onChange={handleTriggerInterfaceKnownValueChange}\n                        isInvalid={_.get(validationErrors, 'knownValue') != null}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {_.get(validationErrors, 'knownValue')}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                )}\n              </Form.Row>\n            </>\n          )}\n        </>\n      )}\n    </Form>\n  );\n};\n\nexport default SimpleTriggerForm;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback } from 'react';\nimport { Button, Col, Form, InputGroup, Table } from 'react-bootstrap';\nimport { AstarteTrigger, AstarteTriggerHTTPAction, AstarteTriggerAMQPAction } from 'astarte-client';\nimport _ from 'lodash';\n\nimport Icon from '../Icon';\n\nconst defaultTriggerHttpAction: AstarteTriggerHTTPAction = {\n  httpUrl: '',\n  httpMethod: 'post',\n};\n\nconst defaultTriggerAmqpAction: AstarteTriggerAMQPAction = {\n  amqpExchange: '',\n  amqpMessageExpirationMilliseconds: 0,\n  amqpMessagePersistent: false,\n};\n\ninterface TriggerActionFormProps {\n  action: AstarteTrigger['action'];\n  isReadOnly?: boolean;\n  onAddAmqpHeader: () => void;\n  onAddHttpHeader: () => void;\n  onEditAmqpHeader: (header: string) => void;\n  onEditHttpHeader: (header: string) => void;\n  onRemoveAmqpHeader: (header: string) => void;\n  onRemoveHttpHeader: (header: string) => void;\n  onChange: (action: AstarteTrigger['action']) => void;\n  realm?: string | null;\n  validationErrors?: { [key: string]: string };\n}\n\nconst TriggerActionForm = ({\n  action,\n  isReadOnly,\n  onAddAmqpHeader,\n  onAddHttpHeader,\n  onEditAmqpHeader,\n  onEditHttpHeader,\n  onRemoveAmqpHeader,\n  onRemoveHttpHeader,\n  onChange,\n  realm,\n  validationErrors = {},\n}: TriggerActionFormProps): React.ReactElement => {\n  const isHttpAction = _.get(action, 'httpUrl') != null;\n  const isAmqpAction = _.get(action, 'amqpExchange') != null;\n  const triggerPayloadType = _.get(action, 'templateType') || 'default';\n  const triggerHttpHeaders = _.get(action, 'httpStaticHeaders') || {};\n  const triggerAmqpHeaders = _.get(action, 'amqpStaticHeaders') || {};\n\n  const handleTriggerActionTypeChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const actionType = value as 'amqp' | 'http';\n      onChange(actionType === 'http' ? defaultTriggerHttpAction : defaultTriggerAmqpAction);\n    },\n    [onChange],\n  );\n\n  const handleTriggerActionHttpMethodChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const httpMethod = value as AstarteTriggerHTTPAction['httpMethod'];\n      onChange({ ...action, httpMethod });\n    },\n    [action, onChange],\n  );\n\n  const handleTriggerActionHttpUrlChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const httpUrl = value as AstarteTriggerHTTPAction['httpUrl'];\n      onChange({ ...action, httpUrl });\n    },\n    [action, onChange],\n  );\n\n  const handleTriggerActionHttpIgnoreSSLErrorsChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { checked } = e.target;\n      const ignoreSslErrors = !!checked as AstarteTriggerHTTPAction['ignoreSslErrors'];\n      onChange({ ...action, ignoreSslErrors });\n    },\n    [action, onChange],\n  );\n\n  const handleTriggerActionHttpPayloadTypeChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const payloadType = value as 'default' | 'mustache';\n      if (payloadType === 'mustache') {\n        onChange({ ...action, templateType: 'mustache', template: '' });\n      } else {\n        onChange({ ...action, templateType: undefined, template: undefined });\n      }\n    },\n    [action, onChange],\n  );\n\n  const handleTriggerActionHttpPayloadChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const template = value;\n      onChange({ ...action, template });\n    },\n    [action, onChange],\n  );\n\n  const handleTriggerActionAmqpExchangeChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const amqpExchange = value as AstarteTriggerAMQPAction['amqpExchange'];\n      onChange({ ...action, amqpExchange });\n    },\n    [action, onChange],\n  );\n\n  const handleTriggerActionAmqpRoutingKeyChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const amqpRoutingKey = value as AstarteTriggerAMQPAction['amqpRoutingKey'];\n      onChange({ ...action, amqpRoutingKey });\n    },\n    [action, onChange],\n  );\n\n  const handleTriggerActionAmqpMessagePersistentChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { checked } = e.target;\n      const amqpMessagePersistent = !!checked;\n      onChange({ ...action, amqpMessagePersistent });\n    },\n    [action, onChange],\n  );\n\n  const handleTriggerActionAmqpMessagePriorityChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const amqpMessagePriority = Number(value) as AstarteTriggerAMQPAction['amqpMessagePriority'];\n      if (amqpMessagePriority === 0) {\n        onChange({ ...action, amqpMessagePriority: undefined });\n      } else {\n        onChange({ ...action, amqpMessagePriority });\n      }\n    },\n    [action, onChange],\n  );\n\n  const handleTriggerActionAmqpMessageExpirationMillisecondsChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const amqpMessageExpirationMilliseconds = Number(\n        value,\n      ) as AstarteTriggerAMQPAction['amqpMessageExpirationMilliseconds'];\n      onChange({ ...action, amqpMessageExpirationMilliseconds });\n    },\n    [action, onChange],\n  );\n\n  return (\n    <Form>\n      <Form.Row className=\"mb-2\">\n        <Col sm={12}>\n          <Form.Group controlId=\"triggerActionType\">\n            <Form.Label>Action type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name=\"triggerActionType\"\n              disabled={isReadOnly}\n              value={isAmqpAction ? 'amqp' : 'http'}\n              onChange={handleTriggerActionTypeChange}\n            >\n              <option value=\"http\">HTTP request</option>\n              <option value=\"amqp\">AMQP Message</option>\n            </Form.Control>\n          </Form.Group>\n        </Col>\n      </Form.Row>\n      {isHttpAction && (\n        <>\n          <Form.Row className=\"mb-2\">\n            <Col sm={4}>\n              <Form.Group controlId=\"triggerMethod\">\n                <Form.Label>Method</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"triggerMethod\"\n                  disabled={isReadOnly}\n                  value={_.get(action, 'httpMethod') || 'post'}\n                  onChange={handleTriggerActionHttpMethodChange}\n                  isInvalid={_.get(validationErrors, 'httpMethod') != null}\n                >\n                  {['delete', 'get', 'head', 'options', 'patch', 'post', 'put'].map((method) => (\n                    <option key={method} value={method}>\n                      {method.toUpperCase()}\n                    </option>\n                  ))}\n                </Form.Control>\n                <Form.Control.Feedback type=\"invalid\">\n                  {_.get(validationErrors, 'httpMethod')}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n            <Col sm={8}>\n              <Form.Group controlId=\"triggerUrl\">\n                <Form.Label>URL</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  required\n                  readOnly={isReadOnly}\n                  value={_.get(action, 'httpUrl') || ''}\n                  onChange={handleTriggerActionHttpUrlChange}\n                  isInvalid={_.get(validationErrors, 'httpUrl') != null}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {_.get(validationErrors, 'httpUrl')}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Row className=\"mb-2\">\n            <Col sm={12}>\n              <Form.Group controlId=\"actionIgnoreSSLErrors\">\n                <Form.Check\n                  type=\"checkbox\"\n                  name=\"actionIgnoreSSLErrors\"\n                  label=\"Ignore SSL errors\"\n                  disabled={isReadOnly}\n                  checked={_.get(action, 'ignoreSslErrors') || false}\n                  onChange={handleTriggerActionHttpIgnoreSSLErrorsChange}\n                  isInvalid={_.get(validationErrors, 'ignoreSslErrors') != null}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {_.get(validationErrors, 'ignoreSslErrors')}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Row className=\"mb-2\">\n            <Col sm={12}>\n              <Form.Group controlId=\"triggerTemplateType\">\n                <Form.Label>Payload type</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"triggerTemplateType\"\n                  disabled={isReadOnly}\n                  value={triggerPayloadType}\n                  onChange={handleTriggerActionHttpPayloadTypeChange}\n                >\n                  <option value=\"default\">Use default event format (JSON)</option>\n                  <option value=\"mustache\">Mustache</option>\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          {triggerPayloadType === 'mustache' && (\n            <Form.Row className=\"mb-2\">\n              <Col sm={12}>\n                <Form.Group controlId=\"actionPayload\">\n                  <Form.Label>Payload</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    autoComplete=\"off\"\n                    rows={3}\n                    required\n                    readOnly={isReadOnly}\n                    value={_.get(action, 'template') || ''}\n                    onChange={handleTriggerActionHttpPayloadChange}\n                    isInvalid={_.get(validationErrors, 'template') != null}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {_.get(validationErrors, 'template')}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Form.Row>\n          )}\n          <Form.Row className=\"mb-2\">\n            <Col sm={12}>\n              <Form.Group controlId=\"actionHttpHeaders\">\n                {!isReadOnly && (\n                  <Button variant=\"link\" className=\"p-0\" onClick={() => onAddHttpHeader()}>\n                    <Icon icon=\"add\" className=\"mr-2\" />\n                    Add custom HTTP headers\n                  </Button>\n                )}\n                {!_.isEmpty(triggerHttpHeaders) && (\n                  <Table responsive>\n                    <thead>\n                      <tr>\n                        <th>Header</th>\n                        <th>Value</th>\n                        {!isReadOnly && <th className=\"action-column\">Actions</th>}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {Object.entries(triggerHttpHeaders).map(([headerName, headerValue]) => (\n                        <tr key={headerName}>\n                          <td>{headerName}</td>\n                          <td>{headerValue as string}</td>\n                          {!isReadOnly && (\n                            <td className=\"text-center\">\n                              <Icon\n                                icon=\"edit\"\n                                onClick={() => onEditHttpHeader(headerName)}\n                                className=\"color-grey mr-2\"\n                              />\n                              <Icon icon=\"erase\" onClick={() => onRemoveHttpHeader(headerName)} />\n                            </td>\n                          )}\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                )}\n                <Form.Control\n                  className=\"d-none\"\n                  isInvalid={_.get(validationErrors, 'httpStaticHeaders') != null}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {_.get(validationErrors, 'httpStaticHeaders')}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n        </>\n      )}\n      {isAmqpAction && (\n        <>\n          <Form.Row className=\"mb-2\">\n            <Col sm={12}>\n              <Form.Group controlId=\"amqpExchange\">\n                <Form.Label>Exchange</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  placeholder={`astarte_events_${realm || '<realm-name>'}_<exchange-name>`}\n                  required\n                  readOnly={isReadOnly}\n                  value={_.get(action, 'amqpExchange') || ''}\n                  onChange={handleTriggerActionAmqpExchangeChange}\n                  isInvalid={_.get(validationErrors, 'amqpExchange') != null}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {_.get(validationErrors, 'amqpExchange')}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Row className=\"mb-2\">\n            <Col sm={12}>\n              <Form.Group controlId=\"amqpRoutingKey\">\n                <Form.Label>Routing key</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  required\n                  readOnly={isReadOnly}\n                  value={_.get(action, 'amqpRoutingKey') || ''}\n                  onChange={handleTriggerActionAmqpRoutingKeyChange}\n                  isInvalid={_.get(validationErrors, 'amqpRoutingKey') != null}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {_.get(validationErrors, 'amqpRoutingKey')}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Row className=\"mb-2\">\n            <Col sm={12}>\n              <Form.Group controlId=\"amqpPersistency\">\n                <Form.Label>Persistency</Form.Label>\n                <Form.Check\n                  type=\"checkbox\"\n                  name=\"amqpPersistency\"\n                  label=\"Publish persistent messages\"\n                  disabled={isReadOnly}\n                  checked={_.get(action, 'amqpMessagePersistent') || false}\n                  onChange={handleTriggerActionAmqpMessagePersistentChange}\n                  isInvalid={_.get(validationErrors, 'amqpMessagePersistent') != null}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {_.get(validationErrors, 'amqpMessagePersistent')}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Row className=\"mb-2\">\n            <Col sm={12}>\n              <Form.Group controlId=\"amqpPriority\">\n                <Form.Label>Priority</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  min={0}\n                  max={9}\n                  required\n                  readOnly={isReadOnly}\n                  value={_.get(action, 'amqpMessagePriority') || 0}\n                  onChange={handleTriggerActionAmqpMessagePriorityChange}\n                  isInvalid={_.get(validationErrors, 'amqpMessagePriority') != null}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {_.get(validationErrors, 'amqpMessagePriority')}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Row className=\"mb-2\">\n            <Col sm={12}>\n              <Form.Group controlId=\"amqpExpiration\">\n                <Form.Label>Expiration</Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    min={1}\n                    required\n                    readOnly={isReadOnly}\n                    value={_.get(action, 'amqpMessageExpirationMilliseconds') || 0}\n                    onChange={handleTriggerActionAmqpMessageExpirationMillisecondsChange}\n                    isInvalid={_.get(validationErrors, 'amqpMessageExpirationMilliseconds') != null}\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text>milliseconds</InputGroup.Text>\n                  </InputGroup.Append>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {_.get(validationErrors, 'amqpMessageExpirationMilliseconds')}\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Row className=\"mb-2\">\n            <Col sm={12}>\n              <Form.Group controlId=\"actionAmqpHeaders\">\n                {!isReadOnly && (\n                  <Button variant=\"link\" className=\"p-0\" onClick={() => onAddAmqpHeader()}>\n                    <Icon icon=\"add\" className=\"mr-2\" />\n                    Add static AMQP headers\n                  </Button>\n                )}\n                {!_.isEmpty(triggerAmqpHeaders) && (\n                  <Table responsive>\n                    <thead>\n                      <tr>\n                        <th>Header</th>\n                        <th>Value</th>\n                        {!isReadOnly && <th className=\"action-column\">Actions</th>}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {Object.entries(triggerAmqpHeaders).map(([headerName, headerValue]) => (\n                        <tr key={headerName}>\n                          <td>{headerName}</td>\n                          <td>{headerValue as string}</td>\n                          {!isReadOnly && (\n                            <td className=\"text-center\">\n                              <Icon\n                                icon=\"edit\"\n                                onClick={() => onEditAmqpHeader(headerName)}\n                                className=\"color-grey mr-2\"\n                              />\n                              <Icon icon=\"erase\" onClick={() => onRemoveAmqpHeader(headerName)} />\n                            </td>\n                          )}\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                )}\n                <Form.Control\n                  className=\"d-none\"\n                  isInvalid={_.get(validationErrors, 'amqpStaticHeaders') != null}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {_.get(validationErrors, 'amqpStaticHeaders')}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n        </>\n      )}\n    </Form>\n  );\n};\n\nexport default TriggerActionForm;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useState } from 'react';\nimport { Button, Form, Modal, Spinner } from 'react-bootstrap';\nimport type { ModalProps } from 'react-bootstrap';\nimport metaSchemaDraft04 from 'ajv/lib/refs/json-schema-draft-04.json';\nimport JsonSchemaForm from '@rjsf/bootstrap-4';\nimport type { WidgetProps } from '@rjsf/core';\nimport type { ComponentProps } from 'react';\n\nconst additionalMetaSchemas = [metaSchemaDraft04];\n\nexport interface TextWidgetProps extends WidgetProps {\n  type?: string;\n}\n\nconst TextWidget = ({\n  id,\n  required,\n  readonly,\n  disabled,\n  placeholder,\n  type,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  schema,\n  rawErrors = [],\n}: TextWidgetProps) => {\n  const handleChange = ({ target: { value: v } }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(v === '' ? options.emptyValue : v);\n  const handleBlur = ({ target: { value: v } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, v);\n  const handleFocus = ({ target: { value: v } }: React.FocusEvent<HTMLInputElement>) =>\n    onFocus(id, v);\n\n  return (\n    <Form.Group className=\"mb-0\">\n      <Form.Label className={rawErrors.length > 0 ? 'text-danger' : ''}>\n        {label || schema.title}\n      </Form.Label>\n      <Form.Control\n        id={id}\n        autoFocus={autofocus}\n        required={required}\n        disabled={disabled}\n        readOnly={readonly}\n        placeholder={placeholder}\n        className={rawErrors.length > 0 ? 'is-invalid' : ''}\n        list={schema.examples ? `examples_${id}` : undefined}\n        type={type || (schema.type as string)}\n        value={value || value === 0 ? value : ''}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onFocus={handleFocus}\n      />\n      {schema.examples ? (\n        <datalist id={`examples_${id}`}>\n          {(schema.examples as string[])\n            .concat(schema.default ? ([schema.default] as string[]) : [])\n            .map((example: any) => (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <option key={example} value={example} />\n            ))}\n        </datalist>\n      ) : null}\n    </Form.Group>\n  );\n};\n\n// Delete custom widgets when this is issue is solved and 'placeholder' is supported\n// https://github.com/rjsf-team/react-jsonschema-form/issues/1998\nconst widgets = {\n  TextWidget,\n};\n\ntype JsonSchemaFormProps = ComponentProps<typeof JsonSchemaForm>;\n\ntype BoostrapVariant =\n  | 'primary'\n  | 'secondary'\n  | 'success'\n  | 'warning'\n  | 'danger'\n  | 'info'\n  | 'light'\n  | 'dark'\n  | 'link';\n\ninterface Props {\n  cancelLabel?: string;\n  confirmLabel?: string;\n  confirmVariant?: BoostrapVariant;\n  initialData?: JsonSchemaFormProps['formData'];\n  isConfirming?: boolean;\n  liveValidate?: boolean;\n  onCancel: () => void;\n  onConfirm: (formData: any) => void;\n  schema: JsonSchemaFormProps['schema'];\n  size?: ModalProps['size'];\n  title: React.ReactNode;\n  transformErrors?: JsonSchemaFormProps['transformErrors'];\n  uiSchema?: JsonSchemaFormProps['uiSchema'];\n}\n\nconst FormModal = ({\n  cancelLabel = 'Cancel',\n  confirmLabel = 'Confirm',\n  confirmVariant = 'primary',\n  initialData,\n  isConfirming = false,\n  liveValidate = false,\n  onCancel,\n  onConfirm,\n  schema,\n  size = 'lg',\n  title,\n  transformErrors,\n  uiSchema,\n}: Props): React.ReactElement => {\n  const [formData, setFormData] = React.useState(initialData || null);\n  const [hasSubmit, setHasSubmit] = useState(false);\n\n  return (\n    <Modal show centered size={size} onHide={onCancel}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div>\n          <JsonSchemaForm\n            schema={schema}\n            additionalMetaSchemas={additionalMetaSchemas}\n            uiSchema={uiSchema}\n            widgets={widgets}\n            formData={formData}\n            liveValidate={liveValidate || hasSubmit}\n            onChange={(event) => {\n              setFormData(event.formData);\n            }}\n            onSubmit={(event) => onConfirm(event.formData)}\n            showErrorList={false}\n            transformErrors={transformErrors}\n          >\n            <hr style={{ display: 'block', marginLeft: '-1em', marginRight: '-1em' }} />\n            <div className=\"d-flex justify-content-end\">\n              <Button variant=\"secondary mr-2\" onClick={onCancel} style={{ minWidth: '5em' }}>\n                {cancelLabel}\n              </Button>\n              <Button\n                type=\"submit\"\n                variant={confirmVariant}\n                disabled={isConfirming}\n                onClick={() => setHasSubmit(true)}\n                style={{ minWidth: '5em' }}\n              >\n                {isConfirming && (\n                  <Spinner className=\"mr-2\" size=\"sm\" animation=\"border\" role=\"status\" />\n                )}\n                {confirmLabel}\n              </Button>\n            </div>\n          </JsonSchemaForm>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default FormModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport type { JSONSchema7 } from 'json-schema';\n\nimport FormModal from '../modals/Form';\n\nconst newAmqpHeaderFormSchema: JSONSchema7 = {\n  type: 'object',\n  required: ['key'],\n  properties: {\n    key: {\n      title: 'Header',\n      type: 'string',\n    },\n    value: {\n      title: 'Value',\n      type: 'string',\n    },\n  },\n};\n\ninterface NewAmqpHeaderModalProps {\n  onCancel: () => void;\n  onConfirm: (formData: { key: string; value?: string }) => void;\n}\n\nconst NewAmqpHeaderModal = ({\n  onCancel,\n  onConfirm,\n}: NewAmqpHeaderModalProps): React.ReactElement => (\n  <FormModal\n    title=\"Add Custom AMQP Header\"\n    schema={newAmqpHeaderFormSchema}\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n  />\n);\n\nexport default NewAmqpHeaderModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport type { JSONSchema7 } from 'json-schema';\n\nimport FormModal from '../modals/Form';\n\nconst newHttpHeaderFormSchema: JSONSchema7 = {\n  type: 'object',\n  required: ['key'],\n  properties: {\n    key: {\n      title: 'Header',\n      type: 'string',\n    },\n    value: {\n      title: 'Value',\n      type: 'string',\n    },\n  },\n};\n\ninterface NewHttpHeaderModalProps {\n  onCancel: () => void;\n  onConfirm: (formData: { key: string; value?: string }) => void;\n}\n\nconst NewHttpHeaderModal = ({\n  onCancel,\n  onConfirm,\n}: NewHttpHeaderModalProps): React.ReactElement => (\n  <FormModal\n    title=\"Add Custom HTTP Header\"\n    schema={newHttpHeaderFormSchema}\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n  />\n);\n\nexport default NewHttpHeaderModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport type { JSONSchema7 } from 'json-schema';\n\nimport FormModal from '../modals/Form';\n\nconst editAmqpHeaderFormSchema: JSONSchema7 = {\n  type: 'object',\n  properties: {\n    value: {\n      title: 'Value',\n      type: 'string',\n    },\n  },\n};\n\ninterface EditAmqpHeaderModalProps {\n  targetHeader: string;\n  onCancel: () => void;\n  onConfirm: (formData: { value?: string }) => void;\n}\n\nconst EditAmqpHeaderModal = ({\n  targetHeader,\n  onCancel,\n  onConfirm,\n}: EditAmqpHeaderModalProps): React.ReactElement => (\n  <FormModal\n    title={`Edit Value for Header \"${targetHeader}\"`}\n    schema={editAmqpHeaderFormSchema}\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n  />\n);\n\nexport default EditAmqpHeaderModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport type { JSONSchema7 } from 'json-schema';\n\nimport FormModal from '../modals/Form';\n\nconst editHttpHeaderFormSchema: JSONSchema7 = {\n  type: 'object',\n  properties: {\n    value: {\n      title: 'Value',\n      type: 'string',\n    },\n  },\n};\n\ninterface EditHttpHeaderModalProps {\n  targetHeader: string;\n  onCancel: () => void;\n  onConfirm: (formData: { value?: string }) => void;\n}\n\nconst EditHttpHeaderModal = ({\n  targetHeader,\n  onCancel,\n  onConfirm,\n}: EditHttpHeaderModalProps): React.ReactElement => (\n  <FormModal\n    title={`Edit Value for Header \"${targetHeader}\"`}\n    schema={editHttpHeaderFormSchema}\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n  />\n);\n\nexport default EditHttpHeaderModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\n\nimport ConfirmModal from '../modals/Confirm';\n\ninterface RemoveAmqpHeaderModalProps {\n  targetHeader: string;\n  onCancel: () => void;\n  onConfirm: () => void;\n}\n\nconst RemoveAmqpHeaderModal = ({\n  targetHeader,\n  onCancel,\n  onConfirm,\n}: RemoveAmqpHeaderModalProps): React.ReactElement => (\n  <ConfirmModal\n    title=\"Remove Header\"\n    confirmLabel=\"Remove header\"\n    confirmVariant=\"danger\"\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n  >\n    <p>Remove static header &quot;{targetHeader}&quot;?</p>\n  </ConfirmModal>\n);\n\nexport default RemoveAmqpHeaderModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\n\nimport ConfirmModal from '../modals/Confirm';\n\ninterface RemoveHttpHeaderModalProps {\n  targetHeader: string;\n  onCancel: () => void;\n  onConfirm: () => void;\n}\n\nconst RemoveHttpHeaderModal = ({\n  targetHeader,\n  onCancel,\n  onConfirm,\n}: RemoveHttpHeaderModalProps): React.ReactElement => (\n  <ConfirmModal\n    title=\"Remove Header\"\n    confirmLabel=\"Remove header\"\n    confirmVariant=\"danger\"\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n  >\n    <p>Remove custom header &quot;{targetHeader}&quot;?</p>\n  </ConfirmModal>\n);\n\nexport default RemoveHttpHeaderModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Col, Container, Form, Row } from 'react-bootstrap';\nimport { AstarteInterface, AstarteTrigger, AstarteSimpleTrigger } from 'astarte-client';\nimport _ from 'lodash';\n\nimport SimpleTriggerForm from './SimpleTriggerForm';\nimport TriggerActionForm from './TriggerActionForm';\nimport NewAmqpHeaderModal from './NewAmqpHeaderModal';\nimport NewHttpHeaderModal from './NewHttpHeaderModal';\nimport EditAmqpHeaderModal from './EditAmqpHeaderModal';\nimport EditHttpHeaderModal from './EditHttpHeaderModal';\nimport RemoveAmqpHeaderModal from './RemoveAmqpHeaderModal';\nimport RemoveHttpHeaderModal from './RemoveHttpHeaderModal';\n\nconst defaultTrigger: AstarteTrigger = {\n  name: '',\n  action: {\n    httpUrl: '',\n    httpMethod: 'post',\n  },\n  simpleTriggers: [\n    {\n      type: 'data_trigger',\n      on: 'incoming_data',\n      interfaceName: '*',\n      matchPath: '/*',\n      valueMatchOperator: '*',\n    },\n  ],\n};\n\nconst formatJSON = (json: unknown): string => JSON.stringify(json, null, 4);\n\nconst formatJSONText = (text: string): string => {\n  try {\n    return formatJSON(JSON.parse(text));\n  } catch {\n    return text;\n  }\n};\n\nconst getNestedValidationErrors = (errors: { [key: string]: string }, prefix: string) =>\n  _.mapKeys(\n    _.pickBy(errors, (errorValue, errorName) => errorName.startsWith(prefix)),\n    (errorValue, errorName) => errorName.slice(prefix.length + 1),\n  );\n\ntype ActiveModal =\n  | { modal: 'new-amqp-header' }\n  | { modal: 'new-http-header' }\n  | { modal: 'edit-amqp-header'; header: string }\n  | { modal: 'edit-http-header'; header: string }\n  | { modal: 'remove-amqp-header'; header: string }\n  | { modal: 'remove-http-header'; header: string };\n\ninterface Props {\n  fetchInterfacesName: () => Promise<string[]>;\n  fetchInterfaceMajors: (interfaceName: string) => Promise<number[]>;\n  fetchInterface: (params: {\n    interfaceName: string;\n    interfaceMajor: number;\n  }) => Promise<AstarteInterface>;\n  initialData?: AstarteTrigger;\n  isReadOnly?: boolean;\n  isSourceVisible?: boolean;\n  onChange?: (updatedTrigger: AstarteTrigger, isValid: boolean) => unknown;\n  onError?: (message: string, error: Error) => void;\n  realm?: string | null;\n}\n\nexport default ({\n  fetchInterfacesName,\n  fetchInterfaceMajors,\n  fetchInterface,\n  initialData,\n  isReadOnly = false,\n  isSourceVisible = false,\n  onChange,\n  onError,\n  realm,\n}: Props): React.ReactElement => {\n  const [triggerDraft, setTriggerDraft] = useState<AstarteTrigger>(initialData || defaultTrigger);\n  const [triggerSource, setTriggerSource] = useState(\n    formatJSON(AstarteTrigger.toJSON(triggerDraft)),\n  );\n  const [triggerValidationErrors, setTriggerValidationErrors] = useState<{ [key: string]: string }>(\n    {},\n  );\n  const [triggerSourceError, setTriggerSourceError] = useState('');\n  const [interfacesName, setInterfacesName] = useState<string[]>([]);\n  const [interfaceMajors, setInterfaceMajors] = useState<number[]>([]);\n  const [triggerInterface, setTriggerInterface] = useState<AstarteInterface | null>(null);\n  const [isLoadingInterfacesName, setIsLoadingInterfacesName] = useState(false);\n  const [isLoadingInterfaceMajors, setIsLoadingInterfaceMajors] = useState(false);\n  const [isLoadingInterface, setIsLoadingInterface] = useState(false);\n  const [activeModal, setActiveModal] = useState<ActiveModal | null>(null);\n\n  const actionValidationErrors = useMemo(\n    () => getNestedValidationErrors(triggerValidationErrors, 'action'),\n    [triggerValidationErrors],\n  );\n  const simpleTriggerValidationErrors = useMemo(\n    () => getNestedValidationErrors(triggerValidationErrors, 'simpleTriggers[0]'),\n    [triggerValidationErrors],\n  );\n\n  const handleFetchInterfacesName = useCallback(async () => {\n    setIsLoadingInterfacesName(true);\n    let names: string[] = [];\n    try {\n      names = await fetchInterfacesName();\n    } catch (err) {\n      if (onError) {\n        onError(`Could not retrieve major versions for interface: ${err.message}`, err);\n      }\n    }\n    setInterfacesName(names);\n    setIsLoadingInterfacesName(false);\n    return names;\n  }, [fetchInterfacesName, onError]);\n\n  const handleFetchInterfaceMajors = useCallback(\n    async (interfaceName: string) => {\n      setIsLoadingInterfaceMajors(true);\n      let majors: number[] = [];\n      try {\n        majors = await fetchInterfaceMajors(interfaceName);\n      } catch (err) {\n        if (onError) {\n          onError(\n            `Could not retrieve major versions for ${interfaceName} interface: ${err.message}`,\n            err,\n          );\n        }\n      }\n      setInterfaceMajors(majors);\n      setIsLoadingInterfaceMajors(false);\n      return majors;\n    },\n    [fetchInterfaceMajors, onError],\n  );\n\n  const handleFetchInterface = useCallback(\n    async (params: { interfaceName: string; interfaceMajor: number }) => {\n      setIsLoadingInterface(true);\n      let iface: AstarteInterface | null = null;\n      try {\n        iface = await fetchInterface(params);\n      } catch (err) {\n        if (onError) {\n          onError(\n            `Could not retrieve selected interface ${params.interfaceName} v${params.interfaceMajor}: ${err.message}`,\n            err,\n          );\n        }\n      }\n      setTriggerInterface(iface);\n      setIsLoadingInterface(false);\n      return iface;\n    },\n    [fetchInterface, onError],\n  );\n\n  const handleFetchInterfacesForTrigger = useCallback(\n    async (trigger: AstarteTrigger) => {\n      await handleFetchInterfacesName();\n      const interfaceName = _.get(trigger, 'simpleTriggers[0].interfaceName');\n      if (interfaceName === '*') {\n        return trigger;\n      }\n      const ifaceMajors = await handleFetchInterfaceMajors(interfaceName);\n      let ifaceMajor: number | undefined = _.get(trigger, 'simpleTriggers[0].interfaceMajor');\n      if (ifaceMajor == null) {\n        if (ifaceMajors.length === 0) {\n          return trigger;\n        }\n        ifaceMajor = Math.max(...ifaceMajors);\n        _.set(trigger as AstarteTrigger, 'simpleTriggers[0].interfaceMajor', ifaceMajor);\n      }\n      const interfaceMajor = ifaceMajor;\n      await handleFetchInterface({ interfaceName, interfaceMajor });\n      return trigger;\n    },\n    [handleFetchInterfacesName, handleFetchInterfaceMajors, handleFetchInterface],\n  );\n\n  const handleSimpleTriggerChange = useCallback((simpleTrigger: AstarteSimpleTrigger) => {\n    setTriggerDraft((draft) => ({ ...draft, simpleTriggers: [simpleTrigger] }));\n    if (simpleTrigger.type !== 'data_trigger' || simpleTrigger.interfaceName === '*') {\n      setTriggerInterface(null);\n    }\n  }, []);\n\n  const handleActionChange = useCallback(\n    (action: AstarteTrigger['action']) =>\n      setTriggerDraft((draft) => ({\n        ...draft,\n        action,\n      })),\n    [],\n  );\n\n  const handlePatchActionAmqpHeaders = useCallback(\n    (newHeaders: { [header: string]: string | undefined }) => {\n      setTriggerDraft((draft) => {\n        const oldAmqpStaticHeaders = _.get(draft.action, 'amqpStaticHeaders') || {};\n        const amqpStaticHeaders = _.omitBy(\n          {\n            ...oldAmqpStaticHeaders,\n            ...newHeaders,\n          },\n          _.isUndefined,\n        );\n        return {\n          ...draft,\n          action: {\n            ...draft.action,\n            amqpStaticHeaders,\n          },\n        };\n      });\n    },\n    [],\n  );\n\n  const handlePatchActionHttpHeaders = useCallback(\n    (newHeaders: { [header: string]: string | undefined }) => {\n      setTriggerDraft((draft) => {\n        const oldHttpStaticHeaders = _.get(draft.action, 'httpStaticHeaders') || {};\n        const httpStaticHeaders = _.omitBy(\n          {\n            ...oldHttpStaticHeaders,\n            ...newHeaders,\n          },\n          _.isUndefined,\n        );\n        return {\n          ...draft,\n          action: {\n            ...draft.action,\n            httpStaticHeaders,\n          },\n        };\n      });\n    },\n    [],\n  );\n\n  const handleTriggerNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setTriggerDraft((draft) => ({ ...draft, name: value }));\n  }, []);\n\n  const dismissModal = useCallback(() => setActiveModal(null), []);\n\n  const handleAddActionAmqpHeader = useCallback(() => {\n    setActiveModal({ modal: 'new-amqp-header' });\n  }, []);\n\n  const handleConfirmNewAmqpHeaderModal = useCallback(\n    (formData: { key: string; value?: string }) => {\n      handlePatchActionAmqpHeaders({ [formData.key]: formData.value || '' });\n      dismissModal();\n    },\n    [],\n  );\n\n  const handleEditActionAmqpHeader = useCallback((header: string) => {\n    setActiveModal({ modal: 'edit-amqp-header', header });\n  }, []);\n\n  const handleConfirmEditAmqpHeaderModal = useCallback(\n    (formData: { value?: string }) => {\n      if (activeModal != null && activeModal.modal === 'edit-amqp-header') {\n        handlePatchActionAmqpHeaders({ [activeModal.header]: formData.value || '' });\n      }\n      dismissModal();\n    },\n    [activeModal],\n  );\n\n  const handleRemoveActionAmqpHeader = useCallback((header: string) => {\n    setActiveModal({ modal: 'remove-amqp-header', header });\n  }, []);\n\n  const handleConfirmRemoveAmqpHeaderModal = useCallback(() => {\n    if (activeModal != null && activeModal.modal === 'remove-amqp-header') {\n      handlePatchActionAmqpHeaders({ [activeModal.header]: undefined });\n    }\n    dismissModal();\n  }, [activeModal]);\n\n  const handleAddActionHttpHeader = useCallback(() => {\n    setActiveModal({ modal: 'new-http-header' });\n  }, []);\n\n  const handleConfirmNewHttpHeaderModal = useCallback(\n    (formData: { key: string; value?: string }) => {\n      handlePatchActionHttpHeaders({ [formData.key]: formData.value || '' });\n      dismissModal();\n    },\n    [],\n  );\n\n  const handleEditActionHttpHeader = useCallback((header: string) => {\n    setActiveModal({ modal: 'edit-http-header', header });\n  }, []);\n\n  const handleConfirmEditHttpHeaderModal = useCallback(\n    (formData: { value?: string }) => {\n      if (activeModal != null && activeModal.modal === 'edit-http-header') {\n        handlePatchActionHttpHeaders({ [activeModal.header]: formData.value || '' });\n      }\n      dismissModal();\n    },\n    [activeModal],\n  );\n\n  const handleRemoveActionHttpHeader = useCallback((header: string) => {\n    setActiveModal({ modal: 'remove-http-header', header });\n  }, []);\n\n  const handleConfirmRemoveHttpHeaderModal = useCallback(() => {\n    if (activeModal != null && activeModal.modal === 'remove-http-header') {\n      handlePatchActionHttpHeaders({ [activeModal.header]: undefined });\n    }\n    dismissModal();\n  }, [activeModal]);\n\n  const handleTriggerSourceChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setTriggerSource(value);\n    let triggerSourceJSON: Record<string, unknown> | null = null;\n    try {\n      triggerSourceJSON = JSON.parse(value);\n    } catch {\n      triggerSourceJSON = null;\n    }\n    if (!triggerSourceJSON) {\n      setTriggerSourceError('Invalid JSON');\n      return;\n    }\n    let trigger: AstarteTrigger | null = null;\n    try {\n      trigger = AstarteTrigger.fromJSON(triggerSourceJSON as any);\n    } catch {\n      trigger = null;\n    }\n    if (!trigger) {\n      setTriggerSourceError('Invalid Trigger');\n      return;\n    }\n    if (_.get(trigger, 'simpleTriggers[0].type') === 'data_trigger') {\n      handleFetchInterfacesForTrigger(trigger).then(setTriggerDraft);\n    } else {\n      setTriggerDraft(trigger);\n    }\n  }, []);\n\n  useEffect(() => {\n    const formattedTriggerSource = formatJSON(AstarteTrigger.toJSON(triggerDraft));\n    setTriggerSource((source) =>\n      formatJSONText(source) !== formattedTriggerSource ? formattedTriggerSource : source,\n    );\n    let validationErrors: { [key: string]: string } = {};\n    try {\n      AstarteTrigger.validation.validateSync(triggerDraft, {\n        abortEarly: false,\n        context: { realm, interface: triggerInterface },\n      });\n    } catch (err) {\n      validationErrors = _.mapValues(_.keyBy(_.uniqBy(err.inner, 'path'), 'path'), 'message');\n    }\n    setTriggerValidationErrors(validationErrors);\n    setTriggerSourceError(Object.values(validationErrors).join('. '));\n    if (onChange) {\n      const isValidTrigger = _.isEmpty(validationErrors);\n      onChange(triggerDraft, isValidTrigger);\n    }\n  }, [triggerDraft, realm, triggerInterface]);\n\n  useEffect(() => {\n    if (initialData) {\n      handleFetchInterfacesForTrigger(initialData);\n    } else {\n      handleFetchInterfacesName();\n    }\n  }, []);\n\n  return (\n    <Row>\n      <Col md={isSourceVisible ? 6 : 12}>\n        <Container fluid className=\"bg-white rounded p-3\">\n          <Form>\n            <Form.Row className=\"mb-2\">\n              <Col sm={12}>\n                <Form.Group controlId=\"triggerName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    required\n                    readOnly={isReadOnly}\n                    value={_.get(triggerDraft, 'name')}\n                    onChange={handleTriggerNameChange}\n                    isInvalid={_.get(triggerValidationErrors, 'name') != null}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {_.get(triggerValidationErrors, 'name')}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Form.Row>\n          </Form>\n          <SimpleTriggerForm\n            fetchInterface={handleFetchInterface}\n            fetchInterfaceMajors={handleFetchInterfaceMajors}\n            interfacesName={interfacesName}\n            interfaceMajors={interfaceMajors}\n            isLoadingInterface={isLoadingInterface}\n            isLoadingInterfacesName={isLoadingInterfacesName}\n            isLoadingInterfaceMajors={isLoadingInterfaceMajors}\n            isReadOnly={isReadOnly}\n            onChange={handleSimpleTriggerChange}\n            simpleTrigger={triggerDraft.simpleTriggers[0]}\n            simpleTriggerInterface={triggerInterface}\n            validationErrors={simpleTriggerValidationErrors}\n          />\n          <TriggerActionForm\n            action={triggerDraft.action}\n            isReadOnly={isReadOnly}\n            onAddAmqpHeader={handleAddActionAmqpHeader}\n            onAddHttpHeader={handleAddActionHttpHeader}\n            onEditAmqpHeader={handleEditActionAmqpHeader}\n            onEditHttpHeader={handleEditActionHttpHeader}\n            onRemoveAmqpHeader={handleRemoveActionAmqpHeader}\n            onRemoveHttpHeader={handleRemoveActionHttpHeader}\n            onChange={handleActionChange}\n            realm={realm}\n            validationErrors={actionValidationErrors}\n          />\n        </Container>\n      </Col>\n      {isSourceVisible && (\n        <Col md={6}>\n          <Form.Group controlId=\"triggerSource\" className=\"h-100 d-flex flex-column\">\n            <Form.Control\n              as=\"textarea\"\n              className=\"flex-grow-1 text-monospace\"\n              autoComplete=\"off\"\n              spellCheck={false}\n              required\n              readOnly={isReadOnly}\n              value={triggerSource}\n              onChange={handleTriggerSourceChange}\n              isInvalid={!!triggerSourceError}\n            />\n            <Form.Control.Feedback type=\"invalid\">{triggerSourceError}</Form.Control.Feedback>\n          </Form.Group>\n        </Col>\n      )}\n      {activeModal != null && activeModal.modal === 'new-amqp-header' && (\n        <NewAmqpHeaderModal onCancel={dismissModal} onConfirm={handleConfirmNewAmqpHeaderModal} />\n      )}\n      {activeModal != null && activeModal.modal === 'edit-amqp-header' && (\n        <EditAmqpHeaderModal\n          targetHeader={activeModal.header}\n          onCancel={dismissModal}\n          onConfirm={handleConfirmEditAmqpHeaderModal}\n        />\n      )}\n      {activeModal != null && activeModal.modal === 'remove-amqp-header' && (\n        <RemoveAmqpHeaderModal\n          targetHeader={activeModal.header}\n          onCancel={dismissModal}\n          onConfirm={handleConfirmRemoveAmqpHeaderModal}\n        />\n      )}\n      {activeModal != null && activeModal.modal === 'new-http-header' && (\n        <NewHttpHeaderModal onCancel={dismissModal} onConfirm={handleConfirmNewHttpHeaderModal} />\n      )}\n      {activeModal != null && activeModal.modal === 'edit-http-header' && (\n        <EditHttpHeaderModal\n          targetHeader={activeModal.header}\n          onCancel={dismissModal}\n          onConfirm={handleConfirmEditHttpHeaderModal}\n        />\n      )}\n      {activeModal != null && activeModal.modal === 'remove-http-header' && (\n        <RemoveHttpHeaderModal\n          targetHeader={activeModal.header}\n          onCancel={dismissModal}\n          onConfirm={handleConfirmRemoveHttpHeaderModal}\n        />\n      )}\n    </Row>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Container, Row, Spinner } from 'react-bootstrap';\nimport { AstarteTrigger } from 'astarte-client';\n\nimport { useAlerts } from './AlertManager';\nimport { useAstarte } from './AstarteManager';\nimport TriggerEditor from './components/TriggerEditor';\nimport BackButton from './ui/BackButton';\n\nexport default (): React.ReactElement => {\n  const [triggerDraft, setTriggerDraft] = useState<AstarteTrigger | null>(null);\n  const [isValidTrigger, setIsValidTrigger] = useState(false);\n  const [isInstallingTrigger, setIsInstallingTrigger] = useState(false);\n  const [isSourceVisible, setIsSourceVisible] = useState(true);\n  const installationAlerts = useAlerts();\n  const astarte = useAstarte();\n  const navigate = useNavigate();\n\n  const handleToggleSourceVisibility = useCallback(() => {\n    setIsSourceVisible((isVisible) => !isVisible);\n  }, []);\n\n  const handleTriggerChange = useCallback((updatedTrigger: AstarteTrigger, isValid: boolean) => {\n    setTriggerDraft(updatedTrigger);\n    setIsValidTrigger(isValid);\n  }, []);\n\n  const handleInstallTrigger = useCallback(() => {\n    if (triggerDraft == null || isInstallingTrigger) {\n      return;\n    }\n    setIsInstallingTrigger(true);\n    astarte.client\n      .installTrigger(new AstarteTrigger(triggerDraft))\n      .then(() => {\n        navigate({ pathname: '/triggers' });\n      })\n      .catch((err) => {\n        installationAlerts.showError(`Could not install trigger: ${err.message}`);\n        setIsInstallingTrigger(false);\n      });\n  }, [astarte.client, triggerDraft, isInstallingTrigger, navigate, installationAlerts.showError]);\n\n  const handleTriggerEditorError = useCallback(\n    (message: string) => {\n      installationAlerts.showError(message);\n    },\n    [installationAlerts.showError],\n  );\n\n  return (\n    <Container fluid className=\"p-3\">\n      <h2>\n        <BackButton href=\"/triggers\" />\n        Trigger Editor\n      </h2>\n      <div className=\"mt-4\">\n        <installationAlerts.Alerts />\n        <TriggerEditor\n          realm={astarte.realm}\n          onChange={handleTriggerChange}\n          onError={handleTriggerEditorError}\n          isSourceVisible={isSourceVisible}\n          fetchInterfacesName={astarte.client.getInterfaceNames}\n          fetchInterfaceMajors={astarte.client.getInterfaceMajors}\n          fetchInterface={astarte.client.getInterface}\n        />\n        <Row className=\"justify-content-end m-0 mt-3\">\n          <Button variant=\"secondary\" className=\"mr-2\" onClick={handleToggleSourceVisibility}>\n            {isSourceVisible ? 'Hide' : 'Show'} source\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={handleInstallTrigger}\n            disabled={isInstallingTrigger || !isValidTrigger}\n          >\n            {isInstallingTrigger && (\n              <Spinner as=\"span\" size=\"sm\" animation=\"border\" role=\"status\" className=\"mr-2\" />\n            )}\n            Install Trigger\n          </Button>\n        </Row>\n      </div>\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Button, Container, Form, Row, Spinner } from 'react-bootstrap';\n\nimport { useAlerts } from './AlertManager';\nimport { useAstarte } from './AstarteManager';\nimport Empty from './components/Empty';\nimport TriggerEditor from './components/TriggerEditor';\nimport ConfirmModal from './components/modals/Confirm';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\nimport BackButton from './ui/BackButton';\n\ninterface DeleteModalProps {\n  triggerName: string;\n  onCancel: () => void;\n  onConfirm: () => void;\n  isDeletingTrigger: boolean;\n}\n\nconst DeleteModal = ({ triggerName, onCancel, onConfirm, isDeletingTrigger }: DeleteModalProps) => {\n  const [confirmString, setConfirmString] = useState('');\n\n  const canDelete = confirmString === triggerName;\n\n  return (\n    <ConfirmModal\n      title=\"Confirmation Required\"\n      confirmVariant=\"danger\"\n      onCancel={onCancel}\n      onConfirm={onConfirm}\n      isConfirming={isDeletingTrigger}\n      disabled={!canDelete}\n    >\n      <p>\n        You are going to remove&nbsp;\n        <b>{triggerName}</b>. This might cause data loss, removed triggers cannot be restored. Are\n        you sure?\n      </p>\n      <p>\n        Please type <b>{triggerName}</b> to proceed.\n      </p>\n      <Form.Group controlId=\"confirmTriggerName\">\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Trigger Name\"\n          value={confirmString}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => setConfirmString(e.target.value)}\n        />\n      </Form.Group>\n    </ConfirmModal>\n  );\n};\n\nexport default (): React.ReactElement => {\n  const [isDeletingTrigger, setIsDeletingTrigger] = useState(false);\n  const [isSourceVisible, setIsSourceVisible] = useState(true);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const deletionAlerts = useAlerts();\n  const astarte = useAstarte();\n  const navigate = useNavigate();\n  const { triggerName } = useParams();\n\n  const triggerFetcher = useFetch(() => astarte.client.getTrigger(triggerName));\n\n  const handleToggleSourceVisibility = useCallback(() => {\n    setIsSourceVisible((isVisible) => !isVisible);\n  }, []);\n\n  const showConfirmDeleteModal = useCallback(() => {\n    setShowDeleteModal(true);\n  }, []);\n\n  const hideConfirmDeleteModal = useCallback(() => {\n    setShowDeleteModal(false);\n  }, []);\n\n  const handleConfirmDeleteTrigger = useCallback(() => {\n    setIsDeletingTrigger(true);\n    astarte.client\n      .deleteTrigger(triggerName)\n      .then(() => {\n        navigate('/triggers');\n      })\n      .catch((err) => {\n        deletionAlerts.showError(`Could not delete trigger: ${err.message}`);\n        setIsDeletingTrigger(false);\n        hideConfirmDeleteModal();\n      });\n  }, [astarte.client, triggerName, navigate, deletionAlerts.showError]);\n\n  const handleTriggerEditorError = useCallback(\n    (message: string) => {\n      deletionAlerts.showError(message);\n    },\n    [deletionAlerts.showError],\n  );\n\n  return (\n    <Container fluid className=\"p-3\">\n      <h2>\n        <BackButton href=\"/triggers\" />\n        Trigger Editor\n      </h2>\n      <div className=\"mt-4\">\n        <deletionAlerts.Alerts />\n        <WaitForData\n          data={triggerFetcher.value}\n          status={triggerFetcher.status}\n          fallback={\n            <Container fluid className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\" />\n            </Container>\n          }\n          errorFallback={\n            <Empty title=\"Couldn't load trigger source\" onRetry={triggerFetcher.refresh} />\n          }\n        >\n          {(trigger) => (\n            <>\n              <TriggerEditor\n                initialData={trigger}\n                isReadOnly\n                onError={handleTriggerEditorError}\n                isSourceVisible={isSourceVisible}\n                fetchInterfacesName={astarte.client.getInterfaceNames}\n                fetchInterfaceMajors={astarte.client.getInterfaceMajors}\n                fetchInterface={astarte.client.getInterface}\n              />\n              <Row className=\"justify-content-end m-0 mt-3\">\n                <Button variant=\"secondary\" className=\"mr-2\" onClick={handleToggleSourceVisibility}>\n                  {isSourceVisible ? 'Hide' : 'Show'} source\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  onClick={showConfirmDeleteModal}\n                  disabled={isDeletingTrigger}\n                >\n                  {isDeletingTrigger && (\n                    <Spinner\n                      as=\"span\"\n                      size=\"sm\"\n                      animation=\"border\"\n                      role=\"status\"\n                      className=\"mr-2\"\n                    />\n                  )}\n                  Delete trigger\n                </Button>\n              </Row>\n            </>\n          )}\n        </WaitForData>\n      </div>\n      {showDeleteModal && (\n        <DeleteModal\n          triggerName={triggerName}\n          onCancel={hideConfirmDeleteModal}\n          onConfirm={handleConfirmDeleteTrigger}\n          isDeletingTrigger={isDeletingTrigger}\n        />\n      )}\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n   Copyright 2020 Ispirata Srl\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Badge, Button, Col, Container, ListGroup, Row, Spinner } from 'react-bootstrap';\nimport _ from 'lodash';\n\nimport { useAstarte } from './AstarteManager';\nimport Empty from './components/Empty';\nimport Icon from './components/Icon';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\nimport useInterval from './hooks/useInterval';\n\ninterface InterfaceRowProps {\n  name: string;\n  majors: number[];\n}\n\nconst InterfaceRow = ({ name, majors }: InterfaceRowProps): React.ReactElement => (\n  <ListGroup.Item>\n    <Container className=\"p-0\" fluid>\n      <Row>\n        <Col>\n          <Link to={`/interfaces/${name}/${Math.max(...majors)}/edit`}>\n            <Icon icon=\"interfaces\" className=\"mr-2\" />\n            {name}\n          </Link>\n        </Col>\n        <Col md=\"auto\">\n          {majors.map((major) => (\n            <Link key={major} to={`/interfaces/${name}/${major}/edit`}>\n              <Badge variant={major > 0 ? 'primary' : 'secondary'} className=\"mr-1 px-2 py-1\">\n                v{major}\n              </Badge>\n            </Link>\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  </ListGroup.Item>\n);\n\nconst LoadingRow = (): React.ReactElement => (\n  <ListGroup.Item>\n    <Container fluid className=\"text-center\">\n      <Spinner animation=\"border\" role=\"status\" />\n    </Container>\n  </ListGroup.Item>\n);\n\ninterface ErrorRowProps {\n  onRetry: () => void;\n}\n\nconst ErrorRow = ({ onRetry }: ErrorRowProps): React.ReactElement => (\n  <ListGroup.Item>\n    <Empty title=\"Couldn't load available interfaces\" onRetry={onRetry} />\n  </ListGroup.Item>\n);\n\ninterface InterfaceInfo {\n  name: string;\n  majors: number[];\n}\n\nexport default (): React.ReactElement => {\n  const astarte = useAstarte();\n  const navigate = useNavigate();\n\n  const fetchInterfacesInfo = useCallback(async (): Promise<InterfaceInfo[]> => {\n    const interfaceNames = await astarte.client.getInterfaceNames();\n    const fetchedInterfaces = await Promise.all(\n      interfaceNames.map((interfaceName) =>\n        astarte.client.getInterfaceMajors(interfaceName).then((interfaceMajors) => ({\n          name: interfaceName,\n          majors: interfaceMajors.sort().reverse(),\n        })),\n      ),\n    );\n    const sortedInterfaces = _.sortBy(fetchedInterfaces, ['name']);\n    return sortedInterfaces;\n  }, [astarte.client]);\n\n  const interfacesInfoFetcher = useFetch(fetchInterfacesInfo);\n\n  useInterval(interfacesInfoFetcher.refresh, 30000);\n\n  return (\n    <Container fluid className=\"p-3\">\n      <Row>\n        <Col>\n          <h2>Interfaces</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-3\">\n        <Col sm={12}>\n          <ListGroup>\n            <ListGroup.Item>\n              <Button variant=\"link\" className=\"p-0\" onClick={() => navigate('/interfaces/new')}>\n                <Icon icon=\"add\" className=\"mr-2\" />\n                Install a new interface...\n              </Button>\n            </ListGroup.Item>\n            <WaitForData\n              data={interfacesInfoFetcher.value}\n              status={interfacesInfoFetcher.status}\n              fallback={<LoadingRow />}\n              errorFallback={<ErrorRow onRetry={interfacesInfoFetcher.refresh} />}\n            >\n              {(interfaces) => (\n                <>\n                  {interfaces.map(({ name, majors }) => (\n                    <InterfaceRow key={name} name={name} majors={majors} />\n                  ))}\n                </>\n              )}\n            </WaitForData>\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Button, Container, Form, Row, Spinner } from 'react-bootstrap';\nimport { AstarteInterface } from 'astarte-client';\n\nimport { useAlerts } from './AlertManager';\nimport { useAstarte } from './AstarteManager';\nimport InterfaceEditor from './components/InterfaceEditor';\nimport Empty from './components/Empty';\nimport WaitForData from './components/WaitForData';\nimport ConfirmModal from './components/modals/Confirm';\nimport BackButton from './ui/BackButton';\nimport useFetch from './hooks/useFetch';\n\ninterface DeleteModalProps {\n  interfaceName: string;\n  interfaceMajor: number;\n  onCancel: () => void;\n  onConfirm: () => void;\n  isDeletingInterface: boolean;\n}\n\nconst DeleteModal = ({\n  interfaceName,\n  interfaceMajor,\n  onCancel,\n  onConfirm,\n  isDeletingInterface,\n}: DeleteModalProps) => {\n  const [confirmString, setConfirmString] = useState('');\n\n  const canDelete = confirmString === interfaceName;\n\n  return (\n    <ConfirmModal\n      title=\"Confirmation Required\"\n      confirmVariant=\"danger\"\n      onCancel={onCancel}\n      onConfirm={onConfirm}\n      isConfirming={isDeletingInterface}\n      disabled={!canDelete}\n    >\n      <p>\n        You are going to remove&nbsp;\n        <b>\n          {interfaceName} v{interfaceMajor}\n        </b>\n        . This might cause data loss, removed interfaces cannot be restored. Are you sure?\n      </p>\n      <p>\n        Please type <b>{interfaceName}</b> to proceed.\n      </p>\n      <Form.Group controlId=\"confirmInterfaceName\">\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Interface Name\"\n          value={confirmString}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => setConfirmString(e.target.value)}\n        />\n      </Form.Group>\n    </ConfirmModal>\n  );\n};\n\nexport default (): React.ReactElement => {\n  const [interfaceDraft, setInterfaceDraft] = useState<AstarteInterface | null>(null);\n  const [isValidInterface, setIsValidInterface] = useState(false);\n  const [isUpdatingInterface, setIsUpdatingInterface] = useState(false);\n  const [isDeletingInterface, setIsDeletingInterface] = useState(false);\n  const [isSourceVisible, setIsSourceVisible] = useState(true);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const actionAlerts = useAlerts();\n  const astarte = useAstarte();\n  const navigate = useNavigate();\n  const pathParams = useParams();\n  const { interfaceName } = pathParams;\n  const interfaceMajor = parseInt(pathParams.interfaceMajor, 10);\n\n  const interfaceFetcher = useFetch(() =>\n    astarte.client.getInterface({ interfaceName, interfaceMajor }),\n  );\n\n  const handleToggleSourceVisibility = useCallback(() => {\n    setIsSourceVisible((isVisible) => !isVisible);\n  }, []);\n\n  const showConfirmUpdateModal = useCallback(() => {\n    setShowUpdateModal(true);\n  }, []);\n\n  const hideConfirmUpdateModal = useCallback(() => {\n    setShowUpdateModal(false);\n  }, []);\n\n  const showConfirmDeleteModal = useCallback(() => {\n    setShowDeleteModal(true);\n  }, []);\n\n  const hideConfirmDeleteModal = useCallback(() => {\n    setShowDeleteModal(false);\n  }, []);\n\n  const handleInterfaceChange = useCallback(\n    (updatedInterface: AstarteInterface, isValid: boolean) => {\n      setInterfaceDraft(updatedInterface);\n      setIsValidInterface(isValid);\n    },\n    [],\n  );\n\n  const handleConfirmUpdateInterface = useCallback(() => {\n    if (interfaceDraft == null) {\n      return;\n    }\n    setIsUpdatingInterface(true);\n    astarte.client\n      .updateInterface(new AstarteInterface(interfaceDraft))\n      .then(() => {\n        actionAlerts.showSuccess('Changes succesfully applied.');\n      })\n      .catch((err) => {\n        actionAlerts.showError(`Could not update interface: ${err.message}`);\n      })\n      .finally(() => {\n        setIsUpdatingInterface(false);\n        hideConfirmUpdateModal();\n      });\n  }, [astarte.client, interfaceDraft, actionAlerts.showSuccess, actionAlerts.showError]);\n\n  const handleConfirmDeleteInterface = useCallback(() => {\n    setIsDeletingInterface(true);\n    astarte.client\n      .deleteInterface(interfaceName, interfaceMajor)\n      .then(() => {\n        navigate('/interfaces');\n      })\n      .catch((err) => {\n        actionAlerts.showError(`Could not delete interface: ${err.message}`);\n        setIsDeletingInterface(false);\n        hideConfirmDeleteModal();\n      });\n  }, [astarte.client, interfaceName, interfaceMajor, navigate, actionAlerts.showError]);\n\n  useEffect(() => {\n    if (interfaceFetcher.value != null) {\n      setInterfaceDraft(interfaceFetcher.value);\n    }\n  }, [interfaceFetcher.value]);\n\n  const canUpdateInterface =\n    interfaceFetcher.value != null && interfaceDraft != null && isValidInterface;\n\n  return (\n    <Container fluid className=\"p-3\">\n      <h2>\n        <BackButton href=\"/interfaces\" />\n        Interface Editor\n      </h2>\n      <div className=\"mt-4\">\n        <actionAlerts.Alerts />\n        <WaitForData\n          data={interfaceFetcher.value}\n          status={interfaceFetcher.status}\n          fallback={\n            <Container fluid className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\" />\n            </Container>\n          }\n          errorFallback={\n            <Empty title=\"Couldn't load interface properties\" onRetry={interfaceFetcher.refresh} />\n          }\n        >\n          {(iface) => (\n            <>\n              <InterfaceEditor\n                initialData={iface}\n                onChange={handleInterfaceChange}\n                isSourceVisible={isSourceVisible}\n                denyMajorChanges\n              />\n              <Row className=\"justify-content-end m-3\">\n                <Button variant=\"secondary\" className=\"mr-2\" onClick={handleToggleSourceVisibility}>\n                  {isSourceVisible ? 'Hide' : 'Show'} source\n                </Button>\n                {iface.major === 0 && (\n                  <Button\n                    className=\"mr-2\"\n                    variant=\"danger\"\n                    onClick={isDeletingInterface ? undefined : showConfirmDeleteModal}\n                    disabled={isDeletingInterface}\n                  >\n                    {isDeletingInterface && (\n                      <Spinner\n                        as=\"span\"\n                        size=\"sm\"\n                        animation=\"border\"\n                        role=\"status\"\n                        className=\"mr-2\"\n                      />\n                    )}\n                    Delete interface\n                  </Button>\n                )}\n                <Button\n                  variant=\"primary\"\n                  onClick={isUpdatingInterface ? undefined : showConfirmUpdateModal}\n                  disabled={isUpdatingInterface || !canUpdateInterface}\n                >\n                  {isUpdatingInterface && (\n                    <Spinner\n                      as=\"span\"\n                      size=\"sm\"\n                      animation=\"border\"\n                      role=\"status\"\n                      className=\"mr-2\"\n                    />\n                  )}\n                  Apply changes\n                </Button>\n              </Row>\n              {showUpdateModal && (\n                <ConfirmModal\n                  title=\"Confirmation Required\"\n                  onCancel={hideConfirmUpdateModal}\n                  onConfirm={handleConfirmUpdateInterface}\n                  isConfirming={isUpdatingInterface}\n                >\n                  <p>\n                    Update the interface <b>{iface.name}</b>?\n                  </p>\n                </ConfirmModal>\n              )}\n              {showDeleteModal && (\n                <DeleteModal\n                  onCancel={hideConfirmDeleteModal}\n                  onConfirm={handleConfirmDeleteInterface}\n                  isDeletingInterface={isDeletingInterface}\n                  interfaceName={interfaceName}\n                  interfaceMajor={interfaceMajor}\n                />\n              )}\n            </>\n          )}\n        </WaitForData>\n      </div>\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Container, Row, Spinner } from 'react-bootstrap';\nimport { AstarteInterface } from 'astarte-client';\nimport _ from 'lodash';\n\nimport { useAlerts } from './AlertManager';\nimport { useAstarte } from './AstarteManager';\nimport InterfaceEditor from './components/InterfaceEditor';\nimport ConfirmModal from './components/modals/Confirm';\nimport BackButton from './ui/BackButton';\n\ninterface InstallModalProps {\n  interfaceName: string;\n  isDraft: boolean;\n  onCancel: () => void;\n  onConfirm: () => void;\n  isInstallingInterface: boolean;\n}\n\nconst InstallModal = ({\n  interfaceName,\n  isDraft,\n  onCancel,\n  onConfirm,\n  isInstallingInterface,\n}: InstallModalProps) => (\n  <ConfirmModal\n    title=\"Confirmation Required\"\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n    isConfirming={isInstallingInterface}\n  >\n    <p>\n      You are about to install the interface <b>{interfaceName}</b>.\n    </p>\n    {isDraft ? (\n      <p>\n        As its major version is 0, this is a draft interface, which can be deleted.\n        <br />\n        In such a case, any data sent through this interface will be lost.\n        <br />\n        Draft Interfaces should be used for development and testing purposes only.\n      </p>\n    ) : (\n      <p>\n        Interface major is greater than zero, that means you will not be able to change already\n        installed mappings.\n      </p>\n    )}\n    <p>Are you sure you want to continue?</p>\n  </ConfirmModal>\n);\n\nexport default (): React.ReactElement => {\n  const [interfaceDraft, setInterfaceDraft] = useState<AstarteInterface | null>(null);\n  const [isValidInterface, setIsValidInterface] = useState(false);\n  const [isInstallingInterface, setIsInstallingInterface] = useState(false);\n  const [showInstallModal, setShowInstallModal] = useState(false);\n  const [isSourceVisible, setIsSourceVisible] = useState(true);\n  const installationAlerts = useAlerts();\n  const astarte = useAstarte();\n  const navigate = useNavigate();\n\n  const handleToggleSourceVisibility = useCallback(() => {\n    setIsSourceVisible((isVisible) => !isVisible);\n  }, []);\n\n  const handleInterfaceChange = useCallback(\n    (updatedInterface: AstarteInterface, isValid: boolean) => {\n      setInterfaceDraft(updatedInterface);\n      setIsValidInterface(isValid);\n    },\n    [],\n  );\n\n  const showConfirmInstallModal = useCallback(() => {\n    setShowInstallModal(true);\n  }, []);\n\n  const hideConfirmInstallModal = useCallback(() => {\n    setShowInstallModal(false);\n  }, []);\n\n  const handleConfirmInstallInterface = useCallback(() => {\n    if (interfaceDraft == null || isInstallingInterface) {\n      return;\n    }\n    setIsInstallingInterface(true);\n    astarte.client\n      .installInterface(new AstarteInterface(interfaceDraft))\n      .then(() => {\n        navigate({ pathname: '/interfaces' });\n      })\n      .catch((err) => {\n        installationAlerts.showError(`Could not install interface: ${err.message}`);\n        setIsInstallingInterface(false);\n        hideConfirmInstallModal();\n      });\n  }, [\n    astarte.client,\n    interfaceDraft,\n    isInstallingInterface,\n    navigate,\n    hideConfirmInstallModal,\n    installationAlerts.showError,\n  ]);\n\n  return (\n    <Container fluid className=\"p-3\">\n      <h2>\n        <BackButton href=\"/interfaces\" />\n        Interface Editor\n      </h2>\n      <div className=\"mt-4\">\n        <installationAlerts.Alerts />\n        <InterfaceEditor onChange={handleInterfaceChange} isSourceVisible={isSourceVisible} />\n        <Row className=\"justify-content-end m-0 mt-3\">\n          <Button variant=\"secondary\" className=\"mr-2\" onClick={handleToggleSourceVisibility}>\n            {isSourceVisible ? 'Hide' : 'Show'} source\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={showConfirmInstallModal}\n            disabled={isInstallingInterface || !isValidInterface}\n          >\n            {isInstallingInterface && (\n              <Spinner as=\"span\" size=\"sm\" animation=\"border\" role=\"status\" className=\"mr-2\" />\n            )}\n            Install interface\n          </Button>\n        </Row>\n        {showInstallModal && (\n          <InstallModal\n            onCancel={hideConfirmInstallModal}\n            onConfirm={handleConfirmInstallInterface}\n            isInstallingInterface={isInstallingInterface}\n            interfaceName={_.get(interfaceDraft, 'name', '')}\n            isDraft={_.get(interfaceDraft, 'major', 0) === 0}\n          />\n        )}\n      </div>\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\n\ninterface Props {\n  children: string;\n  word?: string;\n}\n\nconst Highlight = ({ children, word }: Props): React.ReactElement => {\n  if (!word) {\n    return <>{children}</>;\n  }\n\n  return (\n    <>\n      {children.split(word).map((chunk, index) => (\n        <React.Fragment key={index}>\n          {index !== 0 && (\n            <span key={`word-${index}`} className=\"bg-warning text-dark\">\n              {word}\n            </span>\n          )}\n          {chunk}\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n\nexport default Highlight;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Button, Col, Container, Form, Pagination, Row, Spinner, Table } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport _ from 'lodash';\nimport type { AstarteDevice } from 'astarte-client';\n\nimport { Link, useNavigate } from 'react-router-dom';\nimport SingleCardPage from './ui/SingleCardPage';\nimport { useAlerts } from './AlertManager';\nimport Empty from './components/Empty';\nimport Highlight from './components/Highlight';\nimport Icon from './components/Icon';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\nimport { useAstarte } from './AstarteManager';\n\ninterface DeviceFilters {\n  deviceId?: AstarteDevice['id'];\n  showConnected?: boolean;\n  showDisconnected?: boolean;\n  showNeverConnected?: boolean;\n  metadataKey?: string;\n  metadataValue?: string;\n  activeSinceDate?: Date;\n}\n\nconst DEVICES_PER_PAGE = 20;\nconst DEVICES_PER_REQUEST = 100;\nconst MAX_SHOWN_PAGES = 10;\n\nconst matchMetadata = (\n  key: string,\n  value: string,\n  filterKey: string,\n  filterValue: string,\n): boolean => {\n  if (filterKey !== '' && !key.includes(filterKey)) {\n    return false;\n  }\n  if (filterValue !== '' && !value.includes(filterValue)) {\n    return false;\n  }\n  return true;\n};\n\ninterface MatchedMetadataProps {\n  filters: DeviceFilters;\n  metadata: AstarteDevice['metadata'];\n}\n\nconst MatchedMetadata = ({\n  filters,\n  metadata,\n}: MatchedMetadataProps): React.ReactElement | null => {\n  const { metadataKey = '', metadataValue = '' } = filters;\n\n  if (metadataKey === '' && metadataValue === '') {\n    return null;\n  }\n\n  return (\n    <>\n      {Array.from(metadata)\n        .filter(([key, value]) => matchMetadata(key, value, metadataKey, metadataValue))\n        .map(([key, value]) => (\n          <div key={key} style={{ overflowWrap: 'anywhere' }}>\n            <Highlight word={metadataKey}>{key}</Highlight>\n            {': '}\n            <Highlight word={metadataValue}>{value}</Highlight>\n          </div>\n        ))}\n    </>\n  );\n};\n\ninterface DeviceRowProps {\n  device: AstarteDevice;\n  filters: DeviceFilters;\n}\n\nconst DeviceRow = ({ device, filters }: DeviceRowProps): React.ReactElement => {\n  let lastEvent;\n  let icon;\n  let iconTooltip;\n\n  if (device.isConnected) {\n    icon = 'statusConnected' as const;\n    iconTooltip = 'Connected';\n    lastEvent = `Connected on ${(device.lastConnection as Date).toLocaleString()}`;\n  } else if (device.lastConnection) {\n    icon = 'statusDisconnected' as const;\n    iconTooltip = 'Disconnected';\n    lastEvent = `Disconnected on ${(device.lastDisconnection as Date).toLocaleString()}`;\n  } else {\n    icon = 'statusNeverConnected' as const;\n    iconTooltip = 'Never connected';\n    lastEvent = 'Never connected';\n  }\n\n  return (\n    <tr>\n      <td>\n        <Icon icon={icon} tooltip={iconTooltip} tooltipPlacement=\"right\" />\n      </td>\n      <td className={device.hasNameAlias ? '' : 'text-monospace'}>\n        <Link to={`/devices/${device.id}/edit`}>{device.name}</Link>\n        <MatchedMetadata filters={filters} metadata={device.metadata} />\n      </td>\n      <td>{lastEvent}</td>\n    </tr>\n  );\n};\n\ninterface DeviceTableProps {\n  deviceList: AstarteDevice[];\n  filters: DeviceFilters;\n}\n\nconst DeviceTable = ({ deviceList, filters }: DeviceTableProps): React.ReactElement => (\n  <Table responsive>\n    <thead>\n      <tr>\n        <th>Status</th>\n        <th>Device handle</th>\n        <th>Last connection event</th>\n      </tr>\n    </thead>\n    <tbody>\n      {deviceList.map((device) => (\n        <DeviceRow key={device.id} device={device} filters={filters} />\n      ))}\n    </tbody>\n  </Table>\n);\n\nconst matchFilters = (device: AstarteDevice, filters: DeviceFilters) => {\n  const {\n    deviceId = '',\n    metadataKey = '',\n    metadataValue = '',\n    showConnected = true,\n    showDisconnected = true,\n    showNeverConnected = true,\n    activeSinceDate,\n  } = filters;\n\n  if (\n    activeSinceDate != null &&\n    !device.isConnected &&\n    (device.lastDisconnection == null || device.lastDisconnection < activeSinceDate)\n  ) {\n    return false;\n  }\n\n  if (!showConnected && device.isConnected) {\n    return false;\n  }\n  if (!showDisconnected && !device.isConnected && device.lastConnection) {\n    return false;\n  }\n  if (!showNeverConnected && !device.isConnected && !device.lastConnection) {\n    return false;\n  }\n\n  if (\n    (metadataKey !== '' || metadataValue !== '') &&\n    !Array.from(device.metadata).some(([key, value]) =>\n      matchMetadata(key, value, metadataKey, metadataValue),\n    )\n  ) {\n    return false;\n  }\n\n  if (deviceId === '') {\n    return true;\n  }\n\n  const aliases = Array.from(device.aliases.values());\n  return device.id.includes(deviceId) || aliases.some((alias) => alias.includes(deviceId));\n};\n\ninterface TablePaginationProps {\n  activePage: number;\n  canLoadMorePages: boolean;\n  lastPage: number;\n  onPageChange: (pageIndex: number) => void;\n}\n\nconst TablePagination = ({\n  activePage,\n  canLoadMorePages,\n  lastPage,\n  onPageChange,\n}: TablePaginationProps): React.ReactElement | null => {\n  if (lastPage < 2) {\n    return null;\n  }\n\n  let endPage = activePage + Math.floor((MAX_SHOWN_PAGES + 1) / 2);\n  if (endPage < MAX_SHOWN_PAGES) {\n    endPage = MAX_SHOWN_PAGES;\n  }\n  if (endPage > lastPage) {\n    endPage = lastPage;\n  }\n\n  let startingPage = endPage - MAX_SHOWN_PAGES;\n  if (startingPage < 0) {\n    startingPage = 0;\n  }\n\n  const items = [];\n  for (let number = startingPage; number < endPage; number += 1) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === activePage}\n        onClick={() => {\n          onPageChange(number);\n        }}\n      >\n        {number + 1}\n      </Pagination.Item>,\n    );\n  }\n\n  return (\n    <Pagination>\n      {startingPage > 0 && (\n        <Pagination.Prev\n          onClick={() => {\n            onPageChange(activePage - 1);\n          }}\n        />\n      )}\n      {items}\n      {(endPage < lastPage || canLoadMorePages) && (\n        <Pagination.Next\n          onClick={() => {\n            onPageChange(activePage + 1);\n          }}\n        />\n      )}\n    </Pagination>\n  );\n};\n\ninterface FilterFormProps {\n  filters: DeviceFilters;\n  onUpdateFilters: (filters: DeviceFilters) => void;\n}\n\nconst FilterForm = ({ filters, onUpdateFilters }: FilterFormProps): React.ReactElement => {\n  const {\n    deviceId = '',\n    showConnected = true,\n    showDisconnected = true,\n    showNeverConnected = true,\n    metadataKey = '',\n    metadataValue = '',\n    activeSinceDate,\n  } = filters;\n\n  return (\n    <Form className=\"p-2\">\n      <Form.Group controlId=\"filterId\" className=\"mb-4\">\n        <Form.Label>\n          <b>Device ID/name</b>\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={deviceId}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            onUpdateFilters({ ...filters, deviceId: e.target.value })\n          }\n        />\n      </Form.Group>\n      <Form.Group controlId=\"filterStatus\" className=\"mb-4\">\n        <Form.Label>\n          <b>Device status</b>\n        </Form.Label>\n        <Form.Check\n          type=\"checkbox\"\n          id=\"checkbox-connected\"\n          label=\"Connected\"\n          checked={showConnected}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            onUpdateFilters({ ...filters, showConnected: e.target.checked })\n          }\n        />\n        <Form.Check\n          type=\"checkbox\"\n          id=\"checkbox-disconnected\"\n          label=\"Disconnected\"\n          checked={showDisconnected}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            onUpdateFilters({ ...filters, showDisconnected: e.target.checked })\n          }\n        />\n        <Form.Check\n          type=\"checkbox\"\n          id=\"checkbox-never-connected\"\n          label=\"Never connected\"\n          checked={showNeverConnected}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            onUpdateFilters({ ...filters, showNeverConnected: e.target.checked })\n          }\n        />\n      </Form.Group>\n      <Form.Group controlId=\"filterActiveSince\" className=\"mb-4\">\n        <Form.Label>\n          <b>Active since</b>\n        </Form.Label>\n        <div className=\"d-block\">\n          <DatePicker\n            maxDate={new Date()}\n            selected={activeSinceDate}\n            onChange={(date: Date) =>\n              onUpdateFilters({\n                ...filters,\n                activeSinceDate: date,\n                showConnected: true,\n                showDisconnected: true,\n                showNeverConnected: true,\n              })\n            }\n            customInput={<Form.Control type=\"search\" />}\n          />\n        </div>\n      </Form.Group>\n      <div className=\"mb-2\">\n        <b>Metadata</b>\n      </div>\n      <Form.Group controlId=\"filterMetadataKey\" className=\"mb-2\">\n        <Form.Label>Key</Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={metadataKey}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            onUpdateFilters({ ...filters, metadataKey: e.target.value })\n          }\n        />\n      </Form.Group>\n      <Form.Group controlId=\"filterMetadataValue\" className=\"mb-4\">\n        <Form.Label>Value</Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={metadataValue}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            onUpdateFilters({ ...filters, metadataValue: e.target.value })\n          }\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default (): React.ReactElement => {\n  const [activePage, setActivePage] = useState(0);\n  const [showSidebar, setShowSidebar] = useState(true);\n  const [filters, setFilters] = useState({});\n  const navigate = useNavigate();\n  const astarte = useAstarte();\n\n  const pageAlerts = useAlerts();\n\n  const fetchDevices = useCallback(\n    async (\n      params: {\n        fromToken?: string;\n        fetchAll?: boolean;\n        previousDevices?: AstarteDevice[];\n      } = {},\n    ): Promise<{ devices: AstarteDevice[]; nextToken: string | null }> => {\n      const { devices, nextToken } = await astarte.client.getDevices({\n        details: true,\n        from: params.fromToken,\n        limit: DEVICES_PER_REQUEST,\n      });\n      const updatedDevices = (params.previousDevices || []).concat(devices);\n      const pageCount = Math.ceil(updatedDevices.length / DEVICES_PER_PAGE);\n      const shouldLoadMore = pageCount < activePage + MAX_SHOWN_PAGES || !!params.fetchAll;\n      if (shouldLoadMore && nextToken) {\n        return fetchDevices({\n          fromToken: nextToken,\n          fetchAll: params.fetchAll,\n          previousDevices: updatedDevices,\n        });\n      }\n      return { devices: updatedDevices, nextToken };\n    },\n    [astarte.client],\n  );\n\n  const devicesFetcher = useFetch(fetchDevices, {});\n\n  const pagedDevices = useMemo(() => {\n    if (devicesFetcher.value == null) {\n      return _.chunk([], DEVICES_PER_PAGE);\n    }\n    const devices = devicesFetcher.value.devices.filter((device) => matchFilters(device, filters));\n    return _.chunk(devices, DEVICES_PER_PAGE);\n  }, [devicesFetcher.value, filters]);\n\n  const pageDevices = (activePage < pagedDevices.length && pagedDevices[activePage]) || [];\n\n  const handlePageChange = (pageIndex: number) => {\n    const fromToken = devicesFetcher.value?.nextToken;\n    const previousDevices = devicesFetcher.value?.devices || [];\n    if (pageIndex > pagedDevices.length - MAX_SHOWN_PAGES && fromToken) {\n      devicesFetcher.refresh({ previousDevices, fromToken });\n    }\n    setActivePage(pageIndex);\n  };\n\n  const handleFilterUpdate = (newFilters: DeviceFilters) => {\n    if (activePage !== 0) {\n      setActivePage(0);\n    }\n    const fromToken = devicesFetcher.value?.nextToken;\n    const previousDevices = devicesFetcher.value?.devices || [];\n    if (fromToken) {\n      devicesFetcher.refresh({ previousDevices, fromToken, fetchAll: true });\n    }\n    setFilters(newFilters);\n  };\n\n  return (\n    <SingleCardPage title=\"Devices\">\n      <pageAlerts.Alerts />\n      <WaitForData\n        data={devicesFetcher.value}\n        status={devicesFetcher.status}\n        fallback={\n          <Container fluid className=\"text-center\">\n            <Spinner animation=\"border\" role=\"status\" />\n          </Container>\n        }\n        errorFallback={\n          <Empty title=\"Couldn't load the device list\" onRetry={() => devicesFetcher.refresh()} />\n        }\n      >\n        {({ devices, nextToken }) =>\n          devices.length === 0 ? (\n            <p>No registered devices</p>\n          ) : (\n            <>\n              <Container fluid>\n                <Row>\n                  <Col>\n                    {pageDevices.length === 0 ? (\n                      <p>No device matches current filters</p>\n                    ) : (\n                      <DeviceTable deviceList={pageDevices} filters={filters} />\n                    )}\n                  </Col>\n                  <Col xs=\"auto\" className=\"p-1\">\n                    <div className=\"p-2 mb-2\" onClick={() => setShowSidebar(!showSidebar)}>\n                      <Icon icon=\"filter\" className=\"mr-1\" />\n                      {showSidebar && <b>Filters</b>}\n                    </div>\n                    {showSidebar && (\n                      <FilterForm filters={filters} onUpdateFilters={handleFilterUpdate} />\n                    )}\n                  </Col>\n                </Row>\n                <Row>\n                  <Col />\n                  <Col>\n                    <TablePagination\n                      activePage={activePage}\n                      canLoadMorePages={!!nextToken}\n                      lastPage={pagedDevices.length}\n                      onPageChange={handlePageChange}\n                    />\n                  </Col>\n                  <Col />\n                </Row>\n              </Container>\n            </>\n          )\n        }\n      </WaitForData>\n      <Button\n        variant=\"primary\"\n        onClick={() => {\n          navigate('/devices/register');\n        }}\n      >\n        Register a new device\n      </Button>\n    </SingleCardPage>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nconst charset = (() => {\n  const newCharset = [];\n  let baseCode;\n  let i;\n\n  baseCode = 'A'.charCodeAt(0);\n  for (i = 0; i < 26; i += 1) {\n    newCharset.push(String.fromCharCode(baseCode + i));\n  }\n\n  baseCode = 'a'.charCodeAt(0);\n  for (i = 0; i < 26; i += 1) {\n    newCharset.push(String.fromCharCode(baseCode + i));\n  }\n\n  baseCode = '0'.charCodeAt(0);\n  for (i = 0; i < 10; i += 1) {\n    newCharset.push(String.fromCharCode(baseCode + i));\n  }\n\n  newCharset.push('-');\n  newCharset.push('_');\n\n  return newCharset;\n})();\n\nexport function byteArrayToUrlSafeBase64(bytes: number[]): string {\n  const binaryArray = bytes.map((b) => b.toString(2));\n\n  const padding = '0'.padEnd(6 - ((bytes.length * 8) % 6), '0');\n  const binaryString = binaryArray.map((b) => b.padStart(8, '0')).join('') + padding;\n  const octects = binaryString.match(/.{6}/g) || [];\n\n  return octects.map((b) => charset[parseInt(b, 2)]).join('');\n}\n\nexport function urlSafeBase64ToByteArray(base64string: string): number[] {\n  let binaryString = '';\n  for (let i = 0; i < base64string.length; i += 1) {\n    binaryString += charset.indexOf(base64string[i]).toString(2).padStart(6, '0');\n  }\n\n  const octects = binaryString.match(/.{1,8}/g);\n  if (octects) {\n    return octects.map((b) => parseInt(b, 2));\n  }\n  return [];\n}\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n/* @global document */\n\nimport React, { useCallback, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { v4 as uuidv4, v5 as uuidv5 } from 'uuid';\nimport { Button, Col, Form, Spinner, Table } from 'react-bootstrap';\nimport type { AstarteDevice, AstarteInterfaceDescriptor } from 'astarte-client';\n\nimport Icon from './components/Icon';\nimport ConfirmModal from './components/modals/Confirm';\nimport FormModal from './components/modals/Form';\nimport SingleCardPage from './ui/SingleCardPage';\nimport { byteArrayToUrlSafeBase64, urlSafeBase64ToByteArray } from './Base64';\nimport { useAlerts } from './AlertManager';\nimport { useAstarte } from './AstarteManager';\n\n/* TODO use clipboard API\n * Right now the 'clipboard-write' is supported\n * only on chromium browser.\n * document.execCommand(\"copy\") is deprecated but\n * for now it's the only reliable way to copy to clipboard\n */\nfunction pasteSecret() {\n  const secretCode = document.querySelector('#secret-code');\n  if (secretCode == null) {\n    return;\n  }\n  const selection = window.getSelection();\n  if (selection == null) {\n    return;\n  }\n  if (selection.rangeCount > 0) {\n    selection.removeAllRanges();\n  }\n  const range = document.createRange();\n  range.selectNode(secretCode);\n  selection.addRange(range);\n  document.execCommand('copy');\n}\n\ntype ColNoLabelProps = React.ComponentProps<typeof Col>;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst ColNoLabel = ({ sm, className = '', ...otherProps }: ColNoLabelProps): React.ReactElement => (\n  <Col sm=\"auto\" className={'col-no-label '.concat(className)} {...otherProps} />\n);\n\ninterface InterfaceIntrospectionRowProps {\n  interfaceDescriptor: AstarteInterfaceDescriptor;\n  onRemove: () => void;\n}\n\nconst InterfaceIntrospectionRow = ({\n  interfaceDescriptor,\n  onRemove,\n}: InterfaceIntrospectionRowProps): React.ReactElement => (\n  <tr>\n    <td>{interfaceDescriptor.name}</td>\n    <td>{interfaceDescriptor.major}</td>\n    <td>{interfaceDescriptor.minor}</td>\n    <td>\n      <Icon icon=\"erase\" onClick={onRemove} />\n    </td>\n  </tr>\n);\n\ninterface IntrospectionControlRowProps {\n  onAddInterface: (interfaceDescriptor: AstarteInterfaceDescriptor) => void;\n}\n\nconst IntrospectionControlRow = ({\n  onAddInterface,\n}: IntrospectionControlRowProps): React.ReactElement => {\n  const initialState: AstarteInterfaceDescriptor = {\n    name: '',\n    major: 0,\n    minor: 1,\n  };\n\n  const [interfaceDescriptor, setInterfaceDescriptor] = useState<AstarteInterfaceDescriptor>(\n    initialState,\n  );\n\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setInterfaceDescriptor((state) => ({ ...state, name: value }));\n  };\n\n  const handleMajorChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setInterfaceDescriptor((state) => ({\n      ...state,\n      major: parseInt(value, 10) || 0,\n    }));\n  };\n\n  const handleMinorChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setInterfaceDescriptor((state) => ({\n      ...state,\n      minor: parseInt(value, 10) || 0,\n    }));\n  };\n\n  return (\n    <tr>\n      <td>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Interface name\"\n          value={interfaceDescriptor.name}\n          onChange={handleNameChange}\n        />\n      </td>\n      <td>\n        <Form.Control\n          type=\"number\"\n          min=\"0\"\n          value={interfaceDescriptor.major}\n          onChange={handleMajorChange}\n        />\n      </td>\n      <td>\n        <Form.Control\n          type=\"number\"\n          min=\"0\"\n          value={interfaceDescriptor.minor}\n          onChange={handleMinorChange}\n        />\n      </td>\n      <td>\n        <Button\n          variant=\"secondary\"\n          disabled={interfaceDescriptor.name === ''}\n          onClick={() => {\n            onAddInterface(interfaceDescriptor);\n            setInterfaceDescriptor(initialState);\n          }}\n        >\n          Add\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\ninterface InstrospectionTableProps {\n  interfaces: Map<AstarteInterfaceDescriptor['name'], AstarteInterfaceDescriptor>;\n  onAddInterface: (interfaceDescriptor: AstarteInterfaceDescriptor) => void;\n  onRemoveInterface: (interfaceDescriptor: AstarteInterfaceDescriptor) => void;\n}\n\nconst InstrospectionTable = ({\n  interfaces,\n  onAddInterface,\n  onRemoveInterface,\n}: InstrospectionTableProps): React.ReactElement => (\n  <Table className=\"mb-4\" responsive>\n    <thead>\n      <tr>\n        <th>Interface name</th>\n        <th>Major</th>\n        <th>Minor</th>\n        <th className=\"action-column\"> </th>\n      </tr>\n    </thead>\n    <tbody>\n      {Array.from(interfaces).map(([key, interfaceDescriptor]) => (\n        <InterfaceIntrospectionRow\n          key={key}\n          interfaceDescriptor={interfaceDescriptor}\n          onRemove={() => onRemoveInterface(interfaceDescriptor)}\n        />\n      ))}\n      <IntrospectionControlRow onAddInterface={onAddInterface} />\n    </tbody>\n  </Table>\n);\n\ninterface NamespaceModalProps {\n  onCancel: () => void;\n  onConfirm: (deviceId: string) => void;\n}\n\nconst NamespaceModal = ({ onCancel, onConfirm }: NamespaceModalProps) => {\n  const handleConfirm = useCallback(\n    (formData: { userNamespace: string; userString?: string }) => {\n      const newUUID = uuidv5(formData.userString || '', formData.userNamespace).replace(/-/g, '');\n      const bytes = (newUUID.match(/.{2}/g) as RegExpMatchArray).map((b) => parseInt(b, 16));\n      const deviceId = byteArrayToUrlSafeBase64(bytes);\n      onConfirm(deviceId);\n    },\n    [onConfirm],\n  );\n\n  return (\n    <FormModal\n      title=\"Generate from name\"\n      confirmLabel=\"Generate ID\"\n      onCancel={onCancel}\n      onConfirm={handleConfirm}\n      schema={{\n        type: 'object',\n        required: ['userNamespace'],\n        properties: {\n          userNamespace: {\n            title: 'Namespace UUID in canonical text format',\n            type: 'string',\n            pattern:\n              '^[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12}$',\n          },\n          userString: {\n            title: 'Name',\n            type: 'string',\n          },\n        },\n      }}\n      uiSchema={{\n        userNamespace: {\n          'ui:autofocus': true,\n          'ui:placeholder': 'e.g.: 753ffc99-dd9d-4a08-a07e-9b0d6ce0bc82',\n        },\n        userString: {\n          'ui:placeholder': 'e.g.: my device',\n        },\n      }}\n      transformErrors={(errors) =>\n        errors.map((error) => {\n          if (error.property === '.userNamespace' && error.name === 'pattern') {\n            return { ...error, message: 'The namespace must be a valid UUID' };\n          }\n          return error;\n        })\n      }\n    />\n  );\n};\n\nexport default (): React.ReactElement => {\n  const searchQuery = new URLSearchParams(useLocation().search);\n  const initialDeviceId = searchQuery.get('deviceId') || '';\n  const [deviceId, setDeviceId] = useState<AstarteDevice['id']>(initialDeviceId);\n  const [deviceSecret, setDeviceSecret] = useState<string>('');\n  const [shouldSendIntrospection, setShouldSendIntrospection] = useState(false);\n  const [introspectionInterfaces, setIntrospectionInterfaces] = useState<\n    Map<AstarteInterfaceDescriptor['name'], AstarteInterfaceDescriptor>\n  >(new Map());\n  const [isRegisteringDevice, setRegisteringDevice] = useState(false);\n  const [showNamespaceModal, setShowNamespaceModal] = useState(false);\n  const [showCredentialSecretModal, setShowCredentialSecretModal] = useState(false);\n  const registrationAlerts = useAlerts();\n  const astarte = useAstarte();\n  const navigate = useNavigate();\n\n  const byteArray = urlSafeBase64ToByteArray(deviceId);\n  const isValidDeviceId = byteArray.length === 17 && byteArray[16] === 0;\n\n  const generateRandomUUID = useCallback(() => {\n    const newUUID = uuidv4().replace(/-/g, '');\n    const bytes = (newUUID.match(/.{2}/g) as RegExpMatchArray).map((b) => parseInt(b, 16));\n    const newDeviceID = byteArrayToUrlSafeBase64(bytes);\n    setDeviceId(newDeviceID);\n  }, []);\n\n  const registerDevice = (e: React.FormEvent<HTMLElement>) => {\n    e.preventDefault();\n    const deviceIntrospection = Object.fromEntries(introspectionInterfaces);\n    const params = {\n      deviceId,\n      introspection: shouldSendIntrospection ? deviceIntrospection : undefined,\n    };\n    setRegisteringDevice(true);\n    astarte.client\n      .registerDevice(params)\n      .then(({ credentialsSecret }) => {\n        setRegisteringDevice(false);\n        setDeviceSecret(credentialsSecret);\n        setShowCredentialSecretModal(true);\n      })\n      .catch((err) => {\n        setRegisteringDevice(false);\n        registrationAlerts.showError(`Couldn't register device: ${err.message}`);\n      });\n  };\n\n  const addInterfaceToIntrospection = (interfaceDescriptor: AstarteInterfaceDescriptor) => {\n    const introspection = new Map(introspectionInterfaces);\n    introspection.set(interfaceDescriptor.name, interfaceDescriptor);\n    setIntrospectionInterfaces(introspection);\n  };\n\n  const removeIntrospectionInterface = (interfaceDescriptor: AstarteInterfaceDescriptor) => {\n    const introspection = new Map(introspectionInterfaces);\n    introspection.delete(interfaceDescriptor.name);\n    setIntrospectionInterfaces(introspection);\n  };\n\n  return (\n    <SingleCardPage title=\"Register Device\" backLink=\"/devices\">\n      <registrationAlerts.Alerts />\n      <Form onSubmit={registerDevice}>\n        <Form.Row className=\"mb-2\">\n          <Form.Group as={Col} controlId=\"deviceIdInput\">\n            <Form.Label>Device ID</Form.Label>\n            <Form.Control\n              type=\"text\"\n              className=\"text-monospace\"\n              placeholder=\"Your device ID\"\n              value={deviceId}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setDeviceId(e.target.value)}\n              autoComplete=\"off\"\n              required\n              isValid={deviceId !== '' && isValidDeviceId}\n              isInvalid={deviceId !== '' && !isValidDeviceId}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Device ID must be a unique 128 bit URL-encoded base64 (without padding) string.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={ColNoLabel}>\n            <Button variant=\"secondary\" className=\"mx-1\" onClick={generateRandomUUID}>\n              Generate random ID\n            </Button>\n            <Button\n              variant=\"secondary\"\n              className=\"mx-1\"\n              onClick={() => setShowNamespaceModal(true)}\n            >\n              Generate from name...\n            </Button>\n          </Form.Group>\n        </Form.Row>\n        <Form.Group\n          controlId=\"sendIntrospectionInput\"\n          className={shouldSendIntrospection ? 'mb-0' : ''}\n        >\n          <Form.Check\n            type=\"checkbox\"\n            label=\"Declare initial introspection\"\n            checked={shouldSendIntrospection}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setShouldSendIntrospection(e.target.checked)\n            }\n          />\n        </Form.Group>\n        {shouldSendIntrospection && (\n          <InstrospectionTable\n            interfaces={introspectionInterfaces}\n            onAddInterface={addInterfaceToIntrospection}\n            onRemoveInterface={removeIntrospectionInterface}\n          />\n        )}\n        <Form.Row className=\"flex-row-reverse pr-2\">\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={!isValidDeviceId || isRegisteringDevice}\n          >\n            {isRegisteringDevice && (\n              <Spinner as=\"span\" size=\"sm\" animation=\"border\" role=\"status\" className=\"mr-2\" />\n            )}\n            Register device\n          </Button>\n        </Form.Row>\n      </Form>\n      {showNamespaceModal && (\n        <NamespaceModal\n          onCancel={() => setShowNamespaceModal(false)}\n          onConfirm={(newDeviceId: string) => {\n            setShowNamespaceModal(false);\n            setDeviceId(newDeviceId);\n          }}\n        />\n      )}\n      {showCredentialSecretModal && (\n        <ConfirmModal\n          title=\"Device Registered!\"\n          confirmLabel=\"OK\"\n          onConfirm={() => navigate('/devices')}\n        >\n          <span>The device credential secret is</span>\n          <pre className=\"my-2\">\n            <code id=\"secret-code\" className=\"m-1 p-2 bg-light\" style={{ fontSize: '1.2em' }}>\n              {deviceSecret}\n            </code>\n            <Icon icon=\"copyPaste\" onClick={pasteSecret} style={{ cursor: 'copy' }} />\n          </pre>\n          <span>\n            Please don&apos;t share the Credentials Secret, and ensure it is transferred securely to\n            your Device.\n            <br />\n            Once the Device pairs for the first time, the Credentials Secret will be associated\n            permanently to the Device and it won&apos;t be changeable anymore.\n          </span>\n        </ConfirmModal>\n      )}\n    </SingleCardPage>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Button, Container, Spinner, Table } from 'react-bootstrap';\nimport type { AstarteFlow } from 'astarte-client';\n\nimport { useAlerts } from './AlertManager';\nimport Icon from './components/Icon';\nimport ConfirmModal from './components/modals/Confirm';\nimport SingleCardPage from './ui/SingleCardPage';\nimport Empty from './components/Empty';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\nimport { useAstarte } from './AstarteManager';\n\ninterface TableRowProps {\n  instance: AstarteFlow;\n  onDelete: (instance: AstarteFlow) => void;\n}\n\nconst TableRow = ({ instance, onDelete }: TableRowProps): React.ReactElement => (\n  <tr>\n    <td>\n      <Icon icon=\"statusConnected\" tooltip=\"Running\" tooltipPlacement=\"right\" />\n    </td>\n    <td>\n      <Link to={`/flows/${instance.name}/edit`}>{instance.name}</Link>\n    </td>\n    <td>{instance.pipeline}</td>\n    <td>\n      <Icon\n        icon=\"delete\"\n        as=\"button\"\n        tooltip=\"Delete instance\"\n        tooltipPlacement=\"left\"\n        onClick={() => onDelete(instance)}\n      />\n    </td>\n  </tr>\n);\n\ninterface InstancesTableProps {\n  instances: AstarteFlow[];\n  onDelete: (instance: AstarteFlow) => void;\n}\n\nconst InstancesTable = ({ instances, onDelete }: InstancesTableProps): React.ReactElement => {\n  if (instances.length === 0) {\n    return <p>No running flows</p>;\n  }\n  return (\n    <Table responsive>\n      <thead>\n        <tr>\n          <th className=\"status-column\">Status</th>\n          <th>Flow Name</th>\n          <th>Pipeline</th>\n          <th className=\"action-column\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {instances.map((instance) => (\n          <TableRow key={instance.name} instance={instance} onDelete={onDelete} />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default (): React.ReactElement => {\n  const [flowToConfirmDelete, setFlowToConfirmDelete] = useState<AstarteFlow['name'] | null>(null);\n  const [isDeletingFlow, setIsDeletingFlow] = useState(false);\n  const deletionAlerts = useAlerts();\n  const navigate = useNavigate();\n  const astarte = useAstarte();\n\n  const fetchInstances = useCallback(async (): Promise<AstarteFlow[]> => {\n    const instanceNames = await astarte.client.getFlowInstances();\n    const instances = await Promise.all(\n      instanceNames.map((name) => astarte.client.getFlowDetails(name)),\n    );\n    return instances;\n  }, [astarte.client]);\n\n  const instancesFetcher = useFetch(fetchInstances);\n\n  const handleDeleteFlow = useCallback(\n    (instance: AstarteFlow) => {\n      setFlowToConfirmDelete(instance.name);\n    },\n    [setFlowToConfirmDelete],\n  );\n\n  const deleteFlow = useCallback(() => {\n    const flowName = flowToConfirmDelete as AstarteFlow['name'];\n    setIsDeletingFlow(true);\n    astarte.client\n      .deleteFlowInstance(flowName)\n      .then(() => {\n        setFlowToConfirmDelete(null);\n        setIsDeletingFlow(false);\n        instancesFetcher.refresh();\n      })\n      .catch((err) => {\n        setIsDeletingFlow(false);\n        deletionAlerts.showError(`Could not delete flow instance: ${err.message}`);\n      });\n  }, [\n    astarte.client,\n    flowToConfirmDelete,\n    setFlowToConfirmDelete,\n    setIsDeletingFlow,\n    instancesFetcher.refresh,\n    deletionAlerts.showError,\n  ]);\n\n  const handleModalCancel = useCallback(() => {\n    setFlowToConfirmDelete(null);\n  }, [setFlowToConfirmDelete]);\n\n  return (\n    <SingleCardPage title=\"Running Flows\">\n      <deletionAlerts.Alerts />\n      <WaitForData\n        data={instancesFetcher.value}\n        status={instancesFetcher.status}\n        fallback={\n          <Container fluid className=\"text-center\">\n            <Spinner animation=\"border\" role=\"status\" />\n          </Container>\n        }\n        errorFallback={\n          <Empty title=\"Couldn't load flow instances\" onRetry={instancesFetcher.refresh} />\n        }\n      >\n        {(instances) => <InstancesTable instances={instances} onDelete={handleDeleteFlow} />}\n      </WaitForData>\n      <Button variant=\"primary\" onClick={() => navigate('/pipelines')}>\n        New flow\n      </Button>\n      {flowToConfirmDelete != null && (\n        <ConfirmModal\n          title=\"Warning\"\n          confirmLabel=\"Remove\"\n          confirmVariant=\"danger\"\n          onCancel={handleModalCancel}\n          onConfirm={deleteFlow}\n          isConfirming={isDeletingFlow}\n        >\n          <p>\n            Delete flow <b>{flowToConfirmDelete}</b>?\n          </p>\n        </ConfirmModal>\n      )}\n    </SingleCardPage>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Spinner } from 'react-bootstrap';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nimport SingleCardPage from './ui/SingleCardPage';\nimport Empty from './components/Empty';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\nimport { useAstarte } from './AstarteManager';\n\nexport default (): React.ReactElement => {\n  const { flowName } = useParams();\n  const astarte = useAstarte();\n  const flowFetcher = useFetch(() => astarte.client.getFlowDetails(flowName));\n\n  return (\n    <SingleCardPage title=\"Flow Details\" backLink=\"/flows\">\n      <WaitForData\n        data={flowFetcher.value}\n        status={flowFetcher.status}\n        fallback={\n          <Container fluid className=\"text-center\">\n            <Spinner animation=\"border\" role=\"status\" />\n          </Container>\n        }\n        errorFallback={\n          <Empty title=\"Couldn't load flow description\" onRetry={flowFetcher.refresh} />\n        }\n      >\n        {(flow) => (\n          <>\n            <h5>Flow configuration</h5>\n            <SyntaxHighlighter language=\"json\" showLineNumbers>\n              {JSON.stringify(flow, null, 4)}\n            </SyntaxHighlighter>\n          </>\n        )}\n      </WaitForData>\n    </SingleCardPage>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { Button, Form, Spinner } from 'react-bootstrap';\n\nimport { useAlerts } from './AlertManager';\nimport { useAstarte } from './AstarteManager';\nimport SingleCardPage from './ui/SingleCardPage';\n\nexport default (): React.ReactElement => {\n  const [searchParams] = useSearchParams();\n  const pipelineId = searchParams.get('pipelineId') || '';\n  const [flow, setFlow] = useState({\n    name: '',\n    config: '{}',\n  });\n  const [isCreatingFlow, setIsCreatingFlow] = useState(false);\n  const navigate = useNavigate();\n  const astarte = useAstarte();\n\n  const parsedFlowConfig = useMemo(() => {\n    try {\n      return JSON.parse(flow.config);\n    } catch {\n      return null;\n    }\n  }, [flow.config]);\n\n  const formAlerts = useAlerts();\n\n  const createFlow = useCallback(() => {\n    setIsCreatingFlow(true);\n    astarte.client\n      .createNewFlowInstance({\n        name: flow.name,\n        config: parsedFlowConfig,\n        pipeline: pipelineId,\n      })\n      .then(() => {\n        navigate('/flows');\n      })\n      .catch((err) => {\n        setIsCreatingFlow(false);\n        formAlerts.showError(`Couldn't instantiate the Flow: ${err.message}`);\n      });\n  }, [\n    setIsCreatingFlow,\n    flow,\n    parsedFlowConfig,\n    pipelineId,\n    astarte.client,\n    navigate,\n    formAlerts.showError,\n  ]);\n\n  const isValidFlowName = flow.name !== '';\n  const isValidFlowConfig = parsedFlowConfig != null;\n  const isValidForm = isValidFlowName && isValidFlowConfig;\n\n  const innerHTML = (\n    <Form>\n      <Form.Group controlId=\"flowNameInput\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Your flow name\"\n          value={flow.name}\n          onChange={(e) => setFlow({ ...flow, name: e.target.value })}\n        />\n      </Form.Group>\n      <label>Pipeline ID</label>\n      <p>\n        <i>{pipelineId}</i>\n      </p>\n      <Form.Group controlId=\"flowConfigInput\">\n        <Form.Label>Flow config</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={12}\n          value={flow.config}\n          onChange={(e) => setFlow({ ...flow, config: e.target.value })}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" disabled={!isValidForm || isCreatingFlow} onClick={createFlow}>\n        {isCreatingFlow && <Spinner className=\"mr-2\" size=\"sm\" animation=\"border\" role=\"status\" />}\n        Instantiate Flow\n      </Button>\n    </Form>\n  );\n\n  return (\n    <SingleCardPage title=\"Flow Configuration\" backLink=\"/pipelines\">\n      <formAlerts.Alerts />\n      {innerHTML}\n    </SingleCardPage>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Button, Card, CardDeck, Container, Spinner } from 'react-bootstrap';\nimport type { AstartePipeline } from 'astarte-client';\n\nimport { useAstarte } from './AstarteManager';\nimport Empty from './components/Empty';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\n\ninterface NewPipelineCardProps {\n  onCreate: () => void;\n}\n\nconst NewPipelineCard = ({ onCreate }: NewPipelineCardProps): React.ReactElement => (\n  <Card className=\"mb-4\">\n    <Card.Header as=\"h5\">New Pipeline</Card.Header>\n    <Card.Body>\n      <Card.Text>Create your custom pipeline</Card.Text>\n      <Button variant=\"secondary\" onClick={onCreate}>\n        Create\n      </Button>\n    </Card.Body>\n  </Card>\n);\n\ninterface PipelineCardProps {\n  pipeline: AstartePipeline;\n  onInstantiate: () => void;\n  showLink: string;\n}\n\nconst PipelineCard = ({\n  pipeline,\n  onInstantiate,\n  showLink,\n}: PipelineCardProps): React.ReactElement => (\n  <Card className=\"mb-4\">\n    <Card.Header as=\"h5\">\n      <Link to={showLink}>{pipeline.name}</Link>\n    </Card.Header>\n    <Card.Body>\n      <Card.Text>{pipeline.description}</Card.Text>\n      <Button variant=\"primary\" onClick={onInstantiate}>\n        Instantiate\n      </Button>\n    </Card.Body>\n  </Card>\n);\n\nexport default (): React.ReactElement => {\n  const astarte = useAstarte();\n  const pipelinesFetcher = useFetch(astarte.client.getPipelines);\n  const navigate = useNavigate();\n\n  return (\n    <Container fluid className=\"p-3\">\n      <h2>Pipelines</h2>\n      <CardDeck className=\"mt-4\">\n        <NewPipelineCard onCreate={() => navigate('/pipelines/new')} />\n        <WaitForData\n          data={pipelinesFetcher.value}\n          status={pipelinesFetcher.status}\n          fallback={\n            <Container fluid className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\" />\n            </Container>\n          }\n          errorFallback={\n            <Empty title=\"Couldn't load available pipelines\" onRetry={pipelinesFetcher.refresh} />\n          }\n        >\n          {(pipelines) => (\n            <>\n              {pipelines.map((pipeline, index) => (\n                <React.Fragment key={`fragment-${index}`}>\n                  {index % 2 ? <div className=\"w-100 d-none d-md-block\" /> : null}\n                  <PipelineCard\n                    pipeline={pipeline}\n                    onInstantiate={() => {\n                      navigate(`/flows/new?pipelineId=${pipeline.name}`);\n                    }}\n                    showLink={`/pipelines/${pipeline.name}/edit`}\n                  />\n                  {index === pipelines.length - 1 && pipelines.length % 2 === 0 ? (\n                    <div className=\"w-50 d-none d-md-block\" />\n                  ) : null}\n                </React.Fragment>\n              ))}\n            </>\n          )}\n        </WaitForData>\n      </CardDeck>\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Button, Col, Container, Row, Spinner } from 'react-bootstrap';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport _ from 'lodash';\n\nimport { useAlerts } from './AlertManager';\nimport { useAstarte } from './AstarteManager';\nimport SingleCardPage from './ui/SingleCardPage';\nimport Empty from './components/Empty';\nimport ConfirmModal from './components/modals/Confirm';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\n\nexport default (): React.ReactElement => {\n  const { pipelineId } = useParams();\n  const astarte = useAstarte();\n  const pipelineFetcher = useFetch(() => astarte.client.getPipeline(pipelineId));\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [isDeletingPipeline, setIsDeletingPipeline] = useState(false);\n  const deletionAlerts = useAlerts();\n  const navigate = useNavigate();\n\n  const deletePipeline = useCallback(() => {\n    setIsDeletingPipeline(true);\n    astarte.client\n      .deletePipeline(pipelineId)\n      .then(() => navigate('/pipelines'))\n      .catch((err) => {\n        deletionAlerts.showError(`Couldn't delete pipeline: ${err.message}`);\n        setIsDeletingPipeline(false);\n        setShowDeleteModal(false);\n      });\n  }, [astarte.client, pipelineId, navigate, deletionAlerts.showError]);\n\n  return (\n    <>\n      <SingleCardPage title=\"Pipeline Details\" backLink=\"/pipelines\">\n        <deletionAlerts.Alerts />\n        <WaitForData\n          data={pipelineFetcher.value}\n          status={pipelineFetcher.status}\n          fallback={\n            <Container fluid className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\" />\n            </Container>\n          }\n          errorFallback={\n            <Empty title=\"Couldn't load pipeline source\" onRetry={pipelineFetcher.refresh} />\n          }\n        >\n          {(pipeline) => (\n            <Row>\n              <Col>\n                <h5 className=\"mt-2 mb-2\">Name</h5>\n                <p>{pipeline.name}</p>\n                {pipeline.description && (\n                  <>\n                    <h5 className=\"mt-2 mb-2\">Description</h5>\n                    <p>{pipeline.description}</p>\n                  </>\n                )}\n                <h5 className=\"mt-2 mb-2\">Source</h5>\n                <SyntaxHighlighter language=\"text\" showLineNumbers>\n                  {pipeline.source}\n                </SyntaxHighlighter>\n                {!_.isEmpty(pipeline.schema) && (\n                  <>\n                    <h5 className=\"mt-2 mb-2\">Schema</h5>\n                    <SyntaxHighlighter language=\"json\" showLineNumbers>\n                      {JSON.stringify(pipeline.schema, null, 2)}\n                    </SyntaxHighlighter>\n                  </>\n                )}\n              </Col>\n            </Row>\n          )}\n        </WaitForData>\n      </SingleCardPage>\n      {pipelineFetcher.status === 'ok' && (\n        <Row className=\"justify-content-end m-3\">\n          <Button\n            variant=\"danger\"\n            onClick={() => setShowDeleteModal(true)}\n            disabled={isDeletingPipeline}\n          >\n            {isDeletingPipeline && (\n              <Spinner as=\"span\" size=\"sm\" animation=\"border\" role=\"status\" className=\"mr-2\" />\n            )}\n            Delete pipeline\n          </Button>\n        </Row>\n      )}\n      {showDeleteModal && (\n        <ConfirmModal\n          title=\"Warning\"\n          confirmLabel=\"Remove\"\n          confirmVariant=\"danger\"\n          onCancel={() => setShowDeleteModal(false)}\n          onConfirm={deletePipeline}\n          isConfirming={isDeletingPipeline}\n        >\n          <p>\n            Delete pipeline <b>{pipelineId}</b>?\n          </p>\n        </ConfirmModal>\n      )}\n    </>\n  );\n};\n","/*\n  This file is part of Astarte.\n\n  Copyright 2020 Ispirata Srl\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport { DefaultPortModel, NodeModel, PortModelAlignment } from '@projectstorm/react-diagrams';\nimport _ from 'lodash';\nimport type { AstarteBlock } from 'astarte-client';\n\nfunction isEmptyValue(value: unknown): boolean {\n  if (Array.isArray(value)) {\n    return value.length === 0;\n  }\n  if (typeof value === 'object') {\n    return _.isEmpty(value);\n  }\n  if (typeof value === 'string') {\n    return value === '';\n  }\n  return !value;\n}\n\nfunction encodeValue(value: unknown): any {\n  if (Array.isArray(value)) {\n    const encodedValues: any[] = value.map((v) => encodeValue(v));\n    return `[${encodedValues.join(',')}]`;\n  }\n  if (typeof value === 'object' && value != null) {\n    const encodedValues: any[] = Object.entries(value).map(\n      ([key, innerValue]) => `${key}: ${encodeValue(innerValue)}`,\n    );\n    return `{${encodedValues.join(',')}}`;\n  }\n  if (typeof value === 'string') {\n    return `\"${value}\"`;\n  }\n  return value;\n}\n\ninterface NativeBlockModelConfig {\n  name: AstarteBlock['name'];\n  blockType: AstarteBlock['type'];\n  onSettingsClick?: (...args: any[]) => void;\n}\n\nclass NativeBlockModel extends NodeModel {\n  name: AstarteBlock['name'];\n\n  blockType: AstarteBlock['type'];\n\n  onSettingsClick: (...args: any[]) => void;\n\n  properties: Record<string, unknown>;\n\n  inPorts: DefaultPortModel[];\n\n  outPorts: DefaultPortModel[];\n\n  constructor({ name, blockType, onSettingsClick = () => {} }: NativeBlockModelConfig) {\n    super({\n      type: 'astarte-native',\n    });\n\n    this.outPorts = [];\n    if (blockType.includes('producer')) {\n      const outPort = new DefaultPortModel({\n        in: false,\n        name: 'Out',\n        label: 'Out',\n        alignment: PortModelAlignment.RIGHT,\n      });\n      super.addPort(outPort);\n      this.outPorts.push(outPort);\n    }\n\n    this.inPorts = [];\n    if (blockType.includes('consumer')) {\n      const inPort = new DefaultPortModel({\n        in: true,\n        name: 'In',\n        label: 'In',\n        alignment: PortModelAlignment.LEFT,\n      });\n      super.addPort(inPort);\n      this.inPorts.push(inPort);\n    }\n\n    this.name = name;\n    this.blockType = blockType;\n    this.properties = {};\n    this.onSettingsClick = onSettingsClick;\n  }\n\n  getInPorts(): DefaultPortModel[] {\n    return this.inPorts;\n  }\n\n  getOutPorts(): DefaultPortModel[] {\n    return this.outPorts;\n  }\n\n  getProperties(): Record<string, unknown> {\n    return this.properties;\n  }\n\n  setProperties(properties: Record<string, unknown>): void {\n    this.properties = properties;\n  }\n\n  toScript(): string {\n    const params = Object.entries(this.properties)\n      .filter(([, value]) => !isEmptyValue(value))\n      .map(([key, value]) => `\\n    .${key}(${encodeValue(value)})`);\n    if (this.name === 'container') {\n      return this.name + params.concat(`\\n    .type(\"${this.blockType}\")`).join('');\n    }\n    if (this.name === 'dynamic_virtual_device_pool') {\n      return `virtual_device_pool${params.join('')}`;\n    }\n    return this.name + params.join('');\n  }\n}\n\nexport default NativeBlockModel;\n","/*\n  This file is part of Astarte.\n\n  Copyright 2020 Ispirata Srl\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport React from 'react';\nimport { DefaultPortLabel, DiagramEngine } from '@projectstorm/react-diagrams';\n\nimport Icon from './Icon';\nimport NativeBlockModel from '../models/NativeBlockModel';\n\ninterface Props {\n  engine: DiagramEngine;\n  node: NativeBlockModel;\n  hasSettings: boolean;\n}\n\nconst NativeBlockWidget = ({ engine, node, hasSettings }: Props): React.ReactElement => {\n  const { name } = node;\n  const inPorts = node.getInPorts();\n  const outPorts = node.getOutPorts();\n\n  const classes = ['native-node', node.blockType];\n  if (node.isSelected()) {\n    classes.push('selected');\n  }\n\n  return (\n    <div className={classes.join(' ')} data-default-node-name={name}>\n      <div className=\"node-header\">\n        <div className=\"node-title\">{name}</div>\n        {hasSettings && (\n          <div className=\"settings-icon\" onClick={(e) => node.onSettingsClick(e, node)}>\n            <Icon icon=\"settings\" />\n          </div>\n        )}\n      </div>\n      <div className=\"ports\">\n        <div className=\"port-container\">\n          {inPorts.map((port) => (\n            <DefaultPortLabel engine={engine} port={port} key={port.getOptions().id} />\n          ))}\n        </div>\n        <div className=\"port-container\">\n          {outPorts.map((port) => (\n            <DefaultPortLabel engine={engine} port={port} key={port.getOptions().id} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NativeBlockWidget;\n","/*\n  This file is part of Astarte.\n\n  Copyright 2020 Ispirata Srl\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport React from 'react';\nimport _ from 'lodash';\nimport {\n  AbstractReactFactory,\n  BaseModel,\n  GenerateWidgetEvent,\n} from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams';\nimport type { AstarteBlock } from 'astarte-client';\n\nimport NativeBlockModel from '../models/NativeBlockModel';\nimport NativeBlockWidget from './NativeBlockWidget';\n\ntype GenerateModelEvent = Parameters<AbstractReactFactory['generateModel']>['0'] & {\n  name: AstarteBlock['name'];\n  type: AstarteBlock['type'];\n  onSettingsClick?: (...args: any[]) => void;\n};\n\nclass NativeBlockFactory extends AbstractReactFactory<BaseModel, DiagramEngine> {\n  blockDefinitions: Map<string, AstarteBlock>;\n\n  constructor(blockDefinitions: AstarteBlock[]) {\n    super('astarte-native');\n    this.blockDefinitions = new Map();\n    this.updateDefinitions(blockDefinitions);\n  }\n\n  generateReactWidget(event: GenerateWidgetEvent<NativeBlockModel>): React.ReactElement {\n    const node = event.model as NativeBlockModel;\n    const block = this.blockDefinitions.get(`${node.blockType}-${node.name}`);\n    if (!block) {\n      return <></>;\n    }\n    const hasSettings = !_.isEmpty(block.schema) && !_.isEmpty(block.schema.properties);\n    return <NativeBlockWidget engine={this.engine} node={node} hasSettings={hasSettings} />;\n  }\n\n  generateModel({ name, type, onSettingsClick }: GenerateModelEvent): NativeBlockModel {\n    const block = this.blockDefinitions.get(`${type}-${name}`);\n    return new NativeBlockModel({\n      name: block ? block.name : name,\n      blockType: block ? block.type : type,\n      onSettingsClick,\n    });\n  }\n\n  updateDefinitions(blocks: AstarteBlock[]): void {\n    if (blocks && blocks.length > 0) {\n      this.blockDefinitions = new Map(blocks.map((b) => [`${b.type}-${b.name}`, b]));\n    } else {\n      this.blockDefinitions = new Map();\n    }\n  }\n}\n\nexport default NativeBlockFactory;\n","/*\n  This file is part of Astarte.\n\n  Copyright 2020 Ispirata Srl\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport createEngine, { DiagramModel } from '@projectstorm/react-diagrams';\nimport type { AstarteBlock } from 'astarte-client';\n\nimport NativeBlockFactory from './NativeBlockFactory';\nimport NativeBlockModel from '../models/NativeBlockModel';\n\nconst filterSortBlocks = (blocks: AstarteBlock[], type: AstarteBlock['type']) => {\n  if (!blocks || blocks.length === 0) {\n    return [];\n  }\n  return blocks\n    .filter((block) => block.type === type)\n    .sort((block1, block2) => (block1.name > block2.name ? 1 : -1));\n};\n\ninterface BlockMenuItem {\n  block: AstarteBlock;\n}\n\nconst BlockMenuItem = ({ block }: BlockMenuItem) => (\n  <div\n    className={`block-item ${block.type}`}\n    onDragStart={(e) => {\n      e.dataTransfer.setData('block-name', block.name);\n      e.dataTransfer.setData('block-type', block.type);\n    }}\n    draggable\n  >\n    {block.name}\n  </div>\n);\n\ninterface EditorSidebarProps {\n  blocks: AstarteBlock[];\n}\n\nconst EditorSidebar = ({ blocks }: EditorSidebarProps) => (\n  <div className=\"flow-editor-sidebar\">\n    <div className=\"block-label\">Producer</div>\n    {filterSortBlocks(blocks, 'producer').map((block) => (\n      <BlockMenuItem key={block.name} block={block} />\n    ))}\n    <div className=\"block-label\">Producer & Consumer</div>\n    {filterSortBlocks(blocks, 'producer_consumer').map((block) => (\n      <BlockMenuItem key={block.name} block={block} />\n    ))}\n    <div className=\"block-label\">Consumer</div>\n    {filterSortBlocks(blocks, 'consumer').map((block) => (\n      <BlockMenuItem key={block.name} block={block} />\n    ))}\n  </div>\n);\n\nconst getEngine = (model: DiagramModel, nodeFactory: NativeBlockFactory) => {\n  const engine = createEngine();\n  engine.getNodeFactories().registerFactory(nodeFactory);\n  engine.setModel(model);\n  return engine;\n};\n\ninterface VisualFlowEditorProps {\n  className?: string;\n  blocks: AstarteBlock[];\n  model: DiagramModel;\n  onNodeSettingsClick?: (...args: any[]) => void;\n}\n\nconst VisualFlowEditor = ({\n  className = '',\n  blocks,\n  model,\n  onNodeSettingsClick,\n}: VisualFlowEditorProps): React.ReactElement => {\n  const [nodeFactory] = useState(new NativeBlockFactory(blocks));\n  const [engine] = useState(getEngine(model, nodeFactory));\n\n  useEffect(() => {\n    nodeFactory.updateDefinitions(blocks);\n  }, [blocks]);\n\n  const addBlock = useCallback(\n    (name, type, position) => {\n      const newNode = nodeFactory.generateModel({\n        name,\n        type,\n        onSettingsClick: onNodeSettingsClick,\n      });\n      newNode.setPosition(position.x - 30, position.y - 20);\n      model.addNode(newNode);\n      engine.repaintCanvas();\n    },\n    [onNodeSettingsClick],\n  );\n\n  return (\n    <div className={['flow-editor', className].join(' ')}>\n      <EditorSidebar blocks={blocks} />\n      <div\n        className=\"canvas-container\"\n        onDragOver={(e) => e.preventDefault()}\n        onDrop={(e) => {\n          const blockName = e.dataTransfer.getData('block-name');\n          const blockType = e.dataTransfer.getData('block-type');\n          addBlock(blockName, blockType, engine.getRelativeMousePoint(e));\n        }}\n      >\n        <CanvasWidget engine={engine} />\n      </div>\n    </div>\n  );\n};\n\nfunction getNewModel(): DiagramModel {\n  return new DiagramModel();\n}\n\nfunction nodeModelToSource(model: DiagramModel): string {\n  const seenIds = new Set();\n  const chain = [];\n  const pipelineBlocks = model.getNodes() as NativeBlockModel[];\n\n  const sources = pipelineBlocks.filter((b) => b.blockType === 'producer');\n  if (sources.length === 0) {\n    throw new Error('Pipelines must start with a producer block');\n  }\n\n  if (sources.length > 1) {\n    throw new Error('Multiple producer blocks are not supported');\n  }\n\n  const sourceBlock = sources[0];\n  chain.push(sourceBlock);\n  seenIds.add(sourceBlock.getOptions().id);\n\n  let prevBlock = sourceBlock;\n  let nextBlock;\n  let loopCounter = 0;\n\n  do {\n    const nextLinks = Object.values(prevBlock.outPorts[0].links);\n\n    if (nextLinks.length === 0) {\n      throw new Error('Pipelines must end with a consumer block');\n    }\n\n    if (nextLinks.length > 1) {\n      throw new Error('Multiple out connections are not supported');\n    }\n\n    nextBlock = nextLinks[0].getTargetPort().getParent() as NativeBlockModel;\n\n    if (seenIds.has(nextBlock.getOptions().id)) {\n      throw new Error('Pipelines cannot form a loop');\n    }\n\n    chain.push(nextBlock);\n    seenIds.add(nextBlock.getOptions().id);\n    prevBlock = nextBlock;\n\n    loopCounter += 1;\n    if (loopCounter > 50) {\n      throw new Error('Pipeline too long');\n    }\n  } while (nextBlock.blockType !== 'consumer');\n\n  return chain.map((block) => block.toScript()).join('\\n| ');\n}\n\nexport { getNewModel, nodeModelToSource };\nexport default VisualFlowEditor;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Form, Spinner } from 'react-bootstrap';\nimport Ajv from 'ajv';\nimport metaSchemaDraft04 from 'ajv/lib/refs/json-schema-draft-04.json';\nimport { AstartePipeline } from 'astarte-client';\nimport type { AstarteBlock } from 'astarte-client';\nimport _ from 'lodash';\n\nimport { useAlerts } from './AlertManager';\nimport { useAstarte } from './AstarteManager';\nimport FormModal from './components/modals/Form';\nimport VisualFlowEditor, { getNewModel, nodeModelToSource } from './components/VisualFlowEditor';\nimport type NativeBlockModel from './models/NativeBlockModel';\nimport SingleCardPage from './ui/SingleCardPage';\n\nconst ajv = new Ajv({ schemaId: 'id' });\najv.addMetaSchema(metaSchemaDraft04);\n\ninterface CommandRowProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst CommandRow = ({ className = '', children }: CommandRowProps): React.ReactElement => (\n  <div className={['d-flex flex-row-reverse', className].join(' ')}>{children}</div>\n);\n\nexport default (): React.ReactElement => {\n  const [editorModel] = useState(getNewModel());\n  const [isCreatingPipeline, setIsCreatingPipeline] = useState(false);\n  const [blocks, setBlocks] = useState<AstarteBlock[]>([]);\n  const [activeModal, setActiveModal] = useState<React.ReactElement | null>(null);\n  const [pipeline, setPipeline] = useState({\n    name: '',\n    description: '',\n    source: '',\n    schema: '',\n  });\n  const formAlerts = useAlerts();\n  const astarte = useAstarte();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    astarte.client\n      .getBlocks()\n      .then((astarteBlocks) => {\n        const containerBlock = astarteBlocks.find(\n          (block) => block.name === 'container' && block.type === 'producer_consumer',\n        );\n        if (!containerBlock) {\n          setBlocks(astarteBlocks);\n        } else {\n          const container = _.merge({}, containerBlock);\n          _.unset(container, 'schema.properties.type');\n          const containerProducer = _.merge({}, container, { type: 'producer' });\n          const containerConsumer = _.merge({}, container, { type: 'consumer' });\n          const parsedBlocks = astarteBlocks\n            .filter((b) => b.name !== 'container')\n            .concat([container, containerConsumer, containerProducer]);\n          setBlocks(parsedBlocks);\n        }\n      })\n      .catch((error) => {\n        formAlerts.showError(`Couldn't retrieve block descriptions: ${error.message}`);\n      });\n  }, [astarte.client]);\n\n  const schemaObject = useMemo(() => {\n    if (pipeline.schema === '') {\n      return undefined;\n    }\n    try {\n      const schema = JSON.parse(pipeline.schema);\n      return schema;\n    } catch (e) {\n      return undefined;\n    }\n  }, [pipeline.schema]);\n\n  const createPipeline = useCallback(() => {\n    setIsCreatingPipeline(true);\n    astarte.client\n      .registerPipeline(\n        new AstartePipeline({\n          name: pipeline.name,\n          source: pipeline.source,\n          description: pipeline.description,\n          schema: schemaObject || {},\n        }),\n      )\n      .then(() => navigate('/pipelines'))\n      .catch((err) => {\n        setIsCreatingPipeline(false);\n        formAlerts.showError(`Couldn't create pipeline: ${err.message}`);\n      });\n  }, [\n    astarte.client,\n    navigate,\n    setIsCreatingPipeline,\n    formAlerts.showError,\n    pipeline,\n    schemaObject,\n  ]);\n\n  const isValidSchema = useMemo(() => {\n    if (!schemaObject) {\n      return false;\n    }\n    try {\n      ajv.compile(schemaObject);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }, [schemaObject, ajv]);\n\n  const blockSettingsClickHandler = useCallback(\n    (e, node: NativeBlockModel) => {\n      const blockDefinition = blocks.find(\n        (block) => node.name === block.name && node.blockType === block.type,\n      );\n      if (!blockDefinition) {\n        return;\n      }\n\n      editorModel.setLocked(true);\n\n      setActiveModal(\n        <FormModal\n          title={`Settings for ${node.name}`}\n          schema={blockDefinition.schema}\n          initialData={node.getProperties()}\n          confirmLabel=\"Apply settings\"\n          onCancel={() => {\n            setActiveModal(null);\n            editorModel.setLocked(false);\n          }}\n          onConfirm={(props) => {\n            node.setProperties(props);\n            setActiveModal(null);\n            editorModel.setLocked(false);\n          }}\n        />,\n      );\n    },\n    [blocks],\n  );\n\n  const sourceConversionHandler = () => {\n    try {\n      const pipelineSource = nodeModelToSource(editorModel);\n      setPipeline({ ...pipeline, source: pipelineSource });\n    } catch (error) {\n      formAlerts.showError(error.message);\n    }\n  };\n\n  const isValidPipelineName = pipeline.name !== '';\n  const isValidSource = pipeline.source !== '';\n  const isValidForm = isValidPipelineName && isValidSource;\n\n  return (\n    <SingleCardPage\n      title=\"New Pipeline\"\n      backLink=\"/pipelines\"\n      docsLink=\"https://docs.astarte-platform.org/flow/snapshot/\"\n    >\n      <formAlerts.Alerts />\n      <Form>\n        <Form.Group controlId=\"pipeline-name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={pipeline.name}\n            onChange={(e) => setPipeline({ ...pipeline, name: e.target.value })}\n          />\n        </Form.Group>\n        {pipeline.source === '' ? (\n          <>\n            <Form.Group controlId=\"pipeline-source\">\n              <VisualFlowEditor\n                className=\"mb-2\"\n                blocks={blocks}\n                model={editorModel}\n                onNodeSettingsClick={blockSettingsClickHandler}\n              />\n            </Form.Group>\n            <CommandRow>\n              <Button variant=\"primary\" onClick={sourceConversionHandler}>\n                Generate pipeline source\n              </Button>\n            </CommandRow>\n          </>\n        ) : (\n          <>\n            <Form.Group controlId=\"pipeline-source\">\n              <Form.Label>Source</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={8}\n                spellCheck={false}\n                value={pipeline.source}\n                onChange={(e) => setPipeline({ ...pipeline, source: e.target.value })}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"pipeline-schema\">\n              <Form.Label>Schema</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={8}\n                spellCheck={false}\n                value={pipeline.schema}\n                isValid={pipeline.schema !== '' && isValidSchema}\n                isInvalid={pipeline.schema !== '' && !isValidSchema}\n                onChange={(e) => setPipeline({ ...pipeline, schema: e.target.value })}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"pipeline-description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={pipeline.description}\n                onChange={(e) => setPipeline({ ...pipeline, description: e.target.value })}\n              />\n            </Form.Group>\n            <CommandRow>\n              <Button\n                variant=\"primary\"\n                onClick={createPipeline}\n                disabled={!isValidForm || isCreatingPipeline}\n              >\n                {isCreatingPipeline && (\n                  <Spinner as=\"span\" size=\"sm\" animation=\"border\" role=\"status\" className=\"mr-2\" />\n                )}\n                Create new pipeline\n              </Button>\n            </CommandRow>\n          </>\n        )}\n      </Form>\n      {activeModal}\n    </SingleCardPage>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Badge, Button, Card, CardDeck, Container, Spinner } from 'react-bootstrap';\nimport { AstarteNativeBlock } from 'astarte-client';\nimport type { AstarteBlock } from 'astarte-client';\n\nimport WaitForData from './components/WaitForData';\nimport Empty from './components/Empty';\nimport useFetch from './hooks/useFetch';\nimport { useAstarte } from './AstarteManager';\n\ninterface NewBlockCardProps {\n  onCreate: () => void;\n}\n\nfunction NewBlockCard({ onCreate }: NewBlockCardProps) {\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header as=\"h5\">New Block</Card.Header>\n      <Card.Body>\n        <Card.Text>Create your custom block</Card.Text>\n        <Button variant=\"secondary\" onClick={onCreate}>\n          Create\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nconst blockTypeToLabel = {\n  consumer: 'Consumer',\n  producer: 'Producer',\n  producer_consumer: 'Producer & Consumer',\n};\n\ninterface BlockCardProps {\n  block: AstarteBlock;\n  onShow: () => void;\n}\n\nfunction BlockCard({ block, onShow }: BlockCardProps) {\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header as=\"h5\" className=\"d-flex justify-content-between align-items-center\">\n        <Button variant=\"link\" className=\"p-0\" onClick={onShow}>\n          {block.name}\n        </Button>\n        {block instanceof AstarteNativeBlock && (\n          <Badge variant=\"secondary\" className=\"h6 text-light\">\n            native\n          </Badge>\n        )}\n      </Card.Header>\n      <Card.Body>\n        <Card.Text>{blockTypeToLabel[block.type]}</Card.Text>\n        <Button variant=\"primary\" onClick={onShow}>\n          Show\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default (): React.ReactElement => {\n  const astarte = useAstarte();\n  const blocksFetcher = useFetch(astarte.client.getBlocks);\n  const navigate = useNavigate();\n\n  return (\n    <Container fluid className=\"p-3\">\n      <h2>Blocks</h2>\n      <CardDeck className=\"mt-4\">\n        <NewBlockCard onCreate={() => navigate('/blocks/new')} />\n        <WaitForData\n          data={blocksFetcher.value}\n          status={blocksFetcher.status}\n          fallback={\n            <Container fluid className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\" />\n            </Container>\n          }\n          errorFallback={\n            <Empty title=\"Couldn't load available blocks\" onRetry={blocksFetcher.refresh} />\n          }\n        >\n          {(blocks) => (\n            <>\n              {blocks.map((block, index) => (\n                <React.Fragment key={`fragment-${index}`}>\n                  {index % 2 ? <div className=\"w-100 d-none d-md-block\" /> : null}\n                  <BlockCard block={block} onShow={() => navigate(`/blocks/${block.name}/edit`)} />\n                  {index === blocks.length - 1 && blocks.length % 2 === 0 ? (\n                    <div className=\"w-50 d-none d-md-block\" />\n                  ) : null}\n                </React.Fragment>\n              ))}\n            </>\n          )}\n        </WaitForData>\n      </CardDeck>\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Button, Col, Container, Row, Spinner } from 'react-bootstrap';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { AstarteCustomBlock } from 'astarte-client';\n\nimport { useAlerts } from './AlertManager';\nimport Empty from './components/Empty';\nimport ConfirmModal from './components/modals/Confirm';\nimport SingleCardPage from './ui/SingleCardPage';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\nimport { useAstarte } from './AstarteManager';\n\nconst blockTypeToLabel = {\n  consumer: 'Consumer',\n  producer: 'Producer',\n  producer_consumer: 'Producer & Consumer',\n};\n\nexport default (): React.ReactElement => {\n  const { blockId } = useParams();\n  const astarte = useAstarte();\n  const blockFetcher = useFetch(() => astarte.client.getBlock(blockId));\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [isDeletingBlock, setIsDeletingBlock] = useState(false);\n  const deletionAlerts = useAlerts();\n  const navigate = useNavigate();\n\n  const deleteBlock = useCallback(() => {\n    setIsDeletingBlock(true);\n    astarte.client\n      .deleteBlock(blockId)\n      .then(() => navigate('/blocks'))\n      .catch((err: Error) => {\n        setIsDeletingBlock(false);\n        deletionAlerts.showError(`Couldn't delete block: ${err.message}`);\n        setShowDeleteModal(false);\n      });\n  }, [astarte.client, navigate, setIsDeletingBlock, blockId, deletionAlerts.showError]);\n\n  return (\n    <>\n      <SingleCardPage title=\"Block Details\" backLink=\"/blocks\">\n        <deletionAlerts.Alerts />\n        <WaitForData\n          data={blockFetcher.value}\n          status={blockFetcher.status}\n          fallback={\n            <Container fluid className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\" />\n            </Container>\n          }\n          errorFallback={\n            <Empty title=\"Couldn't load block source\" onRetry={blockFetcher.refresh} />\n          }\n        >\n          {(block) => (\n            <Row>\n              <Col>\n                <h5 className=\"mt-2 mb-2\">Name</h5>\n                <p>{block.name}</p>\n                <h5 className=\"mt-2 mb-2\">Type</h5>\n                <p>{blockTypeToLabel[block.type]}</p>\n                {block instanceof AstarteCustomBlock && (\n                  <>\n                    <h5 className=\"mt-2 mb-2\">Source</h5>\n                    <SyntaxHighlighter language=\"json\" showLineNumbers>\n                      {block.source}\n                    </SyntaxHighlighter>\n                  </>\n                )}\n                <h5 className=\"mt-2 mb-2\">Schema</h5>\n                <SyntaxHighlighter language=\"json\" showLineNumbers>\n                  {JSON.stringify(block.schema, null, 2)}\n                </SyntaxHighlighter>\n              </Col>\n            </Row>\n          )}\n        </WaitForData>\n      </SingleCardPage>\n      {blockFetcher.status === 'ok' && blockFetcher.value instanceof AstarteCustomBlock && (\n        <Row className=\"justify-content-end m-3\">\n          <Button\n            variant=\"danger\"\n            onClick={() => setShowDeleteModal(true)}\n            disabled={isDeletingBlock}\n          >\n            {isDeletingBlock && (\n              <Spinner as=\"span\" size=\"sm\" animation=\"border\" role=\"status\" className=\"mr-2\" />\n            )}\n            Delete block\n          </Button>\n        </Row>\n      )}\n      {showDeleteModal && (\n        <ConfirmModal\n          title=\"Warning\"\n          confirmLabel=\"Remove\"\n          confirmVariant=\"danger\"\n          onCancel={() => setShowDeleteModal(false)}\n          onConfirm={deleteBlock}\n          isConfirming={isDeletingBlock}\n        >\n          <p>\n            Delete block <b>{blockId}</b>?\n          </p>\n        </ConfirmModal>\n      )}\n    </>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Form, Row, Spinner } from 'react-bootstrap';\nimport type { AstarteCustomBlock } from 'astarte-client';\n\nimport { useAlerts } from './AlertManager';\nimport { useAstarte } from './AstarteManager';\nimport SingleCardPage from './ui/SingleCardPage';\n\nconst isJSON = (string: string) => {\n  try {\n    JSON.parse(string);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\ninterface BlockState {\n  name: AstarteCustomBlock['name'];\n  source: AstarteCustomBlock['source'];\n  type: AstarteCustomBlock['type'];\n  schema: string;\n}\n\nexport default (): React.ReactElement => {\n  const [block, setBlock] = useState<BlockState>({\n    name: '',\n    source: '',\n    type: 'producer',\n    schema: '',\n  });\n  const [isValidated, setIsValidated] = useState(false);\n  const [isCreatingBlock, setIsCreatingBlock] = useState(false);\n  const creationAlerts = useAlerts();\n  const astarte = useAstarte();\n  const navigate = useNavigate();\n\n  const createBlock = useCallback(() => {\n    setIsCreatingBlock(true);\n    const newBlock = {\n      ...block,\n      schema: JSON.parse(block.schema.trim()),\n    };\n    astarte.client\n      .registerBlock(newBlock)\n      .then(() => navigate('/blocks'))\n      .catch((err) => {\n        setIsCreatingBlock(false);\n        creationAlerts.showError(`Couldn't create block: ${err.message}`);\n      });\n  }, [astarte.client, block, creationAlerts.showError, navigate]);\n\n  const isValidBlockName = /^[a-zA-Z][a-zA-Z0-9-_]*$/.test(block.name);\n  const isValidBlockSource = block.source !== '';\n  const isValidBlockType = ['producer', 'consumer', 'producer_consumer'].includes(block.type);\n  const isValidBlockSchema = isJSON(block.schema.trim());\n  const isValidBlock =\n    isValidBlockName && isValidBlockSource && isValidBlockType && isValidBlockSchema;\n\n  const handleSubmit = useCallback(() => {\n    setIsValidated(true);\n    if (isValidBlock) {\n      createBlock();\n    }\n  }, [setIsValidated, createBlock, isValidBlock]);\n\n  return (\n    <>\n      <SingleCardPage title=\"New Block\" backLink=\"/blocks\">\n        <creationAlerts.Alerts />\n        <Form noValidate>\n          <Form.Group controlId=\"block-name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={block.name}\n              onChange={(e) => setBlock({ ...block, name: e.target.value })}\n              isValid={isValidated && isValidBlockName}\n              isInvalid={isValidated && !isValidBlockName}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"block-type\">\n            <Form.Label>Type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              custom\n              value={block.type}\n              onChange={(e) =>\n                setBlock({ ...block, type: e.target.value as AstarteCustomBlock['type'] })\n              }\n              isValid={isValidated && isValidBlockType}\n              isInvalid={isValidated && !isValidBlockType}\n            >\n              <option value=\"producer\">Producer</option>\n              <option value=\"consumer\">Consumer</option>\n              <option value=\"producer_consumer\">Producer &amp; Consumer</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"block-source\">\n            <Form.Label>Source</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={12}\n              value={block.source}\n              onChange={(e) => setBlock({ ...block, source: e.target.value })}\n              isValid={isValidated && isValidBlockSource}\n              isInvalid={isValidated && !isValidBlockSource}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"block-schema\">\n            <Form.Label>Schema</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={12}\n              value={block.schema}\n              onChange={(e) => setBlock({ ...block, schema: e.target.value })}\n              isValid={isValidated && isValidBlockSchema}\n              isInvalid={isValidated && !isValidBlockSchema}\n            />\n          </Form.Group>\n        </Form>\n      </SingleCardPage>\n      <Row className=\"justify-content-end m-3\">\n        <Button\n          variant=\"primary\"\n          onClick={isCreatingBlock ? undefined : handleSubmit}\n          disabled={isCreatingBlock || !isValidBlock}\n        >\n          {isCreatingBlock && (\n            <Spinner as=\"span\" size=\"sm\" animation=\"border\" role=\"status\" className=\"mr-2\" />\n          )}\n          Create new block\n        </Button>\n      </Row>\n    </>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Container, Form, Spinner } from 'react-bootstrap';\n\nimport Empty from './components/Empty';\nimport ConfirmModal from './components/modals/Confirm';\nimport SingleCardPage from './ui/SingleCardPage';\nimport { useAlerts } from './AlertManager';\nimport { useAstarte } from './AstarteManager';\n\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\n\ntype RealmSettings = {\n  publicKey: string;\n};\n\ninterface RealmSettingsFormProps {\n  initialValues: RealmSettings;\n  onSubmit: (values: RealmSettings) => void;\n  isUpdatingSettings: boolean;\n}\n\nconst RealmSettingsForm = ({\n  initialValues,\n  onSubmit,\n  isUpdatingSettings,\n}: RealmSettingsFormProps) => {\n  const [values, setValues] = useState(initialValues);\n  const canSubmit = values.publicKey.trim() !== '' && values.publicKey !== initialValues.publicKey;\n\n  return (\n    <Form>\n      <Form.Group controlId=\"public-key\">\n        <Form.Label>Public key</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          className=\"text-monospace\"\n          rows={16}\n          value={values.publicKey}\n          onChange={(e) => setValues({ ...values, publicKey: e.target.value })}\n        />\n      </Form.Group>\n      <Button\n        variant=\"danger\"\n        disabled={!canSubmit || isUpdatingSettings}\n        onClick={() => onSubmit(values)}\n      >\n        {isUpdatingSettings && (\n          <Spinner className=\"mr-2\" size=\"sm\" animation=\"border\" role=\"status\" />\n        )}\n        Change\n      </Button>\n    </Form>\n  );\n};\n\nexport default (): React.ReactElement => {\n  const [draftRealmSettings, setDraftRealmSettings] = useState<RealmSettings | null>(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isUpdatingSettings, setIsUpdatingSettings] = useState(false);\n  const formAlerts = useAlerts();\n  const astarte = useAstarte();\n  const navigate = useNavigate();\n\n  const authConfigFetcher = useFetch(astarte.client.getConfigAuth);\n\n  const showModal = useCallback(() => setIsModalVisible(true), [setIsModalVisible]);\n\n  const dismissModal = useCallback(() => setIsModalVisible(false), [setIsModalVisible]);\n\n  const handleFormSubmit = useCallback(\n    (realmSettings: RealmSettings) => {\n      setDraftRealmSettings(realmSettings);\n      showModal();\n    },\n    [setDraftRealmSettings, showModal],\n  );\n\n  const applyNewSettings = useCallback(() => {\n    if (draftRealmSettings == null) {\n      return;\n    }\n    setIsUpdatingSettings(true);\n    astarte.client\n      .updateConfigAuth({ publicKey: draftRealmSettings.publicKey })\n      .then(() => {\n        navigate('/logout');\n      })\n      .catch((err) => {\n        setIsUpdatingSettings(false);\n        dismissModal();\n        formAlerts.showError(err.message);\n      });\n  }, [\n    setIsUpdatingSettings,\n    astarte.client,\n    draftRealmSettings,\n    navigate,\n    dismissModal,\n    formAlerts.showError,\n  ]);\n\n  return (\n    <SingleCardPage title=\"Realm Settings\">\n      <formAlerts.Alerts />\n      <WaitForData\n        data={authConfigFetcher.value}\n        status={authConfigFetcher.status}\n        fallback={\n          <Container fluid className=\"text-center\">\n            <Spinner animation=\"border\" role=\"status\" />\n          </Container>\n        }\n        errorFallback={\n          <Empty title=\"Couldn't load realm settings\" onRetry={authConfigFetcher.refresh} />\n        }\n      >\n        {({ publicKey }) => (\n          <RealmSettingsForm\n            initialValues={{ publicKey }}\n            onSubmit={handleFormSubmit}\n            isUpdatingSettings={isUpdatingSettings}\n          />\n        )}\n      </WaitForData>\n      {isModalVisible && (\n        <ConfirmModal\n          title=\"Confirm Public Key Update\"\n          confirmLabel=\"Update settings\"\n          confirmVariant=\"danger\"\n          onCancel={dismissModal}\n          onConfirm={applyNewSettings}\n          isConfirming={isUpdatingSettings}\n        >\n          <p>\n            Realm public key will be changed, users will not be able to make further API calls using\n            their current auth token. Confirm?\n          </p>\n        </ConfirmModal>\n      )}\n    </SingleCardPage>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Card, Col } from 'react-bootstrap';\nimport type { ColProps } from 'react-bootstrap';\n\nconst FullHeightCard = (props: ColProps): React.ReactElement => {\n  const { children, className, ...remainingProps } = props;\n\n  return (\n    <Col className={className} {...remainingProps}>\n      <Card className=\"h-100\">{children}</Card>\n    </Col>\n  );\n};\n\nexport default FullHeightCard;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Button, Card } from 'react-bootstrap';\n\nimport type { AstarteDevice } from 'astarte-client';\nimport FullHeightCard from '../components/FullHeightCard';\nimport Icon from '../components/Icon';\n\ninterface ConnectionStatusProps {\n  status: AstarteDevice['connectionStatus'];\n}\n\nconst ConnectionStatus = ({ status }: ConnectionStatusProps): React.ReactElement => {\n  let statusString;\n  let icon;\n\n  switch (status) {\n    case 'connected':\n      statusString = 'Connected';\n      icon = 'statusConnected' as const;\n      break;\n\n    case 'disconnected':\n      statusString = 'Disconnected';\n      icon = 'statusDisconnected' as const;\n      break;\n\n    case 'never_connected':\n    default:\n      statusString = 'Never connected';\n      icon = 'statusNeverConnected' as const;\n      break;\n  }\n\n  return (\n    <>\n      <Icon icon={icon} className=\"mr-1\" />\n      <span>{statusString}</span>\n    </>\n  );\n};\n\ninterface DeviceInfoCardProps {\n  device: AstarteDevice;\n  onInhibitCredentialsClick: () => void;\n  onEnableCredentialsClick: () => void;\n  onWipeCredentialsClick: () => void;\n}\n\nconst DeviceInfoCard = ({\n  device,\n  onInhibitCredentialsClick,\n  onEnableCredentialsClick,\n  onWipeCredentialsClick,\n}: DeviceInfoCardProps): React.ReactElement => (\n  <FullHeightCard xs={12} md={6} className=\"mb-4\">\n    <Card.Header as=\"h5\">Device Info</Card.Header>\n    <Card.Body className=\"d-flex flex-column\">\n      <h6>Device ID</h6>\n      <p className=\"text-monospace\">{device.id}</p>\n      <h6>Device name</h6>\n      <p>{device.hasNameAlias ? device.name : 'No name alias set'}</p>\n      <h6>Status</h6>\n      <p>\n        <ConnectionStatus status={device.connectionStatus} />\n      </p>\n      <h6>Credentials inhibited</h6>\n      <p>{device.hasCredentialsInhibited ? 'True' : 'False'}</p>\n      <div className=\"mt-auto\">\n        {device.hasCredentialsInhibited ? (\n          <Button variant=\"success text-white\" className=\"mr-1\" onClick={onEnableCredentialsClick}>\n            Enable credentials request\n          </Button>\n        ) : (\n          <Button variant=\"danger\" className=\"mr-1\" onClick={onInhibitCredentialsClick}>\n            Inhibit credentials\n          </Button>\n        )}\n        <Button variant=\"danger\" onClick={onWipeCredentialsClick}>\n          Wipe credential secret\n        </Button>\n      </div>\n    </Card.Body>\n  </FullHeightCard>\n);\n\nexport default DeviceInfoCard;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Button, Card, Table } from 'react-bootstrap';\n\nimport type { AstarteDevice } from 'astarte-client';\nimport FullHeightCard from '../components/FullHeightCard';\nimport Icon from '../components/Icon';\n\ninterface AliasKeyValuePair {\n  key: string;\n  value: string;\n}\n\ninterface AliasesTableProps {\n  aliases: Map<string, string>;\n  onEditAliasClick: (key: string) => void;\n  onRemoveAliasClick: ({ key, value }: AliasKeyValuePair) => void;\n}\n\nconst AliasesTable = ({\n  aliases,\n  onEditAliasClick,\n  onRemoveAliasClick,\n}: AliasesTableProps): React.ReactElement => (\n  <Table responsive>\n    <thead>\n      <tr>\n        <th>Tag</th>\n        <th>Alias</th>\n        <th className=\"action-column\">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {Array.from(aliases.entries()).map(([key, value]) => (\n        <tr key={key}>\n          <td>{key}</td>\n          <td>{value}</td>\n          <td className=\"text-center\">\n            <Icon icon=\"edit\" className=\"color-grey mr-2\" onClick={() => onEditAliasClick(key)} />\n            <Icon icon=\"erase\" onClick={() => onRemoveAliasClick({ key, value })} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\ninterface AliasesCardProps {\n  device: AstarteDevice;\n  onNewAliasClick: () => void;\n  onEditAliasClick: (key: string) => void;\n  onRemoveAliasClick: ({ key, value }: AliasKeyValuePair) => void;\n}\n\nconst AliasesCard = ({\n  device,\n  onNewAliasClick,\n  onEditAliasClick,\n  onRemoveAliasClick,\n}: AliasesCardProps): React.ReactElement => (\n  <FullHeightCard xs={12} md={6} className=\"mb-4\">\n    <Card.Header as=\"h5\">Aliases</Card.Header>\n    <Card.Body className=\"d-flex flex-column\">\n      {device.aliases.size > 0 ? (\n        <AliasesTable\n          aliases={device.aliases}\n          onEditAliasClick={onEditAliasClick}\n          onRemoveAliasClick={onRemoveAliasClick}\n        />\n      ) : (\n        <p>Device has no aliases</p>\n      )}\n      <div className=\"mt-auto\">\n        <Button variant=\"primary\" onClick={onNewAliasClick}>\n          Add new alias\n        </Button>\n      </div>\n    </Card.Body>\n  </FullHeightCard>\n);\n\nexport default AliasesCard;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Button, Card, Table } from 'react-bootstrap';\nimport type { AstarteDevice } from 'astarte-client';\n\nimport FullHeightCard from '../components/FullHeightCard';\nimport Icon from '../components/Icon';\n\ninterface MetadataKeyValuePair {\n  key: string;\n  value: string;\n}\n\ninterface MetadataTableProps {\n  metadata: Map<string, string>;\n  onEditMetadataClick: (key: string) => void;\n  onRemoveMetadataClick: ({ key, value }: MetadataKeyValuePair) => void;\n}\n\nconst MetadataTable = ({\n  metadata,\n  onEditMetadataClick,\n  onRemoveMetadataClick,\n}: MetadataTableProps): React.ReactElement => (\n  <Table responsive>\n    <thead>\n      <tr>\n        <th>Field</th>\n        <th>Value</th>\n        <th className=\"action-column\">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {Array.from(metadata.entries()).map(([key, value]) => (\n        <tr key={key}>\n          <td>{key}</td>\n          <td>{value}</td>\n          <td className=\"text-center\">\n            <Icon\n              icon=\"edit\"\n              className=\"color-grey mr-2\"\n              onClick={() => onEditMetadataClick(key)}\n            />\n            <Icon icon=\"erase\" onClick={() => onRemoveMetadataClick({ key, value })} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\ninterface MetadataCardProps {\n  device: AstarteDevice;\n  onNewMetadataClick: () => void;\n  onEditMetadataClick: (key: string) => void;\n  onRemoveMetadataClick: ({ key, value }: MetadataKeyValuePair) => void;\n}\n\nconst MetadataCard = ({\n  device,\n  onNewMetadataClick,\n  onEditMetadataClick,\n  onRemoveMetadataClick,\n}: MetadataCardProps): React.ReactElement => (\n  <FullHeightCard xs={12} md={6} className=\"mb-4\">\n    <Card.Header as=\"h5\">Metadata</Card.Header>\n    <Card.Body className=\"d-flex flex-column\">\n      {device.metadata.size > 0 ? (\n        <MetadataTable\n          metadata={device.metadata}\n          onEditMetadataClick={onEditMetadataClick}\n          onRemoveMetadataClick={onRemoveMetadataClick}\n        />\n      ) : (\n        <p>Device has no metadata</p>\n      )}\n      <div className=\"mt-auto\">\n        <Button variant=\"primary\" onClick={onNewMetadataClick}>\n          Add new item\n        </Button>\n      </div>\n    </Card.Body>\n  </FullHeightCard>\n);\n\nexport default MetadataCard;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Button, Card, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport type { AstarteDevice } from 'astarte-client';\nimport FullHeightCard from '../components/FullHeightCard';\n\ninterface GroupsTableProps {\n  groups: string[];\n}\n\nconst GroupsTable = ({ groups }: GroupsTableProps): React.ReactElement => (\n  <Table responsive>\n    <thead>\n      <tr>\n        <th>Name</th>\n      </tr>\n    </thead>\n    <tbody>\n      {groups.map((groupName, index) => {\n        const encodedGroupName = encodeURIComponent(encodeURIComponent(groupName));\n        return (\n          <tr key={index}>\n            <td>\n              <Link to={`/groups/${encodedGroupName}/edit`}>{groupName}</Link>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </Table>\n);\n\ninterface GroupsCardProps {\n  device: AstarteDevice;\n  showAddToGropButton: boolean;\n  onAddToGroupClick: () => void;\n}\n\nconst GroupsCard = ({\n  device,\n  showAddToGropButton,\n  onAddToGroupClick,\n}: GroupsCardProps): React.ReactElement => (\n  <FullHeightCard xs={12} md={6} className=\"mb-4\">\n    <Card.Header as=\"h5\">Groups</Card.Header>\n    <Card.Body className=\"d-flex flex-column\">\n      {device.groups.length > 0 ? (\n        <GroupsTable groups={device.groups} />\n      ) : (\n        <p>Device does not belong to any group</p>\n      )}\n      <div className=\"mt-auto\">\n        {showAddToGropButton && (\n          <Button variant=\"primary\" onClick={onAddToGroupClick}>\n            Add to existing group\n          </Button>\n        )}\n      </div>\n    </Card.Body>\n  </FullHeightCard>\n);\n\nexport default GroupsCard;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Card, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport type { AstarteDevice, AstarteDeviceInterfaceStats } from 'astarte-client';\nimport FullHeightCard from '../components/FullHeightCard';\n\ninterface IntrospectionTableProps {\n  deviceId: string;\n  introspection: AstarteDeviceInterfaceStats[];\n}\n\nconst IntrospectionTable = ({\n  deviceId,\n  introspection,\n}: IntrospectionTableProps): React.ReactElement => (\n  <Table responsive>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Major</th>\n        <th>Minor</th>\n      </tr>\n    </thead>\n    <tbody>\n      {introspection.map((iface) => (\n        <tr key={iface.name}>\n          <td>\n            <Link to={`/devices/${deviceId}/interfaces/${iface.name}`}>{iface.name}</Link>\n          </td>\n          <td>{iface.major}</td>\n          <td>{iface.minor}</td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\ninterface IntrospectionCardProps {\n  device: AstarteDevice;\n}\n\nconst IntrospectionCard = ({ device }: IntrospectionCardProps): React.ReactElement => {\n  const introspection = Array.from(device.introspection.values());\n\n  return (\n    <FullHeightCard xs={12} md={6} className=\"mb-4\">\n      <Card.Header as=\"h5\">Interfaces</Card.Header>\n      <Card.Body className=\"d-flex flex-column\">\n        {introspection.length > 0 ? (\n          <IntrospectionTable deviceId={device.id} introspection={introspection} />\n        ) : (\n          <p>No introspection info</p>\n        )}\n      </Card.Body>\n    </FullHeightCard>\n  );\n};\n\nexport default IntrospectionCard;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Card, Table } from 'react-bootstrap';\n\nimport type { AstarteDevice, AstarteDeviceInterfaceStats } from 'astarte-client';\nimport FullHeightCard from '../components/FullHeightCard';\n\ninterface PreviousInterfacesTable {\n  interfaces: AstarteDeviceInterfaceStats[];\n}\n\nconst PreviousInterfacesTable = ({ interfaces }: PreviousInterfacesTable): React.ReactElement => (\n  <Table responsive>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Major</th>\n        <th>Minor</th>\n      </tr>\n    </thead>\n    <tbody>\n      {interfaces.map((iface) => (\n        <tr key={`${iface.name} v${iface.major}`}>\n          <td>{iface.name}</td>\n          <td>{iface.major}</td>\n          <td>{iface.minor}</td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\ninterface PreviousInterfacesCardProps {\n  device: AstarteDevice;\n}\n\nconst PreviousInterfacesCard = ({ device }: PreviousInterfacesCardProps): React.ReactElement => (\n  <FullHeightCard className=\"mb-4\">\n    <Card.Header as=\"h5\">Previous Interfaces</Card.Header>\n    <Card.Body className=\"d-flex flex-column\">\n      {device.previousInterfaces.length > 0 ? (\n        <PreviousInterfacesTable interfaces={device.previousInterfaces} />\n      ) : (\n        <p>No previous interfaces info</p>\n      )}\n    </Card.Body>\n  </FullHeightCard>\n);\n\nexport default PreviousInterfacesCard;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useMemo } from 'react';\nimport { Card, Col, Row, Table } from 'react-bootstrap';\nimport AstarteClient, { AstarteDevice, AstarteDeviceInterfaceStats } from 'astarte-client';\nimport { getDeviceStats } from 'astarte-charts';\nimport { PieChart } from 'astarte-charts/react';\n\nimport FullHeightCard from '../components/FullHeightCard';\n\nconst formatBytes = (bytes: number): string => {\n  if (bytes < 1024) {\n    return `${bytes}B`;\n  }\n  if (bytes < 1024 * 1024) {\n    return `${(bytes / 1024).toFixed(2)}KiB`;\n  }\n  return `${(bytes / (1024 * 1024)).toFixed(2)}MiB`;\n};\n\ntype BytesAndMessagesStats = {\n  name: string;\n  bytes: number;\n  bytesPercent: number;\n  messages: number;\n  messagesPercent: number;\n};\n\ninterface StatsTableRowProps {\n  stats: BytesAndMessagesStats;\n}\n\nconst StatsTableRow = ({ stats }: StatsTableRowProps): React.ReactElement => (\n  <tr>\n    <td>{stats.name}</td>\n    <td className=\"text-right\">{formatBytes(stats.bytes)}</td>\n    <td className=\"d-xl-table-cell d-none text-right\">{`${stats.bytesPercent.toFixed(2)}%`}</td>\n    <td className=\"text-right\">{stats.messages}</td>\n    <td className=\"d-xl-table-cell d-none text-right\">{`${stats.messagesPercent.toFixed(2)}%`}</td>\n  </tr>\n);\n\ninterface ExchangedBytesCardProps {\n  astarte: AstarteClient;\n  device: AstarteDevice;\n}\n\nconst ExchangedBytesCard = ({ astarte, device }: ExchangedBytesCardProps): React.ReactElement => {\n  const deviceStatsProvider = useMemo(\n    () => getDeviceStats(astarte, { deviceId: device.id, stats: 'exchangedBytes' }),\n    [astarte],\n  );\n  const fullList = Array.from(device.introspection.values()).concat(device.previousInterfaces);\n  const totalBytes = device.totalReceivedBytes;\n  const totalMessages = device.totalReceivedMessages;\n\n  const computedStats: BytesAndMessagesStats[] = [];\n  let interfaceBytes = 0;\n  let interfaceMessages = 0;\n  fullList.forEach((interfaceStats: AstarteDeviceInterfaceStats) => {\n    interfaceBytes += interfaceStats.exchangedBytes;\n    interfaceMessages += interfaceStats.exchangedMessages;\n    computedStats.push({\n      name: `${interfaceStats.name} v${interfaceStats.major}.${interfaceStats.minor}`,\n      bytes: interfaceStats.exchangedBytes,\n      bytesPercent: (interfaceStats.exchangedBytes * 100) / totalBytes,\n      messages: interfaceStats.exchangedMessages,\n      messagesPercent: (interfaceStats.exchangedMessages * 100) / totalMessages,\n    });\n  });\n\n  computedStats.push({\n    name: 'Other',\n    bytes: totalBytes - interfaceBytes,\n    bytesPercent: ((totalBytes - interfaceBytes) * 100) / totalBytes,\n    messages: totalMessages - interfaceMessages,\n    messagesPercent: ((totalMessages - interfaceMessages) * 100) / totalMessages,\n  });\n\n  computedStats.push({\n    name: 'Total',\n    bytes: totalBytes,\n    bytesPercent: 100,\n    messages: totalMessages,\n    messagesPercent: 100,\n  });\n\n  return (\n    <FullHeightCard xs={12} className=\"mb-4\">\n      <Card.Header as=\"h5\">Device Stats</Card.Header>\n      <Card.Body className=\"d-flex flex-column\">\n        <Row className=\"mt-3\">\n          <Col>\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th>Interface</th>\n                  <th className=\"text-right\">Bytes</th>\n                  <th className=\"d-xl-table-cell d-none text-right\">Bytes (%)</th>\n                  <th className=\"text-right\">Messages</th>\n                  <th className=\"d-xl-table-cell d-none text-right\">Messages (%)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {computedStats.map((stats) => (\n                  <StatsTableRow key={stats.name} stats={stats} />\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n          <Col sm={12} xl={4}>\n            <PieChart providers={[deviceStatsProvider]} />\n          </Col>\n        </Row>\n      </Card.Body>\n    </FullHeightCard>\n  );\n};\n\nexport default ExchangedBytesCard;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport type { AstarteDevice } from 'astarte-client';\nimport FullHeightCard from '../components/FullHeightCard';\n\ninterface DeviceStatusEventsCardProps {\n  device: AstarteDevice;\n}\n\nconst DeviceStatusEventsCard = ({ device }: DeviceStatusEventsCardProps): React.ReactElement => {\n  const propertyArray = [\n    { label: 'Last seen IP', value: device.lastSeenIp },\n    { label: 'Last credentials request IP', value: device.lastCredentialsRequestIp },\n    { label: 'First credentials request', value: device.firstCredentialsRequest?.toLocaleString() },\n    { label: 'First registration', value: device.firstRegistration?.toLocaleString() },\n    { label: 'Last connection', value: device.lastConnection?.toLocaleString() },\n    { label: 'Last disconnection', value: device.lastDisconnection?.toLocaleString() },\n  ].filter(({ value }) => value !== undefined);\n\n  return (\n    <FullHeightCard xs={12} className=\"mb-4\">\n      <Card.Header as=\"h5\">Device Status Events</Card.Header>\n      <Card.Body className=\"d-flex flex-column\">\n        {propertyArray.map(({ label, value }) => (\n          <React.Fragment key={label}>\n            <h6>{label}</h6>\n            <p>{value}</p>\n          </React.Fragment>\n        ))}\n      </Card.Body>\n    </FullHeightCard>\n  );\n};\n\nexport default DeviceStatusEventsCard;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport AstarteClient, {\n  AstarteDeviceEvent,\n  AstarteDeviceConnectedEvent,\n  AstarteDeviceDisconnectedEvent,\n  AstarteDeviceErrorEvent,\n  AstarteDeviceIncomingDataEvent,\n  AstarteDeviceUnsetPropertyEvent,\n} from 'astarte-client';\nimport FullHeightCard from '../components/FullHeightCard';\n\ninterface SystemEvent {\n  level: 'error' | 'info';\n  message: string;\n  timestamp: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isSystemEvent(arg: any): arg is SystemEvent {\n  return arg && arg.level && (arg.level === 'error' || arg.level === 'info');\n}\n\ntype RenderableEvent = SystemEvent | AstarteDeviceEvent;\n\ninterface WatchDeviceEventsParams {\n  astarte: AstarteClient;\n  deviceId: string;\n  onEventReceived: (event: AstarteDeviceEvent) => void;\n  onErrorMessage: (msg: string) => void;\n  onInfoMessage: (msg: string) => void;\n}\n\nfunction watchDeviceEvents({\n  astarte,\n  deviceId,\n  onEventReceived,\n  onErrorMessage,\n  onInfoMessage,\n}: WatchDeviceEventsParams): void {\n  const salt = Math.floor(Math.random() * 10000);\n  const roomName = `dashboard_${deviceId}_${salt}`;\n\n  astarte\n    .joinRoom(roomName)\n    .then(() => {\n      onInfoMessage(`Joined room for device ${deviceId}`);\n\n      astarte.listenForEvents(roomName, (event) => onEventReceived(event));\n\n      const connectionTriggerPayload = {\n        name: `connectiontrigger-${deviceId}`,\n        device_id: deviceId,\n        simple_trigger: {\n          type: 'device_trigger',\n          on: 'device_connected',\n          device_id: deviceId,\n        },\n      };\n\n      const disconnectionTriggerPayload = {\n        name: `disconnectiontrigger-${deviceId}`,\n        device_id: deviceId,\n        simple_trigger: {\n          type: 'device_trigger',\n          on: 'device_disconnected',\n          device_id: deviceId,\n        },\n      };\n\n      const errorTriggerPayload = {\n        name: `errortrigger-${deviceId}`,\n        device_id: deviceId,\n        simple_trigger: {\n          type: 'device_trigger',\n          on: 'device_error',\n          device_id: deviceId,\n        },\n      };\n\n      const dataTriggerPayload = {\n        name: `datatrigger-${deviceId}`,\n        device_id: deviceId,\n        simple_trigger: {\n          type: 'data_trigger',\n          on: 'incoming_data',\n          interface_name: '*',\n          value_match_operator: '*',\n          match_path: '/*',\n        },\n      };\n\n      astarte\n        .registerVolatileTrigger(roomName, connectionTriggerPayload)\n        .then(() => {\n          onInfoMessage('Watching for device connection events');\n        })\n        .catch(() => {\n          onErrorMessage(\"Coulnd't watch for device connection events\");\n        });\n\n      astarte\n        .registerVolatileTrigger(roomName, disconnectionTriggerPayload)\n        .then(() => {\n          onInfoMessage('Watching for device disconnection events');\n        })\n        .catch(() => {\n          onErrorMessage(\"Coulnd't watch for device disconnection events\");\n        });\n\n      astarte\n        .registerVolatileTrigger(roomName, errorTriggerPayload)\n        .then(() => {\n          onInfoMessage('Watching for device error events');\n        })\n        .catch(() => {\n          onErrorMessage(\"Coulnd't watch for device error events\");\n        });\n\n      astarte\n        .registerVolatileTrigger(roomName, dataTriggerPayload)\n        .then(() => {\n          onInfoMessage('Watching for device data events');\n        })\n        .catch(() => {\n          onErrorMessage(\"Coulnd't watch for device data events\");\n        });\n    })\n    .catch(() => {\n      onErrorMessage(`Couldn't join device ${deviceId} room`);\n    });\n}\n\ninterface TimestampProps {\n  children: Date;\n}\n\nconst Timestamp = ({ children }: TimestampProps): React.ReactElement => {\n  const formattedTimestamp = children.toISOString().substring(11, 23);\n\n  return <small className=\"text-secondary text-monospace mr-2\">{`[${formattedTimestamp}]`}</small>;\n};\n\nconst deviceErrorNameToString = (errorName: string): string => {\n  switch (errorName) {\n    case 'write_on_server_owned_interface':\n      return 'Write on a server owned interface';\n\n    case 'invalid_interface':\n      return 'Invalid interface';\n\n    case 'invalid_path':\n      return 'Invalid path';\n\n    case 'mapping_not_found':\n      return 'Mapping not found';\n\n    case 'interface_loading_failed':\n      return 'Interface loading failed';\n\n    case 'ambiguous_path':\n      return 'Ambiguous path';\n\n    case 'undecodable_bson_payload':\n      return 'Undecodable BSON payload';\n\n    case 'unexpected_value_type':\n      return 'Unexpected value type';\n\n    case 'value_size_exceeded':\n      return 'Value size exceeded';\n\n    case 'unexpected_object_key':\n      return 'Unexpected object key';\n\n    case 'invalid_introspection':\n      return 'Invalid introspection';\n\n    case 'unexpected_control_message':\n      return 'Unexpected control message';\n\n    case 'device_session_not_found':\n      return 'Device session not found';\n\n    case 'resend_interface_properties_failed':\n      return 'Resend interface properties failed';\n\n    case 'empty_cache_error':\n      return 'Empty cache error';\n\n    default:\n      return '';\n  }\n};\n\nconst astarteDeviceEventBody = (event: AstarteDeviceEvent) => {\n  if (event instanceof AstarteDeviceConnectedEvent) {\n    return (\n      <>\n        <Badge variant=\"success\" className=\"mr-2\">\n          device connected\n        </Badge>\n        <span>IP : {event.ip}</span>\n      </>\n    );\n  }\n  if (event instanceof AstarteDeviceDisconnectedEvent) {\n    return (\n      <>\n        <Badge variant=\"warning\" className=\"mr-2\">\n          device disconnected\n        </Badge>\n        <span>Device disconnected</span>\n      </>\n    );\n  }\n  if (event instanceof AstarteDeviceIncomingDataEvent) {\n    return (\n      <>\n        <Badge variant=\"info\" className=\"mr-2\">\n          incoming data\n        </Badge>\n        <span className=\"mr-2\">{event.interfaceName}</span>\n        <span className=\"mr-2\">{event.path}</span>\n        <span className=\"mr-2 text-monospace\">{event.value}</span>\n      </>\n    );\n  }\n  if (event instanceof AstarteDeviceUnsetPropertyEvent) {\n    return (\n      <>\n        <Badge variant=\"info\" className=\"mr-2\">\n          unset property\n        </Badge>\n        <span className=\"mr-2\">{event.interfaceName}</span>\n        <span>{event.path}</span>\n      </>\n    );\n  }\n  if (event instanceof AstarteDeviceErrorEvent) {\n    return (\n      <>\n        <Badge variant=\"danger\" className=\"mr-2\">\n          device error\n        </Badge>\n        <span>{deviceErrorNameToString(event.errorName)}</span>\n      </>\n    );\n  }\n  return <></>;\n};\n\ninterface AstarteDeviceEventDelegateProps {\n  event: AstarteDeviceEvent;\n}\n\nconst AstarteDeviceEventDelegate = ({ event }: AstarteDeviceEventDelegateProps) => (\n  <li className=\"event-device px-2\">\n    <Timestamp>{new Date(event.timestamp)}</Timestamp>\n    {astarteDeviceEventBody(event)}\n  </li>\n);\n\ninterface SystemEventDelegateProps {\n  event: SystemEvent;\n}\n\nconst SystemEventDelegate = ({ event }: SystemEventDelegateProps) => {\n  switch (event.level) {\n    case 'error':\n      return (\n        <li className=\"px-2\">\n          <Timestamp>{new Date(event.timestamp)}</Timestamp>\n          <Badge variant=\"secondary\" className=\"mr-2\">\n            channel\n          </Badge>\n          <span className=\"text-danger\">{event.message}</span>\n        </li>\n      );\n\n    case 'info':\n    default:\n      return (\n        <li className=\"px-2\">\n          <Timestamp>{new Date(event.timestamp)}</Timestamp>\n          <Badge variant=\"secondary\" className=\"mr-2\">\n            channel\n          </Badge>\n          <span className=\"text-secondary\">{event.message}</span>\n        </li>\n      );\n  }\n};\n\ninterface EventDelegateProps {\n  event: RenderableEvent;\n}\n\nconst EventDelegate = ({ event }: EventDelegateProps) => {\n  if (isSystemEvent(event)) {\n    return <SystemEventDelegate event={event} />;\n  }\n\n  return <AstarteDeviceEventDelegate event={event} />;\n};\n\ninterface DeviceLiveEventsViewProps {\n  astarte: AstarteClient;\n  deviceId: string;\n}\n\nconst DeviceLiveEventsView = ({\n  astarte,\n  deviceId,\n}: DeviceLiveEventsViewProps): React.ReactElement => {\n  const [deviceEvents, setDeviceEvents] = useState<RenderableEvent[]>([]);\n\n  const registerEvent = (event: RenderableEvent) => {\n    setDeviceEvents((oldEvents: RenderableEvent[]) => [...oldEvents, event]);\n  };\n\n  const sendErrorMessage = (errorMessage: string) =>\n    registerEvent({\n      message: errorMessage,\n      level: 'error',\n      timestamp: Date.now(),\n    });\n\n  const sendInfoMessage = (infoMessage: string) =>\n    registerEvent({\n      message: infoMessage,\n      level: 'info',\n      timestamp: Date.now(),\n    });\n\n  useEffect(() => {\n    const handleSocketError = () => sendErrorMessage('Astarte channels communication error');\n    const handleSocketClose = () => sendErrorMessage('Lost connection with the Astarte channel');\n\n    astarte.addListener('socketError', handleSocketError);\n    astarte.addListener('socketClose', handleSocketClose);\n\n    watchDeviceEvents({\n      astarte,\n      deviceId,\n      onEventReceived: registerEvent,\n      onErrorMessage: sendErrorMessage,\n      onInfoMessage: sendInfoMessage,\n    });\n\n    return () => {\n      astarte.removeListener('socketError', handleSocketError);\n      astarte.removeListener('socketClose', handleSocketClose);\n      astarte.joinedRooms.forEach((room: string) => {\n        astarte.leaveRoom(room);\n      });\n    };\n  }, [deviceId, astarte]);\n\n  return (\n    <div className=\"device-event-container p-3\">\n      <ul className=\"list-unstyled\">\n        {deviceEvents.map((event, index: number) => (\n          <EventDelegate key={index} event={event} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\ninterface DeviceLiveEventsCardProps {\n  astarte: AstarteClient;\n  deviceId: string;\n}\n\nconst DeviceLiveEventsCard = ({\n  astarte,\n  deviceId,\n}: DeviceLiveEventsCardProps): React.ReactElement => (\n  <FullHeightCard xs={12} className=\"mb-4\">\n    <Card.Header as=\"h5\">Device Live Events</Card.Header>\n    <Card.Body className=\"d-flex flex-column\">\n      <DeviceLiveEventsView astarte={astarte} deviceId={deviceId} />\n    </Card.Body>\n  </FullHeightCard>\n);\n\nexport default DeviceLiveEventsCard;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useState } from 'react';\nimport { Button, Modal, Spinner } from 'react-bootstrap';\n\nimport Icon from '../components/Icon';\n\ninterface AddToGroupModalProps {\n  onCancel: () => void;\n  onConfirm: (groupName: string) => void;\n  groups: string[];\n  isAddingToGroup: boolean;\n}\n\nconst AddToGroupModal = ({\n  onCancel,\n  onConfirm,\n  groups,\n  isAddingToGroup,\n}: AddToGroupModalProps): React.ReactElement => {\n  const [selectedGroup, setSelectedGroup] = useState<string | null>(null);\n\n  return (\n    <Modal show centered size=\"lg\" onHide={onCancel}>\n      <Modal.Header closeButton>\n        <Modal.Title>Select Existing Group</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <ul className=\"list-unstyled\">\n          {groups.map((groupName) => (\n            <li\n              key={groupName}\n              className={groupName === selectedGroup ? 'p-2 bg-success text-white' : 'p-2'}\n            >\n              <span onClick={() => setSelectedGroup(groupName)}>\n                <Icon icon=\"add\" className=\"mr-2\" />\n                {groupName}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </Modal.Body>\n      <Modal.Footer>\n        {onCancel && (\n          <Button variant=\"secondary\" onClick={onCancel} style={{ minWidth: '5em' }}>\n            Cancel\n          </Button>\n        )}\n        <Button\n          variant=\"primary\"\n          disabled={isAddingToGroup || selectedGroup === null}\n          onClick={() => {\n            if (selectedGroup) {\n              onConfirm(selectedGroup);\n            }\n          }}\n          style={{ minWidth: '5em' }}\n        >\n          {isAddingToGroup && (\n            <Spinner className=\"mr-2\" size=\"sm\" animation=\"border\" role=\"status\" />\n          )}\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default AddToGroupModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport type { JSONSchema7 } from 'json-schema';\nimport FormModal from '../components/modals/Form';\n\nconst aliasFormSchema: JSONSchema7 = {\n  type: 'object',\n  required: ['key', 'value'],\n  properties: {\n    key: {\n      title: 'Tag',\n      type: 'string',\n    },\n    value: {\n      title: 'Alias',\n      type: 'string',\n    },\n  },\n};\n\ninterface AliasKeyValue {\n  key: string;\n  value: string;\n}\n\ninterface NewAliasModalProps {\n  onCancel: () => void;\n  onConfirm: ({ key, value }: AliasKeyValue) => void;\n  isAddingAlias: boolean;\n}\n\nconst NewAliasModal = ({\n  onCancel,\n  onConfirm,\n  isAddingAlias,\n}: NewAliasModalProps): React.ReactElement => (\n  <FormModal\n    title=\"Add New Alias\"\n    schema={aliasFormSchema}\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n    isConfirming={isAddingAlias}\n  />\n);\n\nexport default NewAliasModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport type { JSONSchema7 } from 'json-schema';\nimport FormModal from '../components/modals/Form';\n\nconst aliasValueFormSchema: JSONSchema7 = {\n  type: 'object',\n  required: ['value'],\n  properties: {\n    value: {\n      title: 'Alias',\n      type: 'string',\n    },\n  },\n};\n\ninterface EditAliasModalProps {\n  onCancel: () => void;\n  onConfirm: ({ value }: { value: string }) => void;\n  targetAlias: string;\n  isUpdatingAlias: boolean;\n}\n\nconst EditAliasModal = ({\n  onCancel,\n  onConfirm,\n  targetAlias,\n  isUpdatingAlias,\n}: EditAliasModalProps): React.ReactElement => (\n  <FormModal\n    title={`Edit \"${targetAlias}\"`}\n    schema={aliasValueFormSchema}\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n    isConfirming={isUpdatingAlias}\n  />\n);\n\nexport default EditAliasModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport type { JSONSchema7 } from 'json-schema';\nimport FormModal from '../components/modals/Form';\n\ninterface MetadataKeyValue {\n  key: string;\n  value?: string;\n}\n\nconst metadataFormSchema: JSONSchema7 = {\n  type: 'object',\n  required: ['key'],\n  properties: {\n    key: {\n      title: 'Key',\n      type: 'string',\n    },\n    value: {\n      title: 'Value',\n      type: 'string',\n    },\n  },\n};\n\ninterface NewMetadataModalProps {\n  onCancel: () => void;\n  onConfirm: ({ key, value }: MetadataKeyValue) => void;\n  isAddingMetadata: boolean;\n}\n\nconst NewMetadataModal = ({\n  onCancel,\n  onConfirm,\n  isAddingMetadata,\n}: NewMetadataModalProps): React.ReactElement => (\n  <FormModal\n    title=\"Add New Item\"\n    schema={metadataFormSchema}\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n    isConfirming={isAddingMetadata}\n  />\n);\n\nexport default NewMetadataModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport type { JSONSchema7 } from 'json-schema';\nimport FormModal from '../components/modals/Form';\n\nconst metadataValueFormSchema: JSONSchema7 = {\n  type: 'object',\n  required: ['value'],\n  properties: {\n    value: {\n      title: 'Metadata',\n      type: 'string',\n    },\n  },\n};\n\ninterface EditMetadataModalProps {\n  onCancel: () => void;\n  onConfirm: ({ value }: { value: string }) => void;\n  targetMetadata: string;\n  isUpdatingMetadata: boolean;\n}\n\nconst EditMetadataModal = ({\n  onCancel,\n  onConfirm,\n  targetMetadata,\n  isUpdatingMetadata,\n}: EditMetadataModalProps): React.ReactElement => (\n  <FormModal\n    title={`Edit \"${targetMetadata}\"`}\n    schema={metadataValueFormSchema}\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n    isConfirming={isUpdatingMetadata}\n  />\n);\n\nexport default EditMetadataModal;\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Col, Container, Row, Spinner } from 'react-bootstrap';\nimport { Link, useParams } from 'react-router-dom';\n\nimport type { AstarteDevice } from 'astarte-client';\nimport BackButton from '../ui/BackButton';\nimport Empty from '../components/Empty';\nimport WaitForData from '../components/WaitForData';\nimport useFetch from '../hooks/useFetch';\nimport { useAlerts } from '../AlertManager';\nimport { useAstarte } from '../AstarteManager';\n\nimport DeviceInfoCard from './DeviceInfoCard';\nimport AliasesCard from './AliasesCard';\nimport MetadataCard from './MetadataCard';\nimport GroupsCard from './GroupsCard';\nimport IntrospectionCard from './IntrospectionCard';\nimport PreviousInterfacesCard from './PreviousInterfacesCard';\nimport ExchangedBytesCard from './ExchangedBytesCard';\nimport DeviceStatusEventsCard from './DeviceStatusEventsCard';\nimport DeviceLiveEventsCard from './DeviceLiveEventsCard';\n\nimport AddToGroupModal from './AddToGroupModal';\nimport NewAliasModal from './NewAliasModal';\nimport EditAliasModal from './EditAliasModal';\nimport NewMetadataModal from './NewMetadataModal';\nimport EditMetadataModal from './EditMetadataModal';\nimport ConfirmModal from '../components/modals/Confirm';\n\ntype WipeCredentialsModalT = {\n  kind: 'wipe_credentials_modal';\n  isWipingCredentials: boolean;\n};\n\ntype AddToGroupModalT = {\n  kind: 'add_to_group_modal';\n  isAddingToGroup: boolean;\n};\n\ntype NewAliasModalT = {\n  kind: 'new_alias_modal';\n  isAddingAlias: boolean;\n};\n\ntype EditAliasModalT = {\n  kind: 'edit_alias_modal';\n  isUpdatingAlias: boolean;\n  targetAlias: string;\n};\n\ntype DeleteAliasModalT = {\n  kind: 'delete_alias_modal';\n  isDeletingAlias: boolean;\n  aliasKey: string;\n  aliasValue: string;\n};\n\ntype NewMetadataModalT = {\n  kind: 'new_metadata_modal';\n  isAddingMetadata: boolean;\n};\n\ntype EditMetadataModalT = {\n  kind: 'edit_metadata_modal';\n  isUpdatingMetadata: boolean;\n  targetMetadata: string;\n};\n\ntype DeleteMetadataModalT = {\n  kind: 'delete_metadata_modal';\n  isDeletingMetadata: boolean;\n  metadataKey: string;\n  metadataValue: string;\n};\n\ntype ReregisterDeviceModalT = {\n  kind: 'reregister_device_modal';\n};\n\nfunction isWipeCredentialsModal(modal: PageModal): modal is WipeCredentialsModalT {\n  return modal.kind === 'wipe_credentials_modal';\n}\n\nfunction isAddToGroupModal(modal: PageModal): modal is AddToGroupModalT {\n  return modal.kind === 'add_to_group_modal';\n}\n\nfunction isNewAliasModal(modal: PageModal): modal is NewAliasModalT {\n  return modal.kind === 'new_alias_modal';\n}\n\nfunction isEditAliasModal(modal: PageModal): modal is EditAliasModalT {\n  return modal.kind === 'edit_alias_modal';\n}\n\nfunction isDeleteAliasModal(modal: PageModal): modal is DeleteAliasModalT {\n  return modal.kind === 'delete_alias_modal';\n}\n\nfunction isNewMetadataModal(modal: PageModal): modal is NewMetadataModalT {\n  return modal.kind === 'new_metadata_modal';\n}\n\nfunction isEditMetadataModal(modal: PageModal): modal is EditMetadataModalT {\n  return modal.kind === 'edit_metadata_modal';\n}\n\nfunction isDeleteMetadataModal(modal: PageModal): modal is DeleteMetadataModalT {\n  return modal.kind === 'delete_metadata_modal';\n}\n\nfunction isDeviceReregistrationModal(modal: PageModal): modal is ReregisterDeviceModalT {\n  return modal.kind === 'reregister_device_modal';\n}\n\ntype PageModal =\n  | WipeCredentialsModalT\n  | AddToGroupModalT\n  | NewAliasModalT\n  | EditAliasModalT\n  | DeleteAliasModalT\n  | NewMetadataModalT\n  | EditMetadataModalT\n  | DeleteMetadataModalT\n  | ReregisterDeviceModalT;\n\nexport default (): React.ReactElement => {\n  const { deviceId } = useParams();\n  const astarte = useAstarte();\n  const deviceFetcher = useFetch(() => astarte.client.getDeviceInfo(deviceId));\n  const groupsFetcher = useFetch(() => astarte.client.getGroupList());\n  const devicePageAlers = useAlerts();\n  const [activeModal, setActiveModal] = useState<PageModal | null>(null);\n\n  const unjoinedGroups = useMemo(() => {\n    if (deviceFetcher.status === 'ok' && groupsFetcher.status === 'ok') {\n      const joinedGroups = new Set(deviceFetcher.value.groups);\n      return groupsFetcher.value.filter((groupName) => !joinedGroups.has(groupName));\n    }\n    return [];\n  }, [deviceFetcher.status, groupsFetcher.status]);\n\n  const dismissModal = useCallback(() => {\n    setActiveModal(null);\n  }, []);\n\n  const inhibitDeviceCredentialsRequests = useCallback(\n    (inhibit) => {\n      astarte.client\n        .inhibitDeviceCredentialsRequests(deviceId, inhibit)\n        .then(() => {\n          deviceFetcher.refresh();\n        })\n        .catch(() => {\n          devicePageAlers.showError(\n            `Couldn't ${inhibit ? 'inhibit' : 'enable'} device credentials requests`,\n          );\n        });\n    },\n    [astarte.client, deviceId],\n  );\n\n  const wipeDeviceCredentials = useCallback(() => {\n    astarte.client\n      .wipeDeviceCredentials(deviceId)\n      .then(() => {\n        setActiveModal({ kind: 'reregister_device_modal' });\n      })\n      .catch(() => {\n        devicePageAlers.showError(`Couldn't wipe the device credential secret`);\n        dismissModal();\n      });\n  }, [astarte.client, deviceId]);\n\n  const addDeviceToGroup = useCallback(\n    (groupName) => {\n      astarte.client\n        .addDeviceToGroup({\n          groupName,\n          deviceId,\n        })\n        .then(() => {\n          deviceFetcher.refresh();\n          dismissModal();\n        })\n        .catch(() => {\n          devicePageAlers.showError(`Couldn't add the device to the group`);\n          dismissModal();\n        });\n    },\n    [astarte.client],\n  );\n\n  const handleAliasUpdate = useCallback(\n    (key, value) => {\n      astarte.client\n        .insertDeviceAlias(deviceId, key, value)\n        .then(() => {\n          dismissModal();\n          deviceFetcher.refresh();\n        })\n        .catch(() => {\n          devicePageAlers.showError(`Couldn't update the device alias`);\n          dismissModal();\n        });\n    },\n    [astarte.client, deviceId],\n  );\n\n  const handleAliasDeletion = useCallback(\n    (key) => {\n      astarte.client\n        .deleteDeviceAlias(deviceId, key)\n        .then(() => {\n          dismissModal();\n          deviceFetcher.refresh();\n        })\n        .catch(() => {\n          devicePageAlers.showError(`Couldn't delete the device alias`);\n          dismissModal();\n        });\n    },\n    [astarte.client, deviceId],\n  );\n\n  const handleMetadataUpdate = useCallback(\n    (key, value) => {\n      astarte.client\n        .insertDeviceMetadata(deviceId, key, value)\n        .then(() => {\n          dismissModal();\n          deviceFetcher.refresh();\n        })\n        .catch(() => {\n          devicePageAlers.showError(`Couldn't update the device metadata`);\n          dismissModal();\n        });\n    },\n    [astarte.client, deviceId],\n  );\n\n  const handleMetadataDeletion = useCallback(\n    (key) => {\n      astarte.client\n        .deleteDeviceMetadata(deviceId, key)\n        .then(() => {\n          dismissModal();\n          deviceFetcher.refresh();\n        })\n        .catch(() => {\n          devicePageAlers.showError(`Couldn't delete the device metadata`);\n          dismissModal();\n        });\n    },\n    [astarte.client, deviceId],\n  );\n\n  return (\n    <Container fluid className=\"p-3\">\n      <Row>\n        <Col>\n          <h2 className=\"pl-2\">\n            <BackButton href=\"/devices\" />\n            Device\n          </h2>\n        </Col>\n      </Row>\n      <devicePageAlers.Alerts />\n      <WaitForData\n        data={deviceFetcher.value}\n        status={deviceFetcher.status}\n        fallback={\n          <Container fluid className=\"text-center\">\n            <Spinner animation=\"border\" role=\"status\" />\n          </Container>\n        }\n        errorFallback={\n          <Empty title=\"Couldn't load device details\" onRetry={deviceFetcher.refresh} />\n        }\n      >\n        {(device: AstarteDevice) => {\n          const fullInterfaceList = Array.from(device.introspection.values()).concat(\n            device.previousInterfaces,\n          );\n\n          return (\n            <Row>\n              <DeviceInfoCard\n                device={device}\n                onInhibitCredentialsClick={() => inhibitDeviceCredentialsRequests(true)}\n                onEnableCredentialsClick={() => inhibitDeviceCredentialsRequests(false)}\n                onWipeCredentialsClick={() =>\n                  setActiveModal({\n                    kind: 'wipe_credentials_modal',\n                    isWipingCredentials: false,\n                  })\n                }\n              />\n              <AliasesCard\n                device={device}\n                onNewAliasClick={() =>\n                  setActiveModal({\n                    kind: 'new_alias_modal',\n                    isAddingAlias: false,\n                  })\n                }\n                onEditAliasClick={(alias) =>\n                  setActiveModal({\n                    kind: 'edit_alias_modal',\n                    targetAlias: alias,\n                    isUpdatingAlias: false,\n                  })\n                }\n                onRemoveAliasClick={({ key, value }) =>\n                  setActiveModal({\n                    kind: 'delete_alias_modal',\n                    aliasKey: key,\n                    aliasValue: value,\n                    isDeletingAlias: false,\n                  })\n                }\n              />\n              <MetadataCard\n                device={device}\n                onNewMetadataClick={() =>\n                  setActiveModal({\n                    kind: 'new_metadata_modal',\n                    isAddingMetadata: false,\n                  })\n                }\n                onEditMetadataClick={(metadata) =>\n                  setActiveModal({\n                    kind: 'edit_metadata_modal',\n                    targetMetadata: metadata,\n                    isUpdatingMetadata: false,\n                  })\n                }\n                onRemoveMetadataClick={({ key, value }) =>\n                  setActiveModal({\n                    kind: 'delete_metadata_modal',\n                    metadataKey: key,\n                    metadataValue: value,\n                    isDeletingMetadata: false,\n                  })\n                }\n              />\n              <GroupsCard\n                device={device}\n                showAddToGropButton={unjoinedGroups.length > 0}\n                onAddToGroupClick={() =>\n                  setActiveModal({\n                    kind: 'add_to_group_modal',\n                    isAddingToGroup: false,\n                  })\n                }\n              />\n              <IntrospectionCard device={device} />\n              <PreviousInterfacesCard device={device} />\n              {fullInterfaceList.length > 0 && (\n                <ExchangedBytesCard astarte={astarte.client} device={device} />\n              )}\n              <DeviceStatusEventsCard device={device} />\n              <DeviceLiveEventsCard astarte={astarte.client} deviceId={device.id} />\n            </Row>\n          );\n        }}\n      </WaitForData>\n      {activeModal && isWipeCredentialsModal(activeModal) && (\n        <ConfirmModal\n          title=\"Wipe Device Credentials\"\n          confirmLabel=\"Wipe credentials secret\"\n          confirmVariant=\"danger\"\n          onCancel={dismissModal}\n          onConfirm={() => {\n            setActiveModal({ ...activeModal, isWipingCredentials: true });\n            wipeDeviceCredentials();\n          }}\n          isConfirming={activeModal.isWipingCredentials}\n        >\n          <p>\n            This will remove the current device credential secret from Astarte, forcing the device\n            to register again and store its new credentials secret. Continue?\n          </p>\n        </ConfirmModal>\n      )}\n      {activeModal && isAddToGroupModal(activeModal) && (\n        <AddToGroupModal\n          onCancel={dismissModal}\n          onConfirm={(groupName) => {\n            setActiveModal({ ...activeModal, isAddingToGroup: true });\n            addDeviceToGroup(groupName);\n          }}\n          groups={unjoinedGroups}\n          isAddingToGroup={activeModal.isAddingToGroup}\n        />\n      )}\n      {activeModal && isNewAliasModal(activeModal) && (\n        <NewAliasModal\n          onCancel={dismissModal}\n          onConfirm={({ key, value }) => {\n            setActiveModal({ ...activeModal, isAddingAlias: true });\n            handleAliasUpdate(key, value);\n          }}\n          isAddingAlias={activeModal.isAddingAlias}\n        />\n      )}\n      {activeModal && isEditAliasModal(activeModal) && (\n        <EditAliasModal\n          onCancel={dismissModal}\n          onConfirm={({ value }) => {\n            setActiveModal({ ...activeModal, isUpdatingAlias: true });\n            handleAliasUpdate(activeModal.targetAlias, value);\n          }}\n          targetAlias={activeModal.targetAlias}\n          isUpdatingAlias={activeModal.isUpdatingAlias}\n        />\n      )}\n      {activeModal && isDeleteAliasModal(activeModal) && (\n        <ConfirmModal\n          title=\"Delete Alias\"\n          confirmLabel=\"Delete\"\n          confirmVariant=\"danger\"\n          onCancel={dismissModal}\n          onConfirm={() => {\n            setActiveModal({ ...activeModal, isDeletingAlias: true });\n            handleAliasDeletion(activeModal.aliasKey);\n          }}\n          isConfirming={activeModal.isDeletingAlias}\n        >\n          <p>{`Delete alias \"${activeModal.aliasValue}\"?`}</p>\n        </ConfirmModal>\n      )}\n      {activeModal && isNewMetadataModal(activeModal) && (\n        <NewMetadataModal\n          onCancel={dismissModal}\n          onConfirm={({ key, value }) => {\n            setActiveModal({ ...activeModal, isAddingMetadata: true });\n            handleMetadataUpdate(key, value);\n          }}\n          isAddingMetadata={activeModal.isAddingMetadata}\n        />\n      )}\n      {activeModal && isEditMetadataModal(activeModal) && (\n        <EditMetadataModal\n          onCancel={dismissModal}\n          onConfirm={({ value }) => {\n            setActiveModal({ ...activeModal, isUpdatingMetadata: true });\n            handleMetadataUpdate(activeModal.targetMetadata, value);\n          }}\n          targetMetadata={activeModal.targetMetadata}\n          isUpdatingMetadata={activeModal.isUpdatingMetadata}\n        />\n      )}\n      {activeModal && isDeleteMetadataModal(activeModal) && (\n        <ConfirmModal\n          title=\"Delete Item\"\n          confirmLabel=\"Delete\"\n          confirmVariant=\"danger\"\n          onCancel={dismissModal}\n          onConfirm={() => {\n            setActiveModal({ ...activeModal, isDeletingMetadata: true });\n            handleMetadataDeletion(activeModal.metadataKey);\n          }}\n          isConfirming={activeModal.isDeletingMetadata}\n        >\n          <p>{`Do you want to delete ${activeModal.metadataKey} from metadata?`}</p>\n        </ConfirmModal>\n      )}\n      {activeModal && isDeviceReregistrationModal(activeModal) && (\n        <ConfirmModal title=\"Device Credentials Wiped\" confirmLabel=\"Ok\" onConfirm={dismissModal}>\n          <p>\n            The device&apos;s credentials secret was wiped from Astarte. You can&nbsp;\n            <Link to={`/devices/register?deviceId=${deviceId}`}>click here</Link> to register the\n            device again and retrieve its new credentials secret.\n          </p>\n        </ConfirmModal>\n      )}\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, Container, Spinner, Table } from 'react-bootstrap';\nimport type {\n  AstarteDataTuple,\n  AstarteDataTreeNode,\n  AstartePropertyData,\n  AstarteDatastreamIndividualData,\n  AstarteDatastreamObjectData,\n} from 'astarte-client';\nimport _ from 'lodash';\n\nimport BackButton from './ui/BackButton';\nimport Empty from './components/Empty';\nimport WaitForData from './components/WaitForData';\nimport useFetch from './hooks/useFetch';\nimport { useAstarte } from './AstarteManager';\n\nconst MAX_SHOWN_VALUES = 20;\n\nfunction formatAstarteData(data?: AstarteDataTuple): string {\n  const value = data?.value;\n  if (value == null) {\n    return '';\n  }\n  if (_.isArray(value)) {\n    return JSON.stringify(value);\n  }\n  if (_.isBoolean(value)) {\n    return value ? 'true' : 'false';\n  }\n  if (_.isNumber(value)) {\n    return value.toString();\n  }\n  if (_.isNull(value)) {\n    return '';\n  }\n  return String(value);\n}\n\ninterface PropertyTreeProps {\n  treeNode: AstarteDataTreeNode<AstartePropertyData>;\n}\n\nconst PropertyTree = ({ treeNode }: PropertyTreeProps): React.ReactElement => (\n  <pre>\n    <code>{JSON.stringify(treeNode.toLastValue(), null, 2)}</code>\n  </pre>\n);\n\ninterface IndividualDatastreamTableProps {\n  treeNode: AstarteDataTreeNode<AstarteDatastreamIndividualData>;\n}\n\nconst IndividualDatastreamTable = ({\n  treeNode,\n}: IndividualDatastreamTableProps): React.ReactElement => {\n  const dataValues = treeNode.toLinearizedData();\n  if (dataValues.length === 0) {\n    return <p>No data sent by the device.</p>;\n  }\n\n  return (\n    <Table responsive>\n      <thead>\n        <tr>\n          <th>Path</th>\n          <th>Last value</th>\n          <th>Last timestamp</th>\n        </tr>\n      </thead>\n      <tbody>\n        {dataValues.map((dataValue) => (\n          <tr key={dataValue.endpoint}>\n            <td>{dataValue.endpoint}</td>\n            <td>{formatAstarteData(dataValue)}</td>\n            <td>{new Date(dataValue.timestamp).toLocaleString()}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\ninterface ObjectDatastreamTableProps {\n  dataTreeNode: AstarteDataTreeNode<AstarteDatastreamObjectData>;\n}\n\nconst ObjectDatastreamTable = ({\n  dataTreeNode,\n}: ObjectDatastreamTableProps): React.ReactElement => {\n  const treeData = dataTreeNode.toData();\n  if (treeData.length === 0) {\n    return <p>No data sent by the device.</p>;\n  }\n\n  const objectProperties = Object.keys(treeData[0].value);\n  const orderedData = _.orderBy(treeData, 'timestamp', 'desc');\n\n  return (\n    <>\n      <h5 className=\"mb-1\">Path</h5>\n      <p>{dataTreeNode.endpoint}</p>\n      <Table responsive>\n        <thead>\n          <tr>\n            {objectProperties.map((property) => (\n              <th key={property}>{property}</th>\n            ))}\n            <th>Timestamp</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orderedData.slice(0, MAX_SHOWN_VALUES).map((data) => (\n            <tr key={data.timestamp}>\n              {objectProperties.map((property) => (\n                <td key={property}>{formatAstarteData(data.value[property])}</td>\n              ))}\n              <td>{new Date(data.timestamp).toLocaleString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\ninterface ObjectTableListProps {\n  treeNode: AstarteDataTreeNode<AstarteDatastreamObjectData>;\n}\n\nconst ObjectTableList = ({ treeNode }: ObjectTableListProps): React.ReactElement => {\n  const dataTreeLeaves = treeNode.getLeaves();\n  if (dataTreeLeaves.length === 0) {\n    return <p>No data sent by the device.</p>;\n  }\n  return (\n    <>\n      {dataTreeLeaves.map((dataTreeLeaf) => (\n        <ObjectDatastreamTable key={dataTreeLeaf.endpoint} dataTreeNode={dataTreeLeaf} />\n      ))}\n    </>\n  );\n};\n\ninterface InterfaceDataProps {\n  interfaceData:\n    | AstarteDataTreeNode<AstartePropertyData>\n    | AstarteDataTreeNode<AstarteDatastreamIndividualData>\n    | AstarteDataTreeNode<AstarteDatastreamObjectData>;\n}\n\nconst InterfaceData = ({ interfaceData }: InterfaceDataProps): React.ReactElement => {\n  if (interfaceData.dataKind === 'properties') {\n    return <PropertyTree treeNode={interfaceData as AstarteDataTreeNode<AstartePropertyData>} />;\n  }\n  if (interfaceData.dataKind === 'datastream_individual') {\n    return (\n      <IndividualDatastreamTable\n        treeNode={interfaceData as AstarteDataTreeNode<AstarteDatastreamIndividualData>}\n      />\n    );\n  }\n  return (\n    <ObjectTableList treeNode={interfaceData as AstarteDataTreeNode<AstarteDatastreamObjectData>} />\n  );\n};\n\nexport default (): React.ReactElement => {\n  const { deviceId, interfaceName } = useParams();\n  const astarte = useAstarte();\n  const deviceDataFetcher = useFetch(() =>\n    astarte.client.getDeviceDataTree({\n      deviceId,\n      interfaceName,\n    }),\n  );\n\n  return (\n    <Container fluid className=\"p-3\">\n      <h2>\n        <BackButton href={`/devices/${deviceId}/edit`} />\n        Interface Data\n      </h2>\n      <Card className=\"mt-4\">\n        <Card.Header>\n          <span className=\"text-monospace\">{deviceId}</span> /{interfaceName}\n        </Card.Header>\n        <Card.Body>\n          <WaitForData\n            data={deviceDataFetcher.value}\n            status={deviceDataFetcher.status}\n            fallback={\n              <Container fluid className=\"text-center\">\n                <Spinner animation=\"border\" role=\"status\" />\n              </Container>\n            }\n            errorFallback={\n              <Empty title=\"Couldn't load interface data\" onRetry={deviceDataFetcher.refresh} />\n            }\n          >\n            {(data) => <InterfaceData interfaceData={data} />}\n          </WaitForData>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Navigate, Routes, Route, useLocation } from 'react-router-dom';\n\nimport LoginPage from './LoginPage';\nimport HomePage from './HomePage';\nimport GroupsPage from './GroupsPage';\nimport GroupDevicesPage from './GroupDevicesPage';\nimport NewGroupPage from './NewGroupPage';\nimport TriggersPage from './TriggersPage';\nimport NewTriggerPage from './NewTriggerPage';\nimport TriggerPage from './TriggerPage';\nimport InterfacesPage from './InterfacesPage';\nimport InterfacePage from './InterfacePage';\nimport NewInterfacePage from './NewInterfacePage';\nimport DevicesPage from './DevicesPage';\nimport RegisterDevicePage from './RegisterDevicePage';\nimport FlowInstancesPage from './FlowInstancesPage';\nimport FlowDetailsPage from './FlowDetailsPage';\nimport FlowConfigurationPage from './FlowConfigurationPage';\nimport PipelinesPage from './PipelinesPage';\nimport PipelineSourcePage from './PipelineSourcePage';\nimport NewPipelinePage from './NewPipelinePage';\nimport BlocksPage from './BlocksPage';\nimport BlockSourcePage from './BlockSourcePage';\nimport NewBlockPage from './NewBlockPage';\nimport RealmSettingsPage from './RealmSettingsPage';\nimport DeviceStatusPage from './DeviceStatusPage';\nimport DeviceInterfaceValues from './DeviceInterfaceValues';\nimport { useConfig } from './ConfigManager';\nimport { useAstarte } from './AstarteManager';\n\nfunction AttemptLogin(): React.ReactElement {\n  const { search, hash } = useLocation();\n  const astarte = useAstarte();\n  const searchParams = new URLSearchParams(search);\n  const hashParams = new URLSearchParams(hash.slice(1));\n\n  const realm = searchParams.get('realm');\n  const token = hashParams.get('access_token');\n  const authUrl = searchParams.get('authUrl');\n\n  let succesfulLogin = false;\n\n  if (realm && token) {\n    succesfulLogin = astarte.login({ realm, token, authUrl });\n  }\n\n  if (!succesfulLogin) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return <Navigate to=\"/\" />;\n}\n\nfunction Logout(): React.ReactElement {\n  const astarte = useAstarte();\n  astarte.logout();\n\n  return <Navigate to=\"/login\" />;\n}\n\nfunction Login(): React.ReactElement {\n  const { search } = useLocation();\n  const astarte = useAstarte();\n  const config = useConfig();\n\n  if (astarte.isAuthenticated) {\n    return <Navigate to=\"/\" />;\n  }\n\n  const requestedLoginType = new URLSearchParams(search).get('type') || '';\n  const loginType = ['oauth', 'token'].includes(requestedLoginType)\n    ? (requestedLoginType as 'oauth' | 'token')\n    : config.auth.defaultMethod;\n\n  return (\n    <LoginPage\n      type={loginType}\n      canSwitchLoginType={config.auth.methods.length > 1}\n      defaultRealm={config.auth.defaultRealm || ''}\n    />\n  );\n}\n\ntype PrivateRouteProps = React.ComponentProps<typeof Route>;\n\nconst PrivateRoute = ({ ...props }: PrivateRouteProps) => {\n  const astarte = useAstarte();\n  return astarte.isAuthenticated ? <Route {...props} /> : <Navigate to=\"/login\" />;\n};\n\nexport default (): React.ReactElement => (\n  <Routes>\n    <PrivateRoute path=\"/\" element={<HomePage />} />\n    <PrivateRoute path=\"home\" element={<HomePage />} />\n    <Route path=\"auth\" element={<AttemptLogin />} />\n    <Route path=\"logout\" element={<Logout />} />\n    <Route path=\"login\" element={<Login />} />\n    <PrivateRoute path=\"triggers\" element={<TriggersPage />} />\n    <PrivateRoute path=\"triggers/new\" element={<NewTriggerPage />} />\n    <PrivateRoute path=\"triggers/:triggerName/edit\" element={<TriggerPage />} />\n    <PrivateRoute path=\"interfaces\" element={<InterfacesPage />} />\n    <PrivateRoute path=\"interfaces/new\" element={<NewInterfacePage />} />\n    <PrivateRoute\n      path=\"interfaces/:interfaceName/:interfaceMajor/edit\"\n      element={<InterfacePage />}\n    />\n    <PrivateRoute path=\"devices\" element={<DevicesPage />} />\n    <PrivateRoute path=\"devices/register\" element={<RegisterDevicePage />} />\n    <PrivateRoute path=\"devices/:deviceId/edit\" element={<DeviceStatusPage />} />\n    <PrivateRoute\n      path=\"devices/:deviceId/interfaces/:interfaceName\"\n      element={<DeviceInterfaceValues />}\n    />\n    <PrivateRoute path=\"groups\" element={<GroupsPage />} />\n    <PrivateRoute path=\"groups/new\" element={<NewGroupPage />} />\n    <PrivateRoute path=\"groups/:groupName/edit\" element={<GroupDevicesPage />} />\n    <PrivateRoute path=\"flows\" element={<FlowInstancesPage />} />\n    <PrivateRoute path=\"flows/new\" element={<FlowConfigurationPage />} />\n    <PrivateRoute path=\"flows/:flowName/edit\" element={<FlowDetailsPage />} />\n    <PrivateRoute path=\"pipelines\" element={<PipelinesPage />} />\n    <PrivateRoute path=\"pipelines/new\" element={<NewPipelinePage />} />\n    <PrivateRoute path=\"pipelines/:pipelineId/edit\" element={<PipelineSourcePage />} />\n    <PrivateRoute path=\"blocks\" element={<BlocksPage />} />\n    <PrivateRoute path=\"blocks/new\" element={<NewBlockPage />} />\n    <PrivateRoute path=\"blocks/:blockId/edit\" element={<BlockSourcePage />} />\n    <PrivateRoute path=\"settings\" element={<RealmSettingsPage />} />\n    <Route path=\"*\" element={<Navigate to=\"/\" />} />\n  </Routes>\n);\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport { Container, Toast, ToastProps } from 'react-bootstrap';\n\nimport { useGlobalAlertsState, IAlert } from '../AlertManager';\nimport useRelativeTime from '../hooks/useRelativeTime';\n\ntype SnackbarAlertProps = ToastProps & {\n  alert: IAlert;\n};\n\nconst SnackbarAlert = ({ alert, ...props }: SnackbarAlertProps) => {\n  const alertRelativeTime = useRelativeTime(alert.timestamp);\n  return (\n    <Toast {...props} onClose={alert.close} className=\"mx-auto\">\n      <Toast.Header className={`bg-${alert.options.variant} text-light`}>\n        <span className=\"mx-auto\">{alertRelativeTime}</span>\n      </Toast.Header>\n      <Toast.Body>{alert.message}</Toast.Body>\n    </Toast>\n  );\n};\n\nexport default (): React.ReactElement | null => {\n  const alerts = useGlobalAlertsState();\n  if (!alerts || alerts.length === 0) {\n    return null;\n  }\n  return (\n    <Container fluid className=\"fixed-bottom p-3\">\n      {alerts.map((alert) => (\n        <SnackbarAlert key={alert.id} alert={alert} />\n      ))}\n    </Container>\n  );\n};\n","/*\n   This file is part of Astarte.\n\n   Copyright 2020-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React, { useCallback } from 'react';\nimport { BrowserRouter as RouterProvider } from 'react-router-dom';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nimport AlertsProvider from './AlertManager';\nimport ConfigProvider, { useConfig } from './ConfigManager';\nimport InterfaceEditorPage from './InterfaceEditorPage';\nimport Sidebar from './Sidebar';\nimport PageRouter from './Router';\nimport AstarteProvider, { useAstarte } from './AstarteManager';\nimport type { DashboardConfig } from './types';\nimport Snackbar from './ui/Snackbar';\nimport useFetch from './hooks/useFetch';\nimport useInterval from './hooks/useInterval';\n\nconst DashboardSidebar = () => {\n  const config = useConfig();\n  const astarte = useAstarte();\n\n  const healthFetcher = useFetch(() => {\n    const apiChecks = [\n      astarte.client.getAppengineHealth(),\n      astarte.client.getRealmManagementHealth(),\n      astarte.client.getPairingHealth(),\n    ];\n    if (config.features.flow) {\n      apiChecks.push(astarte.client.getFlowHealth());\n    }\n    return Promise.all(apiChecks);\n  });\n\n  useInterval(healthFetcher.refresh, 30000);\n\n  const isApiHealthy = healthFetcher.status !== 'err';\n\n  if (!astarte.isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <Col id=\"main-navbar\" className=\"col-auto nav-col\">\n      <Sidebar>\n        <Sidebar.Brand />\n        <Sidebar.Item label=\"Home\" link=\"/\" icon=\"home\" />\n        <Sidebar.Separator />\n        <Sidebar.Item label=\"Interfaces\" link=\"/interfaces\" icon=\"interfaces\" />\n        <Sidebar.Item label=\"Triggers\" link=\"/triggers\" icon=\"triggers\" />\n        <Sidebar.Separator />\n        <Sidebar.Item label=\"Devices\" link=\"/devices\" icon=\"devices\" />\n        <Sidebar.Item label=\"Groups\" link=\"/groups\" icon=\"groups\" />\n        <Sidebar.Separator />\n        {config.features.flow && (\n          <>\n            <Sidebar.Item label=\"Flows\" link=\"/flows\" icon=\"flows\" />\n            <Sidebar.Item label=\"Pipelines\" link=\"/pipelines\" icon=\"pipelines\" />\n            <Sidebar.Item label=\"Blocks\" link=\"/blocks\" icon=\"blocks\" />\n            <Sidebar.Separator />\n          </>\n        )}\n        <Sidebar.Item label=\"Realm settings\" link=\"/settings\" icon=\"settings\" />\n        <Sidebar.Separator />\n        <Sidebar.ApiStatus healthy={isApiHealthy} realm={astarte.realm} />\n        <Sidebar.Separator />\n        <Sidebar.Item label=\"Logout\" link=\"/logout\" icon=\"logout\" />\n      </Sidebar>\n    </Col>\n  );\n};\n\nconst Dashboard = () => (\n  <Container fluid className=\"px-0\">\n    <Row className=\"no-gutters\">\n      <DashboardSidebar />\n      <Col className=\"main-content vh-100 overflow-auto\">\n        <PageRouter />\n      </Col>\n    </Row>\n  </Container>\n);\n\nconst StandaloneEditor = () => (\n  <Container fluid className=\"px-0\">\n    <Row className=\"no-gutters\">\n      <Col id=\"main-navbar\" className=\"col-auto nav-col\">\n        <Sidebar>\n          <Sidebar.Brand />\n          <Sidebar.Item label=\"Interface Editor\" link=\"/\" icon=\"interfaces\" />\n        </Sidebar>\n      </Col>\n      <Col className=\"main-content vh-100 overflow-auto\">\n        <InterfaceEditorPage />\n      </Col>\n    </Row>\n  </Container>\n);\n\ninterface Props {\n  config: DashboardConfig | null;\n}\n\nexport default ({ config }: Props): React.ReactElement => (\n  <AlertsProvider>\n    <RouterProvider>\n      {config ? (\n        <ConfigProvider config={config}>\n          <AstarteProvider config={config}>\n            <Dashboard />\n          </AstarteProvider>\n        </ConfigProvider>\n      ) : (\n        <StandaloneEditor />\n      )}\n    </RouterProvider>\n    <Snackbar />\n  </AlertsProvider>\n);\n","/*\n   This file is part of Astarte.\n\n   Copyright 2017-2021 Ispirata Srl\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/main.scss';\nimport App from './App';\nimport type { DashboardConfig } from './types';\n\nfetch('/user-config/config.json')\n  .then((response) => response.json())\n  .then((json) => ({\n    astarteApiUrl: json.astarte_api_url,\n    appEngineApiUrl: json.appengine_api_url,\n    realmManagementApiUrl: json.realm_management_api_url,\n    pairingApiUrl: json.pairing_api_url,\n    flowApiUrl: json.flow_api_url,\n    enableFlowPreview: json.enable_flow_preview,\n    auth: json.auth,\n    defaultAuth: json.default_auth,\n    defaultRealm: json.default_realm,\n  }))\n  .catch(() => null)\n  .then((config: DashboardConfig | null) => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App config={config} />\n      </React.StrictMode>,\n      document.getElementById('root'),\n    );\n  });\n"],"sourceRoot":""}